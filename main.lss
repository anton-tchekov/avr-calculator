
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00002db2  00002e46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002db2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002ab  00800108  00800108  00002e4e  2**0
                  ALLOC
  3 .comment      00000024  00000000  00000000  00002e4e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002e74  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000028  00000000  00000000  00002eb0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   000027ca  00000000  00000000  00002ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000af4  00000000  00000000  000056a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000266a  00000000  00000000  00006196  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000340  00000000  00000000  00008800  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000b00  00000000  00000000  00008b40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_loc    00002352  00000000  00000000  00009640  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 00000200  00000000  00000000  0000b992  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d0 0b 	jmp	0x17a0	; 0x17a0 <__vector_7>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	03 6e       	ori	r16, 0xE3	; 227
      6a:	db 36       	cpi	r29, 0x6B	; 107
      6c:	3d 9a       	sbi	0x07, 5	; 7
      6e:	99 99       	sbic	0x13, 1	; 19
      70:	99 3d       	cpi	r25, 0xD9	; 217
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	3e 00       	.word	0x003e	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 4a       	sbci	r16, 0xA8	; 168
      7e:	d7 3b       	cpi	r29, 0xB7	; 183
      80:	3b ce       	rjmp	.-906    	; 0xfffffcf8 <__eeprom_end+0xff7efcf8>
      82:	01 6e       	ori	r16, 0xE1	; 225
      84:	84 bc       	out	0x24, r8	; 36
      86:	bf fd       	.word	0xfdbf	; ????
      88:	c1 2f       	mov	r28, r17
      8a:	3d 6c       	ori	r19, 0xCD	; 205
      8c:	74 31       	cpi	r23, 0x14	; 20
      8e:	9a bd       	out	0x2a, r25	; 42
      90:	56 83       	std	Z+6, r21	; 0x06
      92:	3d da       	rcall	.-2950   	; 0xfffff50e <__eeprom_end+0xff7ef50e>
      94:	3d 00       	.word	0x003d	; ????
      96:	c7 7f       	andi	r28, 0xF7	; 247
      98:	11 be       	out	0x31, r1	; 49
      9a:	d9 e4       	ldi	r29, 0x49	; 73
      9c:	bb 4c       	sbci	r27, 0xCB	; 203
      9e:	3e 91       	ld	r19, -X
      a0:	6b aa       	std	Y+51, r6	; 0x33
      a2:	aa be       	out	0x3a, r10	; 58
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	3f 07       	cpc	r19, r31
      aa:	2c 7a       	andi	r18, 0xAC	; 172
      ac:	a5 ba       	out	0x15, r10	; 21
      ae:	6c c5       	rjmp	.+2776   	; 0xb88 <mode_table_event+0x10>
      b0:	90 da       	rcall	.-2784   	; 0xfffff5d2 <__eeprom_end+0xff7ef5d2>
      b2:	3b 93       	.word	0x933b	; ????
      b4:	65 fc       	sbrc	r6, 5
      b6:	8b bc       	out	0x2b, r8	; 43
      b8:	53 f8       	bld	r5, 3
      ba:	10 fd       	sbrc	r17, 0
      bc:	3c 56       	subi	r19, 0x6C	; 108
      be:	92 83       	std	Z+2, r25	; 0x02
      c0:	4d bd       	out	0x2d, r20	; 45
      c2:	87 9d       	mul	r24, r7
      c4:	3a b6       	in	r3, 0x3a	; 58
      c6:	3d cb       	rjmp	.-2438   	; 0xfffff742 <__eeprom_end+0xff7ef742>
      c8:	c9 bf       	out	0x39, r28	; 57
      ca:	5b be       	out	0x3b, r5	; 59
      cc:	73 da       	rcall	.-2842   	; 0xfffff5b4 <__eeprom_end+0xff7ef5b4>
      ce:	0f c9       	rjmp	.-3554   	; 0xfffff2ee <__eeprom_end+0xff7ef2ee>
      d0:	3f 05       	cpc	r19, r15
      d2:	a8 4c       	sbci	r26, 0xC8	; 200
      d4:	cd b2       	in	r12, 0x1d	; 29
      d6:	d4 4e       	sbci	r29, 0xE4	; 228
      d8:	b9 38       	cpi	r27, 0x89	; 137
      da:	36 a9       	ldd	r19, Z+54	; 0x36
      dc:	02 0c       	add	r0, r2
      de:	50 b9       	out	0x00, r21	; 0
      e0:	91 86       	std	Z+9, r9	; 0x09
      e2:	88 08       	sbc	r8, r8
      e4:	3c a6       	std	Y+44, r3	; 0x2c
      e6:	aa aa       	std	Y+50, r10	; 0x32
      e8:	2a be       	out	0x3a, r2	; 58
      ea:	00 00       	nop
      ec:	00 80       	ld	r0, Z
      ee:	3f 08       	sbc	r3, r15
      f0:	00 00       	nop
      f2:	00 be       	out	0x30, r0	; 48
      f4:	92 24       	eor	r9, r2
      f6:	49 12       	cpse	r4, r25
      f8:	3e ab       	std	Y+54, r19	; 0x36
      fa:	aa aa       	std	Y+50, r10	; 0x32
      fc:	2a be       	out	0x3a, r2	; 58
      fe:	cd cc       	rjmp	.-1638   	; 0xfffffa9a <__eeprom_end+0xff7efa9a>
     100:	cc 4c       	sbci	r28, 0xCC	; 204
     102:	3e 00       	.word	0x003e	; ????
     104:	00 00       	nop
     106:	80 be       	out	0x30, r8	; 48
     108:	ab aa       	std	Y+51, r10	; 0x33
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	3e 00       	.word	0x003e	; ????
     10e:	00 00       	nop
     110:	00 bf       	out	0x30, r16	; 48
     112:	00 00       	nop
     114:	00 80       	ld	r0, Z
     116:	3f 00       	.word	0x003f	; ????
     118:	00 00       	nop
     11a:	00 00       	nop
     11c:	08 41       	sbci	r16, 0x18	; 24
     11e:	78 d3       	rcall	.+1776   	; 0x810 <calc_solve+0x188>
     120:	bb 43       	sbci	r27, 0x3B	; 59
     122:	87 d1       	rcall	.+782    	; 0x432 <mode_error_event+0x2>
     124:	13 3d       	cpi	r17, 0xD3	; 211
     126:	19 0e       	add	r1, r25
     128:	3c c3       	rjmp	.+1656   	; 0x7a2 <calc_solve+0x11a>
     12a:	bd 42       	sbci	r27, 0x2D	; 45
     12c:	82 ad       	ldd	r24, Z+58	; 0x3a
     12e:	2b 3e       	cpi	r18, 0xEB	; 235
     130:	68 ec       	ldi	r22, 0xC8	; 200
     132:	82 76       	andi	r24, 0x62	; 98
     134:	be d9       	rcall	.-3204   	; 0xfffff4b2 <__eeprom_end+0xff7ef4b2>
     136:	8f e1       	ldi	r24, 0x1F	; 31
     138:	a9 3e       	cpi	r26, 0xE9	; 233
     13a:	4c 80       	ldd	r4, Y+4	; 0x04
     13c:	ef ff       	.word	0xffef	; ????
     13e:	be 01       	movw	r22, r28
     140:	c4 ff       	sbrs	r28, 4
     142:	7f 3f       	cpi	r23, 0xFF	; 255
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 06       	cpc	r0, r16
     14a:	64 ec       	ldi	r22, 0xC4	; 196
     14c:	1b 3c       	cpi	r17, 0xCB	; 203
     14e:	04 bc       	out	0x24, r0	; 36
     150:	16 3e       	cpi	r17, 0xE6	; 230
     152:	3b e5       	ldi	r19, 0x5B	; 91
     154:	b9 3c       	cpi	r27, 0xC9	; 201
     156:	c9 3c       	cpi	r28, 0xC9	; 201
     158:	37 c2       	rjmp	.+1134   	; 0x5c8 <mode_input+0x8>
     15a:	9e 5a       	subi	r25, 0xAE	; 174
     15c:	3d 66       	ori	r19, 0x6D	; 109
     15e:	04 98       	cbi	0x00, 4	; 0
     160:	08 3e       	cpi	r16, 0xE8	; 232
     162:	ea 69       	ori	r30, 0x9A	; 154
     164:	aa aa       	std	Y+50, r10	; 0x32
     166:	3e 00       	.word	0x003e	; ????
     168:	00 00       	nop
     16a:	80 3f       	cpi	r24, 0xF0	; 240
     16c:	07 63       	ori	r16, 0x37	; 55
     16e:	42 36       	cpi	r20, 0x62	; 98
     170:	b7 9b       	sbis	0x16, 7	; 22
     172:	d8 a7       	std	Y+40, r29	; 0x28
     174:	1a 39       	cpi	r17, 0x9A	; 154
     176:	68 56       	subi	r22, 0x68	; 104
     178:	18 ae       	std	Y+56, r1	; 0x38
     17a:	ba ab       	std	Y+50, r27	; 0x32
     17c:	55 8c       	ldd	r5, Z+29	; 0x1d
     17e:	1d 3c       	cpi	r17, 0xCD	; 205
     180:	b7 cc       	rjmp	.-1682   	; 0xfffffaf0 <__eeprom_end+0xff7efaf0>
     182:	57 63       	ori	r21, 0x37	; 55
     184:	bd 6d       	ori	r27, 0xDD	; 221
     186:	ed fd       	.word	0xfded	; ????
     188:	75 3e       	cpi	r23, 0xE5	; 229
     18a:	f6 17       	cp	r31, r22
     18c:	72 31       	cpi	r23, 0x12	; 18
     18e:	bf 00       	.word	0x00bf	; ????
     190:	00 00       	nop
     192:	80 3f       	cpi	r24, 0xF0	; 240

00000194 <pstr_nan>:
     194:	4e 41 4e                                            NAN

00000197 <pstr_inity>:
     197:	49 4e 49 54 59                                      INITY

0000019c <pstr_inf>:
     19c:	49 4e 46                                            INF

0000019f <pwr_m10>:
     19f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     1af:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000001b7 <pwr_p10>:
     1b7:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1c7:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     1d7:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     1e7:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     1f7:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     207:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     217:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     227:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     237:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     247:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     257:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     267:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     277:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     287:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     297:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     2a7:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     2b7:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     2c7:	3d 27                                               ='

000002c9 <_fld_step_P>:
     2c9:	01 05 0b 6f 02 00 00 00 00 10 00                    ...o.......

000002d4 <_fld_start_P>:
     2d4:	00 06 0a 8a 02 00 00 00 00 10 00                    ...........

000002df <_fld_term_P>:
     2df:	00 00 10 a6 02 00 00 00 00 00 01                    ...........

000002ea <_err_msg>:
     2ea:	1a 03 0e 03 fe 02 f2 02                             ........

000002f2 <_str_range_error>:
     2f2:	52 61 6e 67 65 20 45 72 72 6f 72 00                 Range Error.

000002fe <_str_not_enough_mem>:
     2fe:	4e 6f 74 20 65 6e 6f 75 67 68 20 6d 65 6d 2e 00     Not enough mem..

0000030e <_str_math_error>:
     30e:	4d 61 74 68 2e 20 45 72 72 6f 72 00                 Math. Error.

0000031a <_str_syntax_error>:
     31a:	53 79 6e 74 61 78 20 45 72 72 6f 72 00              Syntax Error.

00000327 <_str_press_any_key>:
     327:	50 72 65 73 73 20 61 6e 79 20 6b 65 79 00           Press any key.

00000335 <_str_error>:
     335:	45 52 52 4f 52 00                                   ERROR.

0000033b <_str_step>:
     33b:	53 54 45 50 3d 00                                   STEP=.

00000341 <_str_start>:
     341:	53 54 41 52 54 3d 00                                START=.

00000348 <_str_log>:
     348:	6c 6f 67 00                                         log.

0000034c <_str_atan>:
     34c:	61 74 61 6e 00                                      atan.

00000351 <_str_acos>:
     351:	61 63 6f 73 00                                      acos.

00000356 <_str_asin>:
     356:	61 73 69 6e 00                                      asin.

0000035b <_str_tan>:
     35b:	74 61 6e 00                                         tan.

0000035f <_str_cos>:
     35f:	63 6f 73 00                                         cos.

00000363 <_str_sin>:
     363:	73 69 6e 00 00                                      sin..

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	11 e0       	ldi	r17, 0x01	; 1
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e2 eb       	ldi	r30, 0xB2	; 178
     37c:	fd e2       	ldi	r31, 0x2D	; 45
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a8 30       	cpi	r26, 0x08	; 8
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	a8 e0       	ldi	r26, 0x08	; 8
     38e:	b1 e0       	ldi	r27, 0x01	; 1
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	a3 3b       	cpi	r26, 0xB3	; 179
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <main>
     39e:	0c 94 90 16 	jmp	0x2d20	; 0x2d20 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <field_grow>:
	return 0;
}

/* Field */
static void field_grow(Field *f, uint8_t n)
{
     3a6:	fc 01       	movw	r30, r24
	if(f->buf[f->pos])
     3a8:	a3 81       	ldd	r26, Z+3	; 0x03
     3aa:	b4 81       	ldd	r27, Z+4	; 0x04
     3ac:	85 81       	ldd	r24, Z+5	; 0x05
     3ae:	96 81       	ldd	r25, Z+6	; 0x06
     3b0:	a8 0f       	add	r26, r24
     3b2:	b9 1f       	adc	r27, r25
     3b4:	8c 91       	ld	r24, X
     3b6:	70 e0       	ldi	r23, 0x00	; 0
     3b8:	81 11       	cpse	r24, r1
     3ba:	0d c0       	rjmp	.+26     	; 0x3d6 <field_grow+0x30>
		{
			f->buf[i + n] = f->buf[i];
		}
	}

	f->len += n;
     3bc:	87 81       	ldd	r24, Z+7	; 0x07
     3be:	90 85       	ldd	r25, Z+8	; 0x08
     3c0:	68 0f       	add	r22, r24
     3c2:	79 1f       	adc	r23, r25
     3c4:	70 87       	std	Z+8, r23	; 0x08
     3c6:	67 83       	std	Z+7, r22	; 0x07
	f->buf[f->len] = '\0';
     3c8:	83 81       	ldd	r24, Z+3	; 0x03
     3ca:	94 81       	ldd	r25, Z+4	; 0x04
     3cc:	68 0f       	add	r22, r24
     3ce:	79 1f       	adc	r23, r25
     3d0:	fb 01       	movw	r30, r22
     3d2:	10 82       	st	Z, r1
}
     3d4:	08 95       	ret
		for(i = f->len - 1; i >= f->pos; --i)
     3d6:	87 81       	ldd	r24, Z+7	; 0x07
     3d8:	90 85       	ldd	r25, Z+8	; 0x08
			f->buf[i + n] = f->buf[i];
     3da:	a3 81       	ldd	r26, Z+3	; 0x03
     3dc:	b4 81       	ldd	r27, Z+4	; 0x04
		for(i = f->len - 1; i >= f->pos; --i)
     3de:	01 97       	sbiw	r24, 0x01	; 1
     3e0:	25 81       	ldd	r18, Z+5	; 0x05
     3e2:	36 81       	ldd	r19, Z+6	; 0x06
     3e4:	82 17       	cp	r24, r18
     3e6:	93 07       	cpc	r25, r19
     3e8:	4c f3       	brlt	.-46     	; 0x3bc <field_grow+0x16>
			f->buf[i + n] = f->buf[i];
     3ea:	a8 0f       	add	r26, r24
     3ec:	b9 1f       	adc	r27, r25
     3ee:	2c 91       	ld	r18, X
     3f0:	a6 0f       	add	r26, r22
     3f2:	b7 1f       	adc	r27, r23
     3f4:	2c 93       	st	X, r18
		for(i = f->len - 1; i >= f->pos; --i)
     3f6:	f1 cf       	rjmp	.-30     	; 0x3da <field_grow+0x34>

000003f8 <field_shrink>:

static void field_shrink(Field *f, uint8_t n)
{
     3f8:	fc 01       	movw	r30, r24
	if(f->buf[f->pos])
     3fa:	85 81       	ldd	r24, Z+5	; 0x05
     3fc:	96 81       	ldd	r25, Z+6	; 0x06
     3fe:	a3 81       	ldd	r26, Z+3	; 0x03
     400:	b4 81       	ldd	r27, Z+4	; 0x04
     402:	a8 0f       	add	r26, r24
     404:	b9 1f       	adc	r27, r25
     406:	2c 91       	ld	r18, X
	{
		int16_t i = f->pos;
		for(; f->buf[i]; ++i)
		{
			f->buf[i - n] = f->buf[i];
     408:	70 e0       	ldi	r23, 0x00	; 0
	if(f->buf[f->pos])
     40a:	21 11       	cpse	r18, r1
     40c:	08 c0       	rjmp	.+16     	; 0x41e <__FUSE_REGION_LENGTH__+0x1e>
		}
	}
}
     40e:	08 95       	ret
			f->buf[i - n] = f->buf[i];
     410:	dc 01       	movw	r26, r24
     412:	a6 1b       	sub	r26, r22
     414:	b7 0b       	sbc	r27, r23
     416:	a2 0f       	add	r26, r18
     418:	b3 1f       	adc	r27, r19
     41a:	4c 93       	st	X, r20
		for(; f->buf[i]; ++i)
     41c:	01 96       	adiw	r24, 0x01	; 1
     41e:	23 81       	ldd	r18, Z+3	; 0x03
     420:	34 81       	ldd	r19, Z+4	; 0x04
     422:	d9 01       	movw	r26, r18
     424:	a8 0f       	add	r26, r24
     426:	b9 1f       	adc	r27, r25
     428:	4c 91       	ld	r20, X
     42a:	41 11       	cpse	r20, r1
     42c:	f1 cf       	rjmp	.-30     	; 0x410 <__FUSE_REGION_LENGTH__+0x10>
     42e:	ef cf       	rjmp	.-34     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>

00000430 <mode_error_event>:
	lcd_string_P(_str_press_any_key);
}

static void mode_error_event(uint8_t key)
{
	_mode();
     430:	e0 91 0b 01 	lds	r30, 0x010B	; 0x80010b <_mode>
     434:	f0 91 0c 01 	lds	r31, 0x010C	; 0x80010c <_mode+0x1>
     438:	09 94       	ijmp

0000043a <lcd_enable>:
#define lcd_cursor(x, y) \
	lcd_command(LCD_SET_DDADR + (x) + ((y) ? LCD_OFFSET_SECOND_ROW : 0))

static void lcd_enable(void)
{
	LCD_OUT |= (1 << LCD_EN);
     43a:	5b 9a       	sbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     43c:	85 e3       	ldi	r24, 0x35	; 53
     43e:	8a 95       	dec	r24
     440:	f1 f7       	brne	.-4      	; 0x43e <lcd_enable+0x4>
     442:	00 00       	nop
	LCD_DELAY_US(LCD_DELAY_US_ENABLE);
	LCD_OUT &= ~(1 << LCD_EN);
     444:	5b 98       	cbi	0x0b, 3	; 11
}
     446:	08 95       	ret

00000448 <lcd_out>:

static void lcd_out(uint8_t data)
{
	data &= 0xF0;
	LCD_OUT &= ~(0xF0 >> (4 - LCD_DB));
     448:	9b b1       	in	r25, 0x0b	; 11
     44a:	9f 70       	andi	r25, 0x0F	; 15
     44c:	9b b9       	out	0x0b, r25	; 11
	LCD_OUT |= (data >> (4 - LCD_DB));
     44e:	9b b1       	in	r25, 0x0b	; 11
	data &= 0xF0;
     450:	80 7f       	andi	r24, 0xF0	; 240
	LCD_OUT |= (data >> (4 - LCD_DB));
     452:	89 2b       	or	r24, r25
     454:	8b b9       	out	0x0b, r24	; 11
	lcd_enable();
     456:	0c 94 1d 02 	jmp	0x43a	; 0x43a <lcd_enable>

0000045a <lcd_data>:
		LCD_ENTRY_NOSHIFT);
	lcd_clear();
}

static void lcd_data(uint8_t data)
{
     45a:	cf 93       	push	r28
     45c:	c8 2f       	mov	r28, r24
	LCD_OUT |= (1 << LCD_RS);
     45e:	5a 9a       	sbi	0x0b, 2	; 11
	lcd_out(data);
     460:	0e 94 24 02 	call	0x448	; 0x448 <lcd_out>
	lcd_out(data << 4);
     464:	8c 2f       	mov	r24, r28
     466:	82 95       	swap	r24
     468:	80 7f       	andi	r24, 0xF0	; 240
     46a:	0e 94 24 02 	call	0x448	; 0x448 <lcd_out>
     46e:	8a e7       	ldi	r24, 0x7A	; 122
     470:	8a 95       	dec	r24
     472:	f1 f7       	brne	.-4      	; 0x470 <lcd_data+0x16>
     474:	00 c0       	rjmp	.+0      	; 0x476 <lcd_data+0x1c>
	LCD_DELAY_US(LCD_DELAY_US_DATA);
}
     476:	cf 91       	pop	r28
     478:	08 95       	ret

0000047a <lcd_string>:
	lcd_command(LCD_CLEAR_DISPLAY);
	LCD_DELAY_MS(LCD_DELAY_MS_CLEAR);
}

static void lcd_string(const uint8_t *s)
{
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	ec 01       	movw	r28, r24
	register uint8_t c;
	for(; (c = *s); ++s)
     480:	89 91       	ld	r24, Y+
     482:	81 11       	cpse	r24, r1
     484:	03 c0       	rjmp	.+6      	; 0x48c <lcd_string+0x12>
	{
		lcd_data(c);
	}
}
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	08 95       	ret
		lcd_data(c);
     48c:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
	for(; (c = *s); ++s)
     490:	f7 cf       	rjmp	.-18     	; 0x480 <lcd_string+0x6>

00000492 <lcd_string_P>:

static void lcd_string_P(const uint8_t *s)
{
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	ec 01       	movw	r28, r24
	register char c;
	for(; (c = pgm_read_byte(s)); ++s)
     498:	fe 01       	movw	r30, r28
     49a:	84 91       	lpm	r24, Z
     49c:	81 11       	cpse	r24, r1
     49e:	03 c0       	rjmp	.+6      	; 0x4a6 <lcd_string_P+0x14>
	{
		lcd_data(c);
	}
}
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	08 95       	ret
		lcd_data(c);
     4a6:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
	for(; (c = pgm_read_byte(s)); ++s)
     4aa:	21 96       	adiw	r28, 0x01	; 1
     4ac:	f5 cf       	rjmp	.-22     	; 0x498 <lcd_string_P+0x6>

000004ae <lcd_command>:
{
     4ae:	cf 93       	push	r28
     4b0:	c8 2f       	mov	r28, r24
	LCD_OUT &= ~(1 << LCD_RS);
     4b2:	5a 98       	cbi	0x0b, 2	; 11
	lcd_out(data);
     4b4:	0e 94 24 02 	call	0x448	; 0x448 <lcd_out>
	lcd_out(data << 4);
     4b8:	8c 2f       	mov	r24, r28
     4ba:	82 95       	swap	r24
     4bc:	80 7f       	andi	r24, 0xF0	; 240
     4be:	0e 94 24 02 	call	0x448	; 0x448 <lcd_out>
     4c2:	80 e7       	ldi	r24, 0x70	; 112
     4c4:	8a 95       	dec	r24
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <lcd_command+0x16>
}
     4c8:	cf 91       	pop	r28
     4ca:	08 95       	ret

000004cc <field_update>:
{
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	ec 01       	movw	r28, r24
	if(f->pos < f->width - 1)
     4d4:	2a 81       	ldd	r18, Y+2	; 0x02
		lcd_cursor(f->col, f->row);
     4d6:	89 81       	ldd	r24, Y+1	; 0x01
     4d8:	98 81       	ld	r25, Y
	if(f->pos < f->width - 1)
     4da:	62 2f       	mov	r22, r18
     4dc:	61 50       	subi	r22, 0x01	; 1
     4de:	77 0b       	sbc	r23, r23
     4e0:	ab 01       	movw	r20, r22
     4e2:	6d 81       	ldd	r22, Y+5	; 0x05
     4e4:	7e 81       	ldd	r23, Y+6	; 0x06
     4e6:	64 17       	cp	r22, r20
     4e8:	75 07       	cpc	r23, r21
     4ea:	7c f5       	brge	.+94     	; 0x54a <__stack+0x4b>
		lcd_cursor(f->col, f->row);
     4ec:	91 11       	cpse	r25, r1
     4ee:	90 e4       	ldi	r25, 0x40	; 64
     4f0:	80 58       	subi	r24, 0x80	; 128
     4f2:	89 0f       	add	r24, r25
     4f4:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
		for(i = 0; f->buf[i]; ++i)
     4f8:	10 e0       	ldi	r17, 0x00	; 0
     4fa:	eb 81       	ldd	r30, Y+3	; 0x03
     4fc:	fc 81       	ldd	r31, Y+4	; 0x04
     4fe:	e1 0f       	add	r30, r17
     500:	f1 1d       	adc	r31, r1
     502:	17 fd       	sbrc	r17, 7
     504:	fa 95       	dec	r31
     506:	80 81       	ld	r24, Z
     508:	81 11       	cpse	r24, r1
     50a:	16 c0       	rjmp	.+44     	; 0x538 <__stack+0x39>
		for(; i < f->width; ++i)
     50c:	2a 81       	ldd	r18, Y+2	; 0x02
     50e:	81 2f       	mov	r24, r17
     510:	01 2e       	mov	r0, r17
     512:	00 0c       	add	r0, r0
     514:	99 0b       	sbc	r25, r25
     516:	28 17       	cp	r18, r24
     518:	19 06       	cpc	r1, r25
     51a:	09 f0       	breq	.+2      	; 0x51e <__stack+0x1f>
     51c:	8c f4       	brge	.+34     	; 0x540 <__stack+0x41>
		lcd_cursor(f->col + f->pos, f->row);
     51e:	8d 81       	ldd	r24, Y+5	; 0x05
     520:	29 81       	ldd	r18, Y+1	; 0x01
     522:	20 58       	subi	r18, 0x80	; 128
     524:	98 81       	ld	r25, Y
     526:	91 11       	cpse	r25, r1
     528:	90 e4       	ldi	r25, 0x40	; 64
     52a:	82 0f       	add	r24, r18
		lcd_cursor(f->col + f->width - 1, f->row);
     52c:	89 0f       	add	r24, r25
}
     52e:	df 91       	pop	r29
     530:	cf 91       	pop	r28
     532:	1f 91       	pop	r17
		lcd_cursor(f->col + f->width - 1, f->row);
     534:	0c 94 57 02 	jmp	0x4ae	; 0x4ae <lcd_command>
			lcd_data(f->buf[i]);
     538:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
		for(i = 0; f->buf[i]; ++i)
     53c:	1f 5f       	subi	r17, 0xFF	; 255
     53e:	dd cf       	rjmp	.-70     	; 0x4fa <field_update+0x2e>
			lcd_data(' ');
     540:	80 e2       	ldi	r24, 0x20	; 32
     542:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
		for(; i < f->width; ++i)
     546:	1f 5f       	subi	r17, 0xFF	; 255
     548:	e1 cf       	rjmp	.-62     	; 0x50c <__stack+0xd>
		lcd_cursor(f->col + f->width - 1, f->row);
     54a:	82 0f       	add	r24, r18
     54c:	91 11       	cpse	r25, r1
     54e:	90 e4       	ldi	r25, 0x40	; 64
     550:	81 58       	subi	r24, 0x81	; 129
     552:	89 0f       	add	r24, r25
     554:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
		lcd_data(' ');
     558:	80 e2       	ldi	r24, 0x20	; 32
     55a:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
		lcd_cursor(f->col, f->row);
     55e:	89 81       	ldd	r24, Y+1	; 0x01
     560:	98 81       	ld	r25, Y
     562:	91 11       	cpse	r25, r1
     564:	90 e4       	ldi	r25, 0x40	; 64
     566:	80 58       	subi	r24, 0x80	; 128
     568:	89 0f       	add	r24, r25
     56a:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
		for(i = f->pos - (f->width - 1);
     56e:	1d 81       	ldd	r17, Y+5	; 0x05
     570:	8a 81       	ldd	r24, Y+2	; 0x02
     572:	18 1b       	sub	r17, r24
			i < f->pos + 1 && f->buf[i]; ++i)
     574:	1f 5f       	subi	r17, 0xFF	; 255
     576:	81 2f       	mov	r24, r17
     578:	01 2e       	mov	r0, r17
     57a:	00 0c       	add	r0, r0
     57c:	99 0b       	sbc	r25, r25
		for(i = f->pos - (f->width - 1);
     57e:	2d 81       	ldd	r18, Y+5	; 0x05
     580:	3e 81       	ldd	r19, Y+6	; 0x06
     582:	28 17       	cp	r18, r24
     584:	39 07       	cpc	r19, r25
     586:	3c f0       	brlt	.+14     	; 0x596 <__stack+0x97>
			i < f->pos + 1 && f->buf[i]; ++i)
     588:	eb 81       	ldd	r30, Y+3	; 0x03
     58a:	fc 81       	ldd	r31, Y+4	; 0x04
     58c:	e8 0f       	add	r30, r24
     58e:	f9 1f       	adc	r31, r25
     590:	80 81       	ld	r24, Z
     592:	81 11       	cpse	r24, r1
     594:	08 c0       	rjmp	.+16     	; 0x5a6 <__stack+0xa7>
		lcd_cursor(f->col + f->width - 1, f->row);
     596:	89 81       	ldd	r24, Y+1	; 0x01
     598:	9a 81       	ldd	r25, Y+2	; 0x02
     59a:	89 0f       	add	r24, r25
     59c:	98 81       	ld	r25, Y
     59e:	91 11       	cpse	r25, r1
     5a0:	90 e4       	ldi	r25, 0x40	; 64
     5a2:	81 58       	subi	r24, 0x81	; 129
     5a4:	c3 cf       	rjmp	.-122    	; 0x52c <__stack+0x2d>
			lcd_data(f->buf[i]);
     5a6:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
     5aa:	e4 cf       	rjmp	.-56     	; 0x574 <__stack+0x75>

000005ac <lcd_clear>:
	lcd_command(LCD_CLEAR_DISPLAY);
     5ac:	81 e0       	ldi	r24, 0x01	; 1
     5ae:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	__builtin_avr_delay_cycles(__ticks_dc);
     5b2:	8f e9       	ldi	r24, 0x9F	; 159
     5b4:	9f e0       	ldi	r25, 0x0F	; 15
     5b6:	01 97       	sbiw	r24, 0x01	; 1
     5b8:	f1 f7       	brne	.-4      	; 0x5b6 <lcd_clear+0xa>
     5ba:	00 c0       	rjmp	.+0      	; 0x5bc <lcd_clear+0x10>
     5bc:	00 00       	nop
}
     5be:	08 95       	ret

000005c0 <mode_input>:
	_mode = mode_input;
     5c0:	80 ee       	ldi	r24, 0xE0	; 224
     5c2:	92 e0       	ldi	r25, 0x02	; 2
     5c4:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_mode+0x1>
     5c8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_mode>
	_event = mode_input_event;
     5cc:	88 e7       	ldi	r24, 0x78	; 120
     5ce:	96 e0       	ldi	r25, 0x06	; 6
     5d0:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_event+0x1>
     5d4:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_event>
	lcd_clear();
     5d8:	0e 94 d6 02 	call	0x5ac	; 0x5ac <lcd_clear>
	lcd_command(LCD_SET_DISPLAY | LCD_DISPLAY_ON |
     5dc:	8e e0       	ldi	r24, 0x0E	; 14
     5de:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	field_update(&fld_term);
     5e2:	86 ea       	ldi	r24, 0xA6	; 166
     5e4:	93 e0       	ldi	r25, 0x03	; 3
     5e6:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <field_update>

000005ea <mode_settings>:
	_mode = mode_settings;
     5ea:	85 ef       	ldi	r24, 0xF5	; 245
     5ec:	92 e0       	ldi	r25, 0x02	; 2
     5ee:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <_mode+0x1>
     5f2:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <_mode>
	_event = mode_settings_event;
     5f6:	8e e9       	ldi	r24, 0x9E	; 158
     5f8:	9a e0       	ldi	r25, 0x0A	; 10
     5fa:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_event+0x1>
     5fe:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_event>
	tbl_cur_fld = &fld_start;
     602:	8a e9       	ldi	r24, 0x9A	; 154
     604:	92 e0       	ldi	r25, 0x02	; 2
     606:	90 93 6e 02 	sts	0x026E, r25	; 0x80026e <tbl_cur_fld+0x1>
     60a:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <tbl_cur_fld>
	lcd_clear();
     60e:	0e 94 d6 02 	call	0x5ac	; 0x5ac <lcd_clear>
	lcd_command(LCD_SET_DISPLAY | LCD_DISPLAY_ON |
     612:	8e e0       	ldi	r24, 0x0E	; 14
     614:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_string_P(_str_start);
     618:	81 e4       	ldi	r24, 0x41	; 65
     61a:	93 e0       	ldi	r25, 0x03	; 3
     61c:	0e 94 49 02 	call	0x492	; 0x492 <lcd_string_P>
	lcd_string(buf_start);
     620:	8a e8       	ldi	r24, 0x8A	; 138
     622:	92 e0       	ldi	r25, 0x02	; 2
     624:	0e 94 3d 02 	call	0x47a	; 0x47a <lcd_string>
	lcd_cursor(0, 1);
     628:	80 ec       	ldi	r24, 0xC0	; 192
     62a:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_string_P(_str_step);
     62e:	8b e3       	ldi	r24, 0x3B	; 59
     630:	93 e0       	ldi	r25, 0x03	; 3
     632:	0e 94 49 02 	call	0x492	; 0x492 <lcd_string_P>
	lcd_string(buf_step);
     636:	8f e6       	ldi	r24, 0x6F	; 111
     638:	92 e0       	ldi	r25, 0x02	; 2
     63a:	0e 94 3d 02 	call	0x47a	; 0x47a <lcd_string>
	field_update(tbl_cur_fld);
     63e:	80 91 6d 02 	lds	r24, 0x026D	; 0x80026d <tbl_cur_fld>
     642:	90 91 6e 02 	lds	r25, 0x026E	; 0x80026e <tbl_cur_fld+0x1>
     646:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <field_update>

0000064a <mode_error>:
{
     64a:	cf 93       	push	r28
     64c:	c8 2f       	mov	r28, r24
	lcd_clear();
     64e:	0e 94 d6 02 	call	0x5ac	; 0x5ac <lcd_clear>
	lcd_command(LCD_SET_DISPLAY | LCD_DISPLAY_ON |
     652:	8c e0       	ldi	r24, 0x0C	; 12
     654:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_string_P((uint8_t *)pgm_read_word(_err_msg + err - 1));
     658:	ec 2f       	mov	r30, r28
     65a:	f0 e0       	ldi	r31, 0x00	; 0
     65c:	ee 0f       	add	r30, r30
     65e:	ff 1f       	adc	r31, r31
     660:	e8 51       	subi	r30, 0x18	; 24
     662:	fd 4f       	sbci	r31, 0xFD	; 253
     664:	85 91       	lpm	r24, Z+
     666:	94 91       	lpm	r25, Z
     668:	0e 94 49 02 	call	0x492	; 0x492 <lcd_string_P>
	_event = mode_error_event;
     66c:	88 e1       	ldi	r24, 0x18	; 24
     66e:	92 e0       	ldi	r25, 0x02	; 2
     670:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_event+0x1>
     674:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_event>
	lcd_cursor(0, 1);
     678:	80 ec       	ldi	r24, 0xC0	; 192
     67a:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_string_P(_str_press_any_key);
     67e:	87 e2       	ldi	r24, 0x27	; 39
     680:	93 e0       	ldi	r25, 0x03	; 3
}
     682:	cf 91       	pop	r28
	lcd_string_P(_str_press_any_key);
     684:	0c 94 49 02 	jmp	0x492	; 0x492 <lcd_string_P>

00000688 <calc_solve>:

	return 0;
}

static uint8_t calc_solve(float x, float *y)
{
     688:	4f 92       	push	r4
     68a:	5f 92       	push	r5
     68c:	6f 92       	push	r6
     68e:	7f 92       	push	r7
     690:	8f 92       	push	r8
     692:	9f 92       	push	r9
     694:	af 92       	push	r10
     696:	bf 92       	push	r11
     698:	cf 92       	push	r12
     69a:	df 92       	push	r13
     69c:	ef 92       	push	r14
     69e:	ff 92       	push	r15
     6a0:	0f 93       	push	r16
     6a2:	1f 93       	push	r17
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	cd b7       	in	r28, 0x3d	; 61
     6aa:	de b7       	in	r29, 0x3e	; 62
     6ac:	2a 97       	sbiw	r28, 0x0a	; 10
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	f8 94       	cli
     6b2:	de bf       	out	0x3e, r29	; 62
     6b4:	0f be       	out	0x3f, r0	; 63
     6b6:	cd bf       	out	0x3d, r28	; 61
     6b8:	e6 2e       	mov	r14, r22
     6ba:	77 2e       	mov	r7, r23
     6bc:	68 2e       	mov	r6, r24
     6be:	59 2e       	mov	r5, r25
     6c0:	5a 01       	movw	r10, r20
	float op_left, op_right;
	uint8_t tok_type_i, tok_num_i, top_num;
	tok_type_i = 0;
	tok_num_i = 0;
	top_num = 0;
	for(; tok_type_i < tok_cnt; ++tok_type_i)
     6c2:	40 90 60 02 	lds	r4, 0x0260	; 0x800260 <tok_cnt>
     6c6:	80 ea       	ldi	r24, 0xA0	; 160
     6c8:	88 2e       	mov	r8, r24
     6ca:	81 e0       	ldi	r24, 0x01	; 1
     6cc:	98 2e       	mov	r9, r24
     6ce:	64 01       	movw	r12, r8
	top_num = 0;
     6d0:	19 86       	std	Y+9, r1	; 0x09
	tok_num_i = 0;
     6d2:	f1 2c       	mov	r15, r1
	for(; tok_type_i < tok_cnt; ++tok_type_i)
     6d4:	8c 2d       	mov	r24, r12
     6d6:	88 19       	sub	r24, r8
     6d8:	84 15       	cp	r24, r4
     6da:	48 f1       	brcs	.+82     	; 0x72e <calc_solve+0xa6>
			num_stack[top_num++] = op_left;
			break;
		}
	}

	if(top_num != 1)
     6dc:	89 85       	ldd	r24, Y+9	; 0x09
     6de:	81 30       	cpi	r24, 0x01	; 1
     6e0:	09 f0       	breq	.+2      	; 0x6e4 <calc_solve+0x5c>
     6e2:	b7 c1       	rjmp	.+878    	; 0xa52 <calc_solve+0x3ca>
	{
		return ERROR_SYNTAX;
	}

	*y = num_stack[--top_num];
     6e4:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <num_stack>
     6e8:	90 91 c1 01 	lds	r25, 0x01C1	; 0x8001c1 <num_stack+0x1>
     6ec:	a0 91 c2 01 	lds	r26, 0x01C2	; 0x8001c2 <num_stack+0x2>
     6f0:	b0 91 c3 01 	lds	r27, 0x01C3	; 0x8001c3 <num_stack+0x3>
     6f4:	f5 01       	movw	r30, r10
     6f6:	80 83       	st	Z, r24
     6f8:	91 83       	std	Z+1, r25	; 0x01
     6fa:	a2 83       	std	Z+2, r26	; 0x02
     6fc:	b3 83       	std	Z+3, r27	; 0x03
	return 0;
     6fe:	80 e0       	ldi	r24, 0x00	; 0
}
     700:	2a 96       	adiw	r28, 0x0a	; 10
     702:	0f b6       	in	r0, 0x3f	; 63
     704:	f8 94       	cli
     706:	de bf       	out	0x3e, r29	; 62
     708:	0f be       	out	0x3f, r0	; 63
     70a:	cd bf       	out	0x3d, r28	; 61
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	1f 91       	pop	r17
     712:	0f 91       	pop	r16
     714:	ff 90       	pop	r15
     716:	ef 90       	pop	r14
     718:	df 90       	pop	r13
     71a:	cf 90       	pop	r12
     71c:	bf 90       	pop	r11
     71e:	af 90       	pop	r10
     720:	9f 90       	pop	r9
     722:	8f 90       	pop	r8
     724:	7f 90       	pop	r7
     726:	6f 90       	pop	r6
     728:	5f 90       	pop	r5
     72a:	4f 90       	pop	r4
     72c:	08 95       	ret
		switch(tok_type_list[tok_type_i])
     72e:	d6 01       	movw	r26, r12
     730:	ed 91       	ld	r30, X+
     732:	6d 01       	movw	r12, r26
     734:	e1 30       	cpi	r30, 0x01	; 1
     736:	41 f1       	breq	.+80     	; 0x788 <calc_solve+0x100>
     738:	e2 30       	cpi	r30, 0x02	; 2
     73a:	09 f4       	brne	.+2      	; 0x73e <calc_solve+0xb6>
     73c:	45 c0       	rjmp	.+138    	; 0x7c8 <calc_solve+0x140>
			if(tok_type_list[tok_type_i] < TT_ADD)
     73e:	ed 30       	cpi	r30, 0x0D	; 13
     740:	08 f0       	brcs	.+2      	; 0x744 <calc_solve+0xbc>
     742:	58 c0       	rjmp	.+176    	; 0x7f4 <calc_solve+0x16c>
				if(top_num == 0)
     744:	a9 85       	ldd	r26, Y+9	; 0x09
     746:	aa 23       	and	r26, r26
     748:	09 f4       	brne	.+2      	; 0x74c <calc_solve+0xc4>
     74a:	83 c1       	rjmp	.+774    	; 0xa52 <calc_solve+0x3ca>
			op_right = 0;
     74c:	1d 82       	std	Y+5, r1	; 0x05
     74e:	1e 82       	std	Y+6, r1	; 0x06
     750:	1f 82       	std	Y+7, r1	; 0x07
     752:	18 86       	std	Y+8, r1	; 0x08
			op_left = num_stack[--top_num];
     754:	39 85       	ldd	r19, Y+9	; 0x09
     756:	31 50       	subi	r19, 0x01	; 1
     758:	3a 87       	std	Y+10, r19	; 0x0a
     75a:	44 e0       	ldi	r20, 0x04	; 4
     75c:	34 9f       	mul	r19, r20
     75e:	80 01       	movw	r16, r0
     760:	11 24       	eor	r1, r1
     762:	d8 01       	movw	r26, r16
     764:	a0 54       	subi	r26, 0x40	; 64
     766:	be 4f       	sbci	r27, 0xFE	; 254
     768:	2d 91       	ld	r18, X+
     76a:	3d 91       	ld	r19, X+
     76c:	4d 91       	ld	r20, X+
     76e:	5c 91       	ld	r21, X
     770:	29 83       	std	Y+1, r18	; 0x01
     772:	3a 83       	std	Y+2, r19	; 0x02
     774:	4b 83       	std	Y+3, r20	; 0x03
     776:	5c 83       	std	Y+4, r21	; 0x04
			switch(tok_type_list[tok_type_i])
     778:	e5 50       	subi	r30, 0x05	; 5
     77a:	ed 30       	cpi	r30, 0x0D	; 13
     77c:	10 f5       	brcc	.+68     	; 0x7c2 <calc_solve+0x13a>
     77e:	f0 e0       	ldi	r31, 0x00	; 0
     780:	ee 56       	subi	r30, 0x6E	; 110
     782:	f9 4e       	sbci	r31, 0xE9	; 233
     784:	0c 94 ec 11 	jmp	0x23d8	; 0x23d8 <__tablejump2__>
			if(top_num >= NUMBER_STACK_SIZE - 1)
     788:	b9 85       	ldd	r27, Y+9	; 0x09
     78a:	bf 31       	cpi	r27, 0x1F	; 31
     78c:	08 f0       	brcs	.+2      	; 0x790 <calc_solve+0x108>
     78e:	5f c1       	rjmp	.+702    	; 0xa4e <calc_solve+0x3c6>
			num_stack[top_num++] =
     790:	bf 5f       	subi	r27, 0xFF	; 255
     792:	ba 87       	std	Y+10, r27	; 0x0a
     794:	39 85       	ldd	r19, Y+9	; 0x09
     796:	24 e0       	ldi	r18, 0x04	; 4
     798:	32 9f       	mul	r19, r18
     79a:	f0 01       	movw	r30, r0
     79c:	11 24       	eor	r1, r1
     79e:	e0 54       	subi	r30, 0x40	; 64
     7a0:	fe 4f       	sbci	r31, 0xFE	; 254
				tok_num_list[tok_num_i++];
     7a2:	44 e0       	ldi	r20, 0x04	; 4
     7a4:	f4 9e       	mul	r15, r20
     7a6:	d0 01       	movw	r26, r0
     7a8:	11 24       	eor	r1, r1
     7aa:	a0 5e       	subi	r26, 0xE0	; 224
     7ac:	be 4f       	sbci	r27, 0xFE	; 254
			num_stack[top_num++] =
     7ae:	8d 91       	ld	r24, X+
     7b0:	9d 91       	ld	r25, X+
     7b2:	0d 90       	ld	r0, X+
     7b4:	bc 91       	ld	r27, X
     7b6:	a0 2d       	mov	r26, r0
     7b8:	80 83       	st	Z, r24
     7ba:	91 83       	std	Z+1, r25	; 0x01
     7bc:	a2 83       	std	Z+2, r26	; 0x02
     7be:	b3 83       	std	Z+3, r27	; 0x03
				tok_num_list[tok_num_i++];
     7c0:	f3 94       	inc	r15
	tok_num_i = 0;
     7c2:	5a 85       	ldd	r21, Y+10	; 0x0a
     7c4:	59 87       	std	Y+9, r21	; 0x09
     7c6:	86 cf       	rjmp	.-244    	; 0x6d4 <calc_solve+0x4c>
			if(top_num >= NUMBER_STACK_SIZE - 1)
     7c8:	59 85       	ldd	r21, Y+9	; 0x09
     7ca:	5f 31       	cpi	r21, 0x1F	; 31
     7cc:	08 f0       	brcs	.+2      	; 0x7d0 <calc_solve+0x148>
     7ce:	3f c1       	rjmp	.+638    	; 0xa4e <calc_solve+0x3c6>
			num_stack[top_num++] = x;
     7d0:	5f 5f       	subi	r21, 0xFF	; 255
     7d2:	5a 87       	std	Y+10, r21	; 0x0a
     7d4:	99 85       	ldd	r25, Y+9	; 0x09
     7d6:	84 e0       	ldi	r24, 0x04	; 4
     7d8:	98 9f       	mul	r25, r24
     7da:	f0 01       	movw	r30, r0
     7dc:	11 24       	eor	r1, r1
     7de:	e0 54       	subi	r30, 0x40	; 64
     7e0:	fe 4f       	sbci	r31, 0xFE	; 254
     7e2:	8e 2d       	mov	r24, r14
     7e4:	97 2d       	mov	r25, r7
     7e6:	a6 2d       	mov	r26, r6
     7e8:	b5 2d       	mov	r27, r5
     7ea:	80 83       	st	Z, r24
     7ec:	91 83       	std	Z+1, r25	; 0x01
     7ee:	a2 83       	std	Z+2, r26	; 0x02
     7f0:	b3 83       	std	Z+3, r27	; 0x03
			break;
     7f2:	e7 cf       	rjmp	.-50     	; 0x7c2 <calc_solve+0x13a>
				if(top_num <= 1)
     7f4:	b9 85       	ldd	r27, Y+9	; 0x09
     7f6:	b2 30       	cpi	r27, 0x02	; 2
     7f8:	08 f4       	brcc	.+2      	; 0x7fc <calc_solve+0x174>
     7fa:	2b c1       	rjmp	.+598    	; 0xa52 <calc_solve+0x3ca>
				op_right = num_stack[--top_num];
     7fc:	b1 50       	subi	r27, 0x01	; 1
     7fe:	b9 87       	std	Y+9, r27	; 0x09
     800:	f4 e0       	ldi	r31, 0x04	; 4
     802:	bf 9f       	mul	r27, r31
     804:	d0 01       	movw	r26, r0
     806:	11 24       	eor	r1, r1
     808:	a0 54       	subi	r26, 0x40	; 64
     80a:	be 4f       	sbci	r27, 0xFE	; 254
     80c:	2d 91       	ld	r18, X+
     80e:	3d 91       	ld	r19, X+
     810:	4d 91       	ld	r20, X+
     812:	5c 91       	ld	r21, X
     814:	2d 83       	std	Y+5, r18	; 0x05
     816:	3e 83       	std	Y+6, r19	; 0x06
     818:	4f 83       	std	Y+7, r20	; 0x07
     81a:	58 87       	std	Y+8, r21	; 0x08
     81c:	9b cf       	rjmp	.-202    	; 0x754 <calc_solve+0xcc>
				op_left = -op_left;
     81e:	89 81       	ldd	r24, Y+1	; 0x01
     820:	9a 81       	ldd	r25, Y+2	; 0x02
     822:	ab 81       	ldd	r26, Y+3	; 0x03
     824:	bc 81       	ldd	r27, Y+4	; 0x04
     826:	b0 58       	subi	r27, 0x80	; 128
			if(top_num >= NUMBER_STACK_SIZE - 1)
     828:	3a 85       	ldd	r19, Y+10	; 0x0a
     82a:	3f 31       	cpi	r19, 0x1F	; 31
     82c:	08 f0       	brcs	.+2      	; 0x830 <calc_solve+0x1a8>
     82e:	0f c1       	rjmp	.+542    	; 0xa4e <calc_solve+0x3c6>
			num_stack[top_num++] = op_left;
     830:	f8 01       	movw	r30, r16
     832:	e0 54       	subi	r30, 0x40	; 64
     834:	fe 4f       	sbci	r31, 0xFE	; 254
     836:	80 83       	st	Z, r24
     838:	91 83       	std	Z+1, r25	; 0x01
     83a:	a2 83       	std	Z+2, r26	; 0x02
     83c:	b3 83       	std	Z+3, r27	; 0x03
			break;
     83e:	49 85       	ldd	r20, Y+9	; 0x09
     840:	4a 87       	std	Y+10, r20	; 0x0a
     842:	bf cf       	rjmp	.-130    	; 0x7c2 <calc_solve+0x13a>
				op_left += op_right;
     844:	29 81       	ldd	r18, Y+1	; 0x01
     846:	3a 81       	ldd	r19, Y+2	; 0x02
     848:	4b 81       	ldd	r20, Y+3	; 0x03
     84a:	5c 81       	ldd	r21, Y+4	; 0x04
     84c:	6d 81       	ldd	r22, Y+5	; 0x05
     84e:	7e 81       	ldd	r23, Y+6	; 0x06
     850:	8f 81       	ldd	r24, Y+7	; 0x07
     852:	98 85       	ldd	r25, Y+8	; 0x08
     854:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
				op_left = pow(op_left, op_right);
     858:	38 2f       	mov	r19, r24
     85a:	29 2f       	mov	r18, r25
     85c:	cb 01       	movw	r24, r22
     85e:	a3 2f       	mov	r26, r19
     860:	b2 2f       	mov	r27, r18
				break;
     862:	e2 cf       	rjmp	.-60     	; 0x828 <calc_solve+0x1a0>
				op_left -= op_right;
     864:	2d 81       	ldd	r18, Y+5	; 0x05
     866:	3e 81       	ldd	r19, Y+6	; 0x06
     868:	4f 81       	ldd	r20, Y+7	; 0x07
     86a:	58 85       	ldd	r21, Y+8	; 0x08
     86c:	69 81       	ldd	r22, Y+1	; 0x01
     86e:	7a 81       	ldd	r23, Y+2	; 0x02
     870:	8b 81       	ldd	r24, Y+3	; 0x03
     872:	9c 81       	ldd	r25, Y+4	; 0x04
     874:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__subsf3>
     878:	ef cf       	rjmp	.-34     	; 0x858 <calc_solve+0x1d0>
				op_left *= op_right;
     87a:	29 81       	ldd	r18, Y+1	; 0x01
     87c:	3a 81       	ldd	r19, Y+2	; 0x02
     87e:	4b 81       	ldd	r20, Y+3	; 0x03
     880:	5c 81       	ldd	r21, Y+4	; 0x04
     882:	6d 81       	ldd	r22, Y+5	; 0x05
     884:	7e 81       	ldd	r23, Y+6	; 0x06
     886:	8f 81       	ldd	r24, Y+7	; 0x07
     888:	98 85       	ldd	r25, Y+8	; 0x08
				op_left = ACOSD(op_left);
     88a:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
     88e:	e4 cf       	rjmp	.-56     	; 0x858 <calc_solve+0x1d0>
				if(op_right == 0.0)
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	a9 01       	movw	r20, r18
     896:	6d 81       	ldd	r22, Y+5	; 0x05
     898:	7e 81       	ldd	r23, Y+6	; 0x06
     89a:	8f 81       	ldd	r24, Y+7	; 0x07
     89c:	98 85       	ldd	r25, Y+8	; 0x08
     89e:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
     8a2:	88 23       	and	r24, r24
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <calc_solve+0x220>
     8a6:	94 c0       	rjmp	.+296    	; 0x9d0 <calc_solve+0x348>
				op_left /= op_right;
     8a8:	2d 81       	ldd	r18, Y+5	; 0x05
     8aa:	3e 81       	ldd	r19, Y+6	; 0x06
     8ac:	4f 81       	ldd	r20, Y+7	; 0x07
     8ae:	58 85       	ldd	r21, Y+8	; 0x08
     8b0:	69 81       	ldd	r22, Y+1	; 0x01
     8b2:	7a 81       	ldd	r23, Y+2	; 0x02
     8b4:	8b 81       	ldd	r24, Y+3	; 0x03
     8b6:	9c 81       	ldd	r25, Y+4	; 0x04
     8b8:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__divsf3>
     8bc:	cd cf       	rjmp	.-102    	; 0x858 <calc_solve+0x1d0>
				op_left = log(op_left);
     8be:	69 81       	ldd	r22, Y+1	; 0x01
     8c0:	7a 81       	ldd	r23, Y+2	; 0x02
     8c2:	8b 81       	ldd	r24, Y+3	; 0x03
     8c4:	9c 81       	ldd	r25, Y+4	; 0x04
     8c6:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <log>
     8ca:	c6 cf       	rjmp	.-116    	; 0x858 <calc_solve+0x1d0>
				op_left = SIND(op_left);
     8cc:	2b ed       	ldi	r18, 0xDB	; 219
     8ce:	3f e0       	ldi	r19, 0x0F	; 15
     8d0:	49 e4       	ldi	r20, 0x49	; 73
     8d2:	50 e4       	ldi	r21, 0x40	; 64
     8d4:	69 81       	ldd	r22, Y+1	; 0x01
     8d6:	7a 81       	ldd	r23, Y+2	; 0x02
     8d8:	8b 81       	ldd	r24, Y+3	; 0x03
     8da:	9c 81       	ldd	r25, Y+4	; 0x04
     8dc:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	44 e3       	ldi	r20, 0x34	; 52
     8e6:	53 e4       	ldi	r21, 0x43	; 67
     8e8:	69 83       	std	Y+1, r22	; 0x01
     8ea:	7a 83       	std	Y+2, r23	; 0x02
     8ec:	8b 83       	std	Y+3, r24	; 0x03
     8ee:	9c 83       	std	Y+4, r25	; 0x04
     8f0:	69 81       	ldd	r22, Y+1	; 0x01
     8f2:	7a 81       	ldd	r23, Y+2	; 0x02
     8f4:	8b 81       	ldd	r24, Y+3	; 0x03
     8f6:	9c 81       	ldd	r25, Y+4	; 0x04
     8f8:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__divsf3>
     8fc:	69 83       	std	Y+1, r22	; 0x01
     8fe:	7a 83       	std	Y+2, r23	; 0x02
     900:	8b 83       	std	Y+3, r24	; 0x03
     902:	9c 83       	std	Y+4, r25	; 0x04
     904:	69 81       	ldd	r22, Y+1	; 0x01
     906:	7a 81       	ldd	r23, Y+2	; 0x02
     908:	8b 81       	ldd	r24, Y+3	; 0x03
     90a:	9c 81       	ldd	r25, Y+4	; 0x04
     90c:	0e 94 b8 10 	call	0x2170	; 0x2170 <sin>
     910:	a3 cf       	rjmp	.-186    	; 0x858 <calc_solve+0x1d0>
				op_left = COSD(op_left);
     912:	2b ed       	ldi	r18, 0xDB	; 219
     914:	3f e0       	ldi	r19, 0x0F	; 15
     916:	49 e4       	ldi	r20, 0x49	; 73
     918:	50 e4       	ldi	r21, 0x40	; 64
     91a:	69 81       	ldd	r22, Y+1	; 0x01
     91c:	7a 81       	ldd	r23, Y+2	; 0x02
     91e:	8b 81       	ldd	r24, Y+3	; 0x03
     920:	9c 81       	ldd	r25, Y+4	; 0x04
     922:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	44 e3       	ldi	r20, 0x34	; 52
     92c:	53 e4       	ldi	r21, 0x43	; 67
     92e:	69 83       	std	Y+1, r22	; 0x01
     930:	7a 83       	std	Y+2, r23	; 0x02
     932:	8b 83       	std	Y+3, r24	; 0x03
     934:	9c 83       	std	Y+4, r25	; 0x04
     936:	69 81       	ldd	r22, Y+1	; 0x01
     938:	7a 81       	ldd	r23, Y+2	; 0x02
     93a:	8b 81       	ldd	r24, Y+3	; 0x03
     93c:	9c 81       	ldd	r25, Y+4	; 0x04
     93e:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__divsf3>
     942:	69 83       	std	Y+1, r22	; 0x01
     944:	7a 83       	std	Y+2, r23	; 0x02
     946:	8b 83       	std	Y+3, r24	; 0x03
     948:	9c 83       	std	Y+4, r25	; 0x04
     94a:	69 81       	ldd	r22, Y+1	; 0x01
     94c:	7a 81       	ldd	r23, Y+2	; 0x02
     94e:	8b 81       	ldd	r24, Y+3	; 0x03
     950:	9c 81       	ldd	r25, Y+4	; 0x04
     952:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <cos>
     956:	80 cf       	rjmp	.-256    	; 0x858 <calc_solve+0x1d0>
				op_left = TAND(op_left);
     958:	2b ed       	ldi	r18, 0xDB	; 219
     95a:	3f e0       	ldi	r19, 0x0F	; 15
     95c:	49 e4       	ldi	r20, 0x49	; 73
     95e:	50 e4       	ldi	r21, 0x40	; 64
     960:	69 81       	ldd	r22, Y+1	; 0x01
     962:	7a 81       	ldd	r23, Y+2	; 0x02
     964:	8b 81       	ldd	r24, Y+3	; 0x03
     966:	9c 81       	ldd	r25, Y+4	; 0x04
     968:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	44 e3       	ldi	r20, 0x34	; 52
     972:	53 e4       	ldi	r21, 0x43	; 67
     974:	69 83       	std	Y+1, r22	; 0x01
     976:	7a 83       	std	Y+2, r23	; 0x02
     978:	8b 83       	std	Y+3, r24	; 0x03
     97a:	9c 83       	std	Y+4, r25	; 0x04
     97c:	69 81       	ldd	r22, Y+1	; 0x01
     97e:	7a 81       	ldd	r23, Y+2	; 0x02
     980:	8b 81       	ldd	r24, Y+3	; 0x03
     982:	9c 81       	ldd	r25, Y+4	; 0x04
     984:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__divsf3>
     988:	69 83       	std	Y+1, r22	; 0x01
     98a:	7a 83       	std	Y+2, r23	; 0x02
     98c:	8b 83       	std	Y+3, r24	; 0x03
     98e:	9c 83       	std	Y+4, r25	; 0x04
     990:	69 81       	ldd	r22, Y+1	; 0x01
     992:	7a 81       	ldd	r23, Y+2	; 0x02
     994:	8b 81       	ldd	r24, Y+3	; 0x03
     996:	9c 81       	ldd	r25, Y+4	; 0x04
     998:	0e 94 0a 11 	call	0x2214	; 0x2214 <tan>
     99c:	5d cf       	rjmp	.-326    	; 0x858 <calc_solve+0x1d0>

static uint8_t asin_acos_range(float n)
{
	return n >= -1 && n <= 1;
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 e8       	ldi	r20, 0x80	; 128
     9a4:	5f eb       	ldi	r21, 0xBF	; 191
     9a6:	69 81       	ldd	r22, Y+1	; 0x01
     9a8:	7a 81       	ldd	r23, Y+2	; 0x02
     9aa:	8b 81       	ldd	r24, Y+3	; 0x03
     9ac:	9c 81       	ldd	r25, Y+4	; 0x04
     9ae:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <__gesf2>
     9b2:	87 fd       	sbrc	r24, 7
     9b4:	0d c0       	rjmp	.+26     	; 0x9d0 <calc_solve+0x348>
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	40 e8       	ldi	r20, 0x80	; 128
     9bc:	5f e3       	ldi	r21, 0x3F	; 63
     9be:	69 81       	ldd	r22, Y+1	; 0x01
     9c0:	7a 81       	ldd	r23, Y+2	; 0x02
     9c2:	8b 81       	ldd	r24, Y+3	; 0x03
     9c4:	9c 81       	ldd	r25, Y+4	; 0x04
     9c6:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
     9ca:	18 16       	cp	r1, r24
     9cc:	0c f0       	brlt	.+2      	; 0x9d0 <calc_solve+0x348>
     9ce:	43 c0       	rjmp	.+134    	; 0xa56 <calc_solve+0x3ce>
					return ERROR_MATH;
     9d0:	82 e0       	ldi	r24, 0x02	; 2
     9d2:	96 ce       	rjmp	.-724    	; 0x700 <calc_solve+0x78>
	return n >= -1 && n <= 1;
     9d4:	20 e0       	ldi	r18, 0x00	; 0
     9d6:	30 e0       	ldi	r19, 0x00	; 0
     9d8:	40 e8       	ldi	r20, 0x80	; 128
     9da:	5f eb       	ldi	r21, 0xBF	; 191
     9dc:	69 81       	ldd	r22, Y+1	; 0x01
     9de:	7a 81       	ldd	r23, Y+2	; 0x02
     9e0:	8b 81       	ldd	r24, Y+3	; 0x03
     9e2:	9c 81       	ldd	r25, Y+4	; 0x04
     9e4:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <__gesf2>
     9e8:	87 fd       	sbrc	r24, 7
     9ea:	f2 cf       	rjmp	.-28     	; 0x9d0 <calc_solve+0x348>
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	40 e8       	ldi	r20, 0x80	; 128
     9f2:	5f e3       	ldi	r21, 0x3F	; 63
     9f4:	69 81       	ldd	r22, Y+1	; 0x01
     9f6:	7a 81       	ldd	r23, Y+2	; 0x02
     9f8:	8b 81       	ldd	r24, Y+3	; 0x03
     9fa:	9c 81       	ldd	r25, Y+4	; 0x04
     9fc:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
     a00:	18 16       	cp	r1, r24
     a02:	34 f3       	brlt	.-52     	; 0x9d0 <calc_solve+0x348>
				op_left = ACOSD(op_left);
     a04:	69 81       	ldd	r22, Y+1	; 0x01
     a06:	7a 81       	ldd	r23, Y+2	; 0x02
     a08:	8b 81       	ldd	r24, Y+3	; 0x03
     a0a:	9c 81       	ldd	r25, Y+4	; 0x04
     a0c:	0e 94 0e 0d 	call	0x1a1c	; 0x1a1c <acos>
     a10:	06 c0       	rjmp	.+12     	; 0xa1e <calc_solve+0x396>
				op_left = ATAND(op_left);
     a12:	69 81       	ldd	r22, Y+1	; 0x01
     a14:	7a 81       	ldd	r23, Y+2	; 0x02
     a16:	8b 81       	ldd	r24, Y+3	; 0x03
     a18:	9c 81       	ldd	r25, Y+4	; 0x04
     a1a:	0e 94 a7 0d 	call	0x1b4e	; 0x1b4e <atan>
				op_left = ACOSD(op_left);
     a1e:	20 ee       	ldi	r18, 0xE0	; 224
     a20:	3e e2       	ldi	r19, 0x2E	; 46
     a22:	45 e6       	ldi	r20, 0x65	; 101
     a24:	52 e4       	ldi	r21, 0x42	; 66
     a26:	69 83       	std	Y+1, r22	; 0x01
     a28:	7a 83       	std	Y+2, r23	; 0x02
     a2a:	8b 83       	std	Y+3, r24	; 0x03
     a2c:	9c 83       	std	Y+4, r25	; 0x04
     a2e:	69 81       	ldd	r22, Y+1	; 0x01
     a30:	7a 81       	ldd	r23, Y+2	; 0x02
     a32:	8b 81       	ldd	r24, Y+3	; 0x03
     a34:	9c 81       	ldd	r25, Y+4	; 0x04
     a36:	29 cf       	rjmp	.-430    	; 0x88a <calc_solve+0x202>
				op_left = pow(op_left, op_right);
     a38:	2d 81       	ldd	r18, Y+5	; 0x05
     a3a:	3e 81       	ldd	r19, Y+6	; 0x06
     a3c:	4f 81       	ldd	r20, Y+7	; 0x07
     a3e:	58 85       	ldd	r21, Y+8	; 0x08
     a40:	69 81       	ldd	r22, Y+1	; 0x01
     a42:	7a 81       	ldd	r23, Y+2	; 0x02
     a44:	8b 81       	ldd	r24, Y+3	; 0x03
     a46:	9c 81       	ldd	r25, Y+4	; 0x04
     a48:	0e 94 68 10 	call	0x20d0	; 0x20d0 <pow>
     a4c:	05 cf       	rjmp	.-502    	; 0x858 <calc_solve+0x1d0>
				return ERROR_NOMEM;
     a4e:	83 e0       	ldi	r24, 0x03	; 3
     a50:	57 ce       	rjmp	.-850    	; 0x700 <calc_solve+0x78>
					return ERROR_SYNTAX;
     a52:	81 e0       	ldi	r24, 0x01	; 1
     a54:	55 ce       	rjmp	.-854    	; 0x700 <calc_solve+0x78>
				op_left = ASIND(op_left);
     a56:	69 81       	ldd	r22, Y+1	; 0x01
     a58:	7a 81       	ldd	r23, Y+2	; 0x02
     a5a:	8b 81       	ldd	r24, Y+3	; 0x03
     a5c:	9c 81       	ldd	r25, Y+4	; 0x04
     a5e:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <asin>
     a62:	dd cf       	rjmp	.-70     	; 0xa1e <calc_solve+0x396>

00000a64 <mode_table_update>:
{
     a64:	cf 92       	push	r12
     a66:	df 92       	push	r13
     a68:	ef 92       	push	r14
     a6a:	ff 92       	push	r15
     a6c:	0f 93       	push	r16
     a6e:	1f 93       	push	r17
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	cd b7       	in	r28, 0x3d	; 61
     a76:	de b7       	in	r29, 0x3e	; 62
     a78:	28 97       	sbiw	r28, 0x08	; 8
     a7a:	0f b6       	in	r0, 0x3f	; 63
     a7c:	f8 94       	cli
     a7e:	de bf       	out	0x3e, r29	; 62
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	cd bf       	out	0x3d, r28	; 61
	x = tbl_start + tbl_pos * tbl_step;
     a84:	20 91 61 02 	lds	r18, 0x0261	; 0x800261 <tbl_step>
     a88:	30 91 62 02 	lds	r19, 0x0262	; 0x800262 <tbl_step+0x1>
     a8c:	40 91 63 02 	lds	r20, 0x0263	; 0x800263 <tbl_step+0x2>
     a90:	50 91 64 02 	lds	r21, 0x0264	; 0x800264 <tbl_step+0x3>
     a94:	60 91 69 02 	lds	r22, 0x0269	; 0x800269 <tbl_pos>
     a98:	70 91 6a 02 	lds	r23, 0x026A	; 0x80026a <tbl_pos+0x1>
     a9c:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <tbl_pos+0x2>
     aa0:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <tbl_pos+0x3>
     aa4:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
     aa8:	20 91 65 02 	lds	r18, 0x0265	; 0x800265 <tbl_start>
     aac:	30 91 66 02 	lds	r19, 0x0266	; 0x800266 <tbl_start+0x1>
     ab0:	40 91 67 02 	lds	r20, 0x0267	; 0x800267 <tbl_start+0x2>
     ab4:	50 91 68 02 	lds	r21, 0x0268	; 0x800268 <tbl_start+0x3>
     ab8:	6d 83       	std	Y+5, r22	; 0x05
     aba:	7e 83       	std	Y+6, r23	; 0x06
     abc:	8f 83       	std	Y+7, r24	; 0x07
     abe:	98 87       	std	Y+8, r25	; 0x08
     ac0:	6d 81       	ldd	r22, Y+5	; 0x05
     ac2:	7e 81       	ldd	r23, Y+6	; 0x06
     ac4:	8f 81       	ldd	r24, Y+7	; 0x07
     ac6:	98 85       	ldd	r25, Y+8	; 0x08
     ac8:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
     acc:	6b 01       	movw	r12, r22
     ace:	7c 01       	movw	r14, r24
	y = 0;
     ad0:	19 82       	std	Y+1, r1	; 0x01
     ad2:	1a 82       	std	Y+2, r1	; 0x02
     ad4:	1b 82       	std	Y+3, r1	; 0x03
     ad6:	1c 82       	std	Y+4, r1	; 0x04
	lcd_cursor(2, 0);
     ad8:	82 e8       	ldi	r24, 0x82	; 130
     ada:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_string(FORMAT_NUMBER(x, _buf_conv, 14));
     ade:	0f e0       	ldi	r16, 0x0F	; 15
     ae0:	11 e0       	ldi	r17, 0x01	; 1
     ae2:	24 e0       	ldi	r18, 0x04	; 4
     ae4:	4e e0       	ldi	r20, 0x0E	; 14
     ae6:	cd 82       	std	Y+5, r12	; 0x05
     ae8:	de 82       	std	Y+6, r13	; 0x06
     aea:	ef 82       	std	Y+7, r14	; 0x07
     aec:	f8 86       	std	Y+8, r15	; 0x08
     aee:	6d 81       	ldd	r22, Y+5	; 0x05
     af0:	7e 81       	ldd	r23, Y+6	; 0x06
     af2:	8f 81       	ldd	r24, Y+7	; 0x07
     af4:	98 85       	ldd	r25, Y+8	; 0x08
     af6:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <dtostrf>
     afa:	0e 94 3d 02 	call	0x47a	; 0x47a <lcd_string>
	if(calc_solve(x, &y))
     afe:	ae 01       	movw	r20, r28
     b00:	4f 5f       	subi	r20, 0xFF	; 255
     b02:	5f 4f       	sbci	r21, 0xFF	; 255
     b04:	cd 82       	std	Y+5, r12	; 0x05
     b06:	de 82       	std	Y+6, r13	; 0x06
     b08:	ef 82       	std	Y+7, r14	; 0x07
     b0a:	f8 86       	std	Y+8, r15	; 0x08
     b0c:	6d 81       	ldd	r22, Y+5	; 0x05
     b0e:	7e 81       	ldd	r23, Y+6	; 0x06
     b10:	8f 81       	ldd	r24, Y+7	; 0x07
     b12:	98 85       	ldd	r25, Y+8	; 0x08
     b14:	0e 94 44 03 	call	0x688	; 0x688 <calc_solve>
     b18:	88 23       	and	r24, r24
     b1a:	e1 f0       	breq	.+56     	; 0xb54 <mode_table_update+0xf0>
		lcd_cursor(2, 1);
     b1c:	82 ec       	ldi	r24, 0xC2	; 194
     b1e:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
     b22:	19 e0       	ldi	r17, 0x09	; 9
			lcd_data(' ');
     b24:	80 e2       	ldi	r24, 0x20	; 32
     b26:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
		for(i = 2; i < LCD_WIDTH - MSG_ERROR_LEN; ++i)
     b2a:	11 50       	subi	r17, 0x01	; 1
     b2c:	d9 f7       	brne	.-10     	; 0xb24 <mode_table_update+0xc0>
		lcd_string_P(_str_error);
     b2e:	85 e3       	ldi	r24, 0x35	; 53
     b30:	93 e0       	ldi	r25, 0x03	; 3
     b32:	0e 94 49 02 	call	0x492	; 0x492 <lcd_string_P>
}
     b36:	28 96       	adiw	r28, 0x08	; 8
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	f8 94       	cli
     b3c:	de bf       	out	0x3e, r29	; 62
     b3e:	0f be       	out	0x3f, r0	; 63
     b40:	cd bf       	out	0x3d, r28	; 61
     b42:	df 91       	pop	r29
     b44:	cf 91       	pop	r28
     b46:	1f 91       	pop	r17
     b48:	0f 91       	pop	r16
     b4a:	ff 90       	pop	r15
     b4c:	ef 90       	pop	r14
     b4e:	df 90       	pop	r13
     b50:	cf 90       	pop	r12
     b52:	08 95       	ret
		lcd_cursor(2, 1);
     b54:	82 ec       	ldi	r24, 0xC2	; 194
     b56:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
		lcd_string(FORMAT_NUMBER(y, _buf_conv, 14));
     b5a:	89 81       	ldd	r24, Y+1	; 0x01
     b5c:	9a 81       	ldd	r25, Y+2	; 0x02
     b5e:	ab 81       	ldd	r26, Y+3	; 0x03
     b60:	bc 81       	ldd	r27, Y+4	; 0x04
     b62:	0f e0       	ldi	r16, 0x0F	; 15
     b64:	11 e0       	ldi	r17, 0x01	; 1
     b66:	24 e0       	ldi	r18, 0x04	; 4
     b68:	4e e0       	ldi	r20, 0x0E	; 14
     b6a:	bc 01       	movw	r22, r24
     b6c:	cd 01       	movw	r24, r26
     b6e:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <dtostrf>
     b72:	0e 94 3d 02 	call	0x47a	; 0x47a <lcd_string>
}
     b76:	df cf       	rjmp	.-66     	; 0xb36 <mode_table_update+0xd2>

00000b78 <mode_table_event>:
	switch(UNSHIFT(key))
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	8f 7e       	andi	r24, 0xEF	; 239
     b7c:	8b 30       	cpi	r24, 0x0B	; 11
     b7e:	91 05       	cpc	r25, r1
     b80:	a9 f0       	breq	.+42     	; 0xbac <mode_table_event+0x34>
     b82:	6c f4       	brge	.+26     	; 0xb9e <mode_table_event+0x26>
     b84:	89 30       	cpi	r24, 0x09	; 9
     b86:	91 05       	cpc	r25, r1
     b88:	b9 f1       	breq	.+110    	; 0xbf8 <mode_table_event+0x80>
     b8a:	8a 30       	cpi	r24, 0x0A	; 10
     b8c:	91 05       	cpc	r25, r1
     b8e:	51 f1       	breq	.+84     	; 0xbe4 <mode_table_event+0x6c>
		++tbl_pos;
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	40 e8       	ldi	r20, 0x80	; 128
     b96:	5f e3       	ldi	r21, 0x3F	; 63
	switch(UNSHIFT(key))
     b98:	06 97       	sbiw	r24, 0x06	; 6
     b9a:	91 f1       	breq	.+100    	; 0xc00 <mode_table_event+0x88>
     b9c:	08 95       	ret
     b9e:	8e 30       	cpi	r24, 0x0E	; 14
     ba0:	91 05       	cpc	r25, r1
     ba2:	d9 f0       	breq	.+54     	; 0xbda <mode_table_event+0x62>
     ba4:	0f 97       	sbiw	r24, 0x0f	; 15
     ba6:	b9 f5       	brne	.+110    	; 0xc16 <mode_table_event+0x9e>
		mode_input();
     ba8:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <mode_input>
		tbl_pos -= MODE_TABLE_STEP_BIG;
     bac:	20 e0       	ldi	r18, 0x00	; 0
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	40 e2       	ldi	r20, 0x20	; 32
     bb2:	51 e4       	ldi	r21, 0x41	; 65
		--tbl_pos;
     bb4:	60 91 69 02 	lds	r22, 0x0269	; 0x800269 <tbl_pos>
     bb8:	70 91 6a 02 	lds	r23, 0x026A	; 0x80026a <tbl_pos+0x1>
     bbc:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <tbl_pos+0x2>
     bc0:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <tbl_pos+0x3>
     bc4:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__subsf3>
		tbl_pos += MODE_TABLE_STEP_BIG;
     bc8:	60 93 69 02 	sts	0x0269, r22	; 0x800269 <tbl_pos>
     bcc:	70 93 6a 02 	sts	0x026A, r23	; 0x80026a <tbl_pos+0x1>
     bd0:	80 93 6b 02 	sts	0x026B, r24	; 0x80026b <tbl_pos+0x2>
     bd4:	90 93 6c 02 	sts	0x026C, r25	; 0x80026c <tbl_pos+0x3>
     bd8:	0d c0       	rjmp	.+26     	; 0xbf4 <mode_table_event+0x7c>
		--tbl_pos;
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	40 e8       	ldi	r20, 0x80	; 128
     be0:	5f e3       	ldi	r21, 0x3F	; 63
     be2:	e8 cf       	rjmp	.-48     	; 0xbb4 <mode_table_event+0x3c>
		tbl_pos = 0;
     be4:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <tbl_pos>
     be8:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <tbl_pos+0x1>
     bec:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <tbl_pos+0x2>
     bf0:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <tbl_pos+0x3>
		mode_table_update();
     bf4:	0c 94 32 05 	jmp	0xa64	; 0xa64 <mode_table_update>
		tbl_pos += MODE_TABLE_STEP_BIG;
     bf8:	20 e0       	ldi	r18, 0x00	; 0
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	40 e2       	ldi	r20, 0x20	; 32
     bfe:	51 e4       	ldi	r21, 0x41	; 65
     c00:	60 91 69 02 	lds	r22, 0x0269	; 0x800269 <tbl_pos>
     c04:	70 91 6a 02 	lds	r23, 0x026A	; 0x80026a <tbl_pos+0x1>
     c08:	80 91 6b 02 	lds	r24, 0x026B	; 0x80026b <tbl_pos+0x2>
     c0c:	90 91 6c 02 	lds	r25, 0x026C	; 0x80026c <tbl_pos+0x3>
     c10:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
     c14:	d9 cf       	rjmp	.-78     	; 0xbc8 <mode_table_event+0x50>
}
     c16:	08 95       	ret

00000c18 <field_ins_chr>:
{
     c18:	1f 93       	push	r17
     c1a:	cf 93       	push	r28
     c1c:	df 93       	push	r29
     c1e:	ec 01       	movw	r28, r24
     c20:	16 2f       	mov	r17, r22
	if(f->len + 1 < f->max)
     c22:	8f 81       	ldd	r24, Y+7	; 0x07
     c24:	98 85       	ldd	r25, Y+8	; 0x08
     c26:	01 96       	adiw	r24, 0x01	; 1
     c28:	29 85       	ldd	r18, Y+9	; 0x09
     c2a:	3a 85       	ldd	r19, Y+10	; 0x0a
     c2c:	82 17       	cp	r24, r18
     c2e:	93 07       	cpc	r25, r19
     c30:	b4 f4       	brge	.+44     	; 0xc5e <field_ins_chr+0x46>
		field_grow(f, 1);
     c32:	61 e0       	ldi	r22, 0x01	; 1
     c34:	ce 01       	movw	r24, r28
     c36:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <field_grow>
		f->buf [f->pos++] = c;
     c3a:	eb 81       	ldd	r30, Y+3	; 0x03
     c3c:	fc 81       	ldd	r31, Y+4	; 0x04
     c3e:	8d 81       	ldd	r24, Y+5	; 0x05
     c40:	9e 81       	ldd	r25, Y+6	; 0x06
     c42:	9c 01       	movw	r18, r24
     c44:	2f 5f       	subi	r18, 0xFF	; 255
     c46:	3f 4f       	sbci	r19, 0xFF	; 255
     c48:	3e 83       	std	Y+6, r19	; 0x06
     c4a:	2d 83       	std	Y+5, r18	; 0x05
     c4c:	e8 0f       	add	r30, r24
     c4e:	f9 1f       	adc	r31, r25
     c50:	10 83       	st	Z, r17
		field_update(f);
     c52:	ce 01       	movw	r24, r28
}
     c54:	df 91       	pop	r29
     c56:	cf 91       	pop	r28
     c58:	1f 91       	pop	r17
		field_update(f);
     c5a:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <field_update>
}
     c5e:	df 91       	pop	r29
     c60:	cf 91       	pop	r28
     c62:	1f 91       	pop	r17
     c64:	08 95       	ret

00000c66 <field_ins_str_P.constprop.0>:
static void field_ins_str_P(Field *f, const uint8_t *s, uint8_t n)
     c66:	1f 93       	push	r17
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	18 2f       	mov	r17, r24
     c6e:	d9 2f       	mov	r29, r25
     c70:	c6 2f       	mov	r28, r22
	if(f->len + n + 1 < f->max)
     c72:	20 91 ad 03 	lds	r18, 0x03AD	; 0x8003ad <fld_term+0x7>
     c76:	30 91 ae 03 	lds	r19, 0x03AE	; 0x8003ae <fld_term+0x8>
     c7a:	26 0f       	add	r18, r22
     c7c:	31 1d       	adc	r19, r1
     c7e:	2f 5f       	subi	r18, 0xFF	; 255
     c80:	3f 4f       	sbci	r19, 0xFF	; 255
     c82:	80 91 af 03 	lds	r24, 0x03AF	; 0x8003af <fld_term+0x9>
     c86:	90 91 b0 03 	lds	r25, 0x03B0	; 0x8003b0 <fld_term+0xa>
     c8a:	28 17       	cp	r18, r24
     c8c:	39 07       	cpc	r19, r25
     c8e:	64 f5       	brge	.+88     	; 0xce8 <field_ins_str_P.constprop.0+0x82>
		field_grow(f, n + 1);
     c90:	61 e0       	ldi	r22, 0x01	; 1
     c92:	6c 0f       	add	r22, r28
     c94:	86 ea       	ldi	r24, 0xA6	; 166
     c96:	93 e0       	ldi	r25, 0x03	; 3
     c98:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <field_grow>
		while(n--)
     c9c:	e1 2f       	mov	r30, r17
     c9e:	fd 2f       	mov	r31, r29
     ca0:	c1 50       	subi	r28, 0x01	; 1
			f->buf[f->pos++] = pgm_read_byte(s++);
     ca2:	20 91 ab 03 	lds	r18, 0x03AB	; 0x8003ab <fld_term+0x5>
     ca6:	30 91 ac 03 	lds	r19, 0x03AC	; 0x8003ac <fld_term+0x6>
     caa:	c9 01       	movw	r24, r18
     cac:	01 96       	adiw	r24, 0x01	; 1
     cae:	a0 91 a9 03 	lds	r26, 0x03A9	; 0x8003a9 <fld_term+0x3>
     cb2:	b0 91 aa 03 	lds	r27, 0x03AA	; 0x8003aa <fld_term+0x4>
     cb6:	a2 0f       	add	r26, r18
     cb8:	b3 1f       	adc	r27, r19
		while(n--)
     cba:	cf 3f       	cpi	r28, 0xFF	; 255
     cbc:	69 f4       	brne	.+26     	; 0xcd8 <field_ins_str_P.constprop.0+0x72>
		f->buf[f->pos++] = '(';
     cbe:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <fld_term+0x6>
     cc2:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <fld_term+0x5>
     cc6:	88 e2       	ldi	r24, 0x28	; 40
     cc8:	8c 93       	st	X, r24
		field_update(f);
     cca:	86 ea       	ldi	r24, 0xA6	; 166
     ccc:	93 e0       	ldi	r25, 0x03	; 3
}
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
		field_update(f);
     cd4:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <field_update>
			f->buf[f->pos++] = pgm_read_byte(s++);
     cd8:	24 91       	lpm	r18, Z
     cda:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <fld_term+0x6>
     cde:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <fld_term+0x5>
     ce2:	2c 93       	st	X, r18
     ce4:	31 96       	adiw	r30, 0x01	; 1
     ce6:	dc cf       	rjmp	.-72     	; 0xca0 <field_ins_str_P.constprop.0+0x3a>
}
     ce8:	df 91       	pop	r29
     cea:	cf 91       	pop	r28
     cec:	1f 91       	pop	r17
     cee:	08 95       	ret

00000cf0 <mode_input_event>:
{
     cf0:	2f 92       	push	r2
     cf2:	3f 92       	push	r3
     cf4:	4f 92       	push	r4
     cf6:	5f 92       	push	r5
     cf8:	6f 92       	push	r6
     cfa:	7f 92       	push	r7
     cfc:	8f 92       	push	r8
     cfe:	9f 92       	push	r9
     d00:	af 92       	push	r10
     d02:	bf 92       	push	r11
     d04:	cf 92       	push	r12
     d06:	df 92       	push	r13
     d08:	ef 92       	push	r14
     d0a:	ff 92       	push	r15
     d0c:	0f 93       	push	r16
     d0e:	1f 93       	push	r17
     d10:	cf 93       	push	r28
     d12:	df 93       	push	r29
     d14:	cd b7       	in	r28, 0x3d	; 61
     d16:	de b7       	in	r29, 0x3e	; 62
     d18:	2c 97       	sbiw	r28, 0x0c	; 12
     d1a:	0f b6       	in	r0, 0x3f	; 63
     d1c:	f8 94       	cli
     d1e:	de bf       	out	0x3e, r29	; 62
     d20:	0f be       	out	0x3f, r0	; 63
     d22:	cd bf       	out	0x3d, r28	; 61
     d24:	08 2f       	mov	r16, r24
	switch(key)
     d26:	80 32       	cpi	r24, 0x20	; 32
     d28:	08 f0       	brcs	.+2      	; 0xd2c <mode_input_event+0x3c>
     d2a:	4c c0       	rjmp	.+152    	; 0xdc4 <mode_input_event+0xd4>
     d2c:	e8 2f       	mov	r30, r24
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	e1 56       	subi	r30, 0x61	; 97
     d32:	f9 4e       	sbci	r31, 0xE9	; 233
     d34:	0c 94 ec 11 	jmp	0x23d8	; 0x23d8 <__tablejump2__>
		field_ins_chr(&fld_term, '1');
     d38:	61 e3       	ldi	r22, 0x31	; 49
		field_ins_chr(&fld_term, CHAR_DIV);
     d3a:	86 ea       	ldi	r24, 0xA6	; 166
     d3c:	93 e0       	ldi	r25, 0x03	; 3
}
     d3e:	2c 96       	adiw	r28, 0x0c	; 12
     d40:	0f b6       	in	r0, 0x3f	; 63
     d42:	f8 94       	cli
     d44:	de bf       	out	0x3e, r29	; 62
     d46:	0f be       	out	0x3f, r0	; 63
     d48:	cd bf       	out	0x3d, r28	; 61
     d4a:	df 91       	pop	r29
     d4c:	cf 91       	pop	r28
     d4e:	1f 91       	pop	r17
     d50:	0f 91       	pop	r16
     d52:	ff 90       	pop	r15
     d54:	ef 90       	pop	r14
     d56:	df 90       	pop	r13
     d58:	cf 90       	pop	r12
     d5a:	bf 90       	pop	r11
     d5c:	af 90       	pop	r10
     d5e:	9f 90       	pop	r9
     d60:	8f 90       	pop	r8
     d62:	7f 90       	pop	r7
     d64:	6f 90       	pop	r6
     d66:	5f 90       	pop	r5
     d68:	4f 90       	pop	r4
     d6a:	3f 90       	pop	r3
     d6c:	2f 90       	pop	r2
		field_ins_chr(&fld_term, CHAR_DIV);
     d6e:	0c 94 0c 06 	jmp	0xc18	; 0xc18 <field_ins_chr>
		field_ins_chr(&fld_term, '4');
     d72:	64 e3       	ldi	r22, 0x34	; 52
     d74:	e2 cf       	rjmp	.-60     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '7');
     d76:	67 e3       	ldi	r22, 0x37	; 55
     d78:	e0 cf       	rjmp	.-64     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, CHAR_LP);
     d7a:	68 e2       	ldi	r22, 0x28	; 40
     d7c:	de cf       	rjmp	.-68     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '2');
     d7e:	62 e3       	ldi	r22, 0x32	; 50
     d80:	dc cf       	rjmp	.-72     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '5');
     d82:	65 e3       	ldi	r22, 0x35	; 53
     d84:	da cf       	rjmp	.-76     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '8');
     d86:	68 e3       	ldi	r22, 0x38	; 56
     d88:	d8 cf       	rjmp	.-80     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '0');
     d8a:	60 e3       	ldi	r22, 0x30	; 48
     d8c:	d6 cf       	rjmp	.-84     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '3');
     d8e:	63 e3       	ldi	r22, 0x33	; 51
     d90:	d4 cf       	rjmp	.-88     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '6');
     d92:	66 e3       	ldi	r22, 0x36	; 54
     d94:	d2 cf       	rjmp	.-92     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, '9');
     d96:	69 e3       	ldi	r22, 0x39	; 57
     d98:	d0 cf       	rjmp	.-96     	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, CHAR_RP);
     d9a:	69 e2       	ldi	r22, 0x29	; 41
     d9c:	ce cf       	rjmp	.-100    	; 0xd3a <mode_input_event+0x4a>
	f->len = 0;
     d9e:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <fld_term+0x8>
     da2:	10 92 ad 03 	sts	0x03AD, r1	; 0x8003ad <fld_term+0x7>
	f->pos = 0;
     da6:	10 92 ac 03 	sts	0x03AC, r1	; 0x8003ac <fld_term+0x6>
     daa:	10 92 ab 03 	sts	0x03AB, r1	; 0x8003ab <fld_term+0x5>
	f->buf[0] = '\0';
     dae:	e0 91 a9 03 	lds	r30, 0x03A9	; 0x8003a9 <fld_term+0x3>
     db2:	f0 91 aa 03 	lds	r31, 0x03AA	; 0x8003aa <fld_term+0x4>
     db6:	10 82       	st	Z, r1
	field_update(f);
     db8:	86 ea       	ldi	r24, 0xA6	; 166
     dba:	93 e0       	ldi	r25, 0x03	; 3
     dbc:	0e 94 66 02 	call	0x4cc	; 0x4cc <field_update>
		x_cnt = 0;
     dc0:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <x_cnt>
}
     dc4:	2c 96       	adiw	r28, 0x0c	; 12
     dc6:	0f b6       	in	r0, 0x3f	; 63
     dc8:	f8 94       	cli
     dca:	de bf       	out	0x3e, r29	; 62
     dcc:	0f be       	out	0x3f, r0	; 63
     dce:	cd bf       	out	0x3d, r28	; 61
     dd0:	df 91       	pop	r29
     dd2:	cf 91       	pop	r28
     dd4:	1f 91       	pop	r17
     dd6:	0f 91       	pop	r16
     dd8:	ff 90       	pop	r15
     dda:	ef 90       	pop	r14
     ddc:	df 90       	pop	r13
     dde:	cf 90       	pop	r12
     de0:	bf 90       	pop	r11
     de2:	af 90       	pop	r10
     de4:	9f 90       	pop	r9
     de6:	8f 90       	pop	r8
     de8:	7f 90       	pop	r7
     dea:	6f 90       	pop	r6
     dec:	5f 90       	pop	r5
     dee:	4f 90       	pop	r4
     df0:	3f 90       	pop	r3
     df2:	2f 90       	pop	r2
     df4:	08 95       	ret
	if(f->pos > 0)
     df6:	e0 90 ab 03 	lds	r14, 0x03AB	; 0x8003ab <fld_term+0x5>
     dfa:	f0 90 ac 03 	lds	r15, 0x03AC	; 0x8003ac <fld_term+0x6>
     dfe:	1e 14       	cp	r1, r14
     e00:	1f 04       	cpc	r1, r15
     e02:	04 f7       	brge	.-64     	; 0xdc4 <mode_input_event+0xd4>
		a = f->buf[f->pos - 1];
     e04:	c0 90 a9 03 	lds	r12, 0x03A9	; 0x8003a9 <fld_term+0x3>
     e08:	d0 90 aa 03 	lds	r13, 0x03AA	; 0x8003aa <fld_term+0x4>
     e0c:	f6 01       	movw	r30, r12
     e0e:	ee 0d       	add	r30, r14
     e10:	ff 1d       	adc	r31, r15
     e12:	31 97       	sbiw	r30, 0x01	; 1
     e14:	80 81       	ld	r24, Z
		if(a == CHAR_X)
     e16:	88 37       	cpi	r24, 0x78	; 120
     e18:	09 f0       	breq	.+2      	; 0xe1c <mode_input_event+0x12c>
     e1a:	45 c0       	rjmp	.+138    	; 0xea6 <mode_input_event+0x1b6>
			--x_cnt;
     e1c:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <x_cnt>
     e20:	81 50       	subi	r24, 0x01	; 1
     e22:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <x_cnt>
		uint8_t n = 1, a;
     e26:	11 e0       	ldi	r17, 0x01	; 1
		field_shrink(f, n);
     e28:	61 2f       	mov	r22, r17
     e2a:	86 ea       	ldi	r24, 0xA6	; 166
     e2c:	93 e0       	ldi	r25, 0x03	; 3
     e2e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <field_shrink>
		f->pos -= n;
     e32:	61 2f       	mov	r22, r17
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <fld_term+0x5>
     e3a:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <fld_term+0x6>
     e3e:	86 1b       	sub	r24, r22
     e40:	97 0b       	sbc	r25, r23
     e42:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <fld_term+0x6>
     e46:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <fld_term+0x5>
		f->len -= n;
     e4a:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <fld_term+0x7>
     e4e:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <fld_term+0x8>
     e52:	86 1b       	sub	r24, r22
     e54:	97 0b       	sbc	r25, r23
     e56:	90 93 ae 03 	sts	0x03AE, r25	; 0x8003ae <fld_term+0x8>
     e5a:	80 93 ad 03 	sts	0x03AD, r24	; 0x8003ad <fld_term+0x7>
		f->buf[f->len] = '\0';
     e5e:	20 91 a9 03 	lds	r18, 0x03A9	; 0x8003a9 <fld_term+0x3>
     e62:	30 91 aa 03 	lds	r19, 0x03AA	; 0x8003aa <fld_term+0x4>
     e66:	82 0f       	add	r24, r18
     e68:	93 1f       	adc	r25, r19
     e6a:	dc 01       	movw	r26, r24
     e6c:	1c 92       	st	X, r1
	field_update(f);
     e6e:	86 ea       	ldi	r24, 0xA6	; 166
     e70:	93 e0       	ldi	r25, 0x03	; 3
}
     e72:	2c 96       	adiw	r28, 0x0c	; 12
     e74:	0f b6       	in	r0, 0x3f	; 63
     e76:	f8 94       	cli
     e78:	de bf       	out	0x3e, r29	; 62
     e7a:	0f be       	out	0x3f, r0	; 63
     e7c:	cd bf       	out	0x3d, r28	; 61
     e7e:	df 91       	pop	r29
     e80:	cf 91       	pop	r28
     e82:	1f 91       	pop	r17
     e84:	0f 91       	pop	r16
     e86:	ff 90       	pop	r15
     e88:	ef 90       	pop	r14
     e8a:	df 90       	pop	r13
     e8c:	cf 90       	pop	r12
     e8e:	bf 90       	pop	r11
     e90:	af 90       	pop	r10
     e92:	9f 90       	pop	r9
     e94:	8f 90       	pop	r8
     e96:	7f 90       	pop	r7
     e98:	6f 90       	pop	r6
     e9a:	5f 90       	pop	r5
     e9c:	4f 90       	pop	r4
     e9e:	3f 90       	pop	r3
     ea0:	2f 90       	pop	r2
	field_update(f);
     ea2:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <field_update>
		else if(a == CHAR_LP)
     ea6:	88 32       	cpi	r24, 0x28	; 40
     ea8:	09 f0       	breq	.+2      	; 0xeac <mode_input_event+0x1bc>
     eaa:	bd cf       	rjmp	.-134    	; 0xe26 <mode_input_event+0x136>
			for(++n; islower(f->buf[f->pos - n]); ++n) ;
     eac:	12 e0       	ldi	r17, 0x02	; 2
     eae:	01 c0       	rjmp	.+2      	; 0xeb2 <mode_input_event+0x1c2>
     eb0:	1f 5f       	subi	r17, 0xFF	; 255
     eb2:	f7 01       	movw	r30, r14
     eb4:	e1 1b       	sub	r30, r17
     eb6:	f1 09       	sbc	r31, r1
     eb8:	ec 0d       	add	r30, r12
     eba:	fd 1d       	adc	r31, r13
     ebc:	80 81       	ld	r24, Z
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	0e 94 27 12 	call	0x244e	; 0x244e <islower>
     ec4:	89 2b       	or	r24, r25
     ec6:	a1 f7       	brne	.-24     	; 0xeb0 <mode_input_event+0x1c0>
			--n;
     ec8:	11 50       	subi	r17, 0x01	; 1
     eca:	ae cf       	rjmp	.-164    	; 0xe28 <mode_input_event+0x138>
		field_ins_chr(&fld_term, CHAR_DP);
     ecc:	6e e2       	ldi	r22, 0x2E	; 46
     ece:	35 cf       	rjmp	.-406    	; 0xd3a <mode_input_event+0x4a>
		float y = 0;
     ed0:	19 82       	std	Y+1, r1	; 0x01
     ed2:	1a 82       	std	Y+2, r1	; 0x02
     ed4:	1b 82       	std	Y+3, r1	; 0x03
     ed6:	1c 82       	std	Y+4, r1	; 0x04
	tok_cnt = 0;
     ed8:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <tok_cnt>
	while((c = *term))
     edc:	38 2e       	mov	r3, r24
	top_num = 0;
     ede:	28 2e       	mov	r2, r24
	top_stack = 0;
     ee0:	18 2f       	mov	r17, r24
	while((c = *term))
     ee2:	46 ea       	ldi	r20, 0xA6	; 166
     ee4:	e4 2e       	mov	r14, r20
     ee6:	42 e0       	ldi	r20, 0x02	; 2
     ee8:	f4 2e       	mov	r15, r20
     eea:	d7 01       	movw	r26, r14
     eec:	9c 91       	ld	r25, X
     eee:	91 11       	cpse	r25, r1
     ef0:	40 c0       	rjmp	.+128    	; 0xf72 <mode_input_event+0x282>
     ef2:	e3 2d       	mov	r30, r3
     ef4:	f0 e0       	ldi	r31, 0x00	; 0
     ef6:	e0 56       	subi	r30, 0x60	; 96
     ef8:	fe 4f       	sbci	r31, 0xFE	; 254
	while(top_stack > 0)
     efa:	11 11       	cpse	r17, r1
     efc:	3e c2       	rjmp	.+1148   	; 0x137a <mode_input_event+0x68a>
     efe:	30 92 60 02 	sts	0x0260, r3	; 0x800260 <tok_cnt>
		err = calc_solve(0, &y);
     f02:	ae 01       	movw	r20, r28
     f04:	4f 5f       	subi	r20, 0xFF	; 255
     f06:	5f 4f       	sbci	r21, 0xFF	; 255
     f08:	60 e0       	ldi	r22, 0x00	; 0
     f0a:	70 e0       	ldi	r23, 0x00	; 0
     f0c:	cb 01       	movw	r24, r22
     f0e:	0e 94 44 03 	call	0x688	; 0x688 <calc_solve>
		if(x_cnt)
     f12:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <x_cnt>
     f16:	91 11       	cpse	r25, r1
     f18:	3d c2       	rjmp	.+1146   	; 0x1394 <mode_input_event+0x6a4>
			if(err)
     f1a:	81 11       	cpse	r24, r1
     f1c:	90 c1       	rjmp	.+800    	; 0x123e <mode_input_event+0x54e>
			mode_result(y);
     f1e:	29 81       	ldd	r18, Y+1	; 0x01
     f20:	3a 81       	ldd	r19, Y+2	; 0x02
     f22:	4b 81       	ldd	r20, Y+3	; 0x03
     f24:	5c 81       	ldd	r21, Y+4	; 0x04
     f26:	2d 83       	std	Y+5, r18	; 0x05
     f28:	3e 83       	std	Y+6, r19	; 0x06
     f2a:	4f 83       	std	Y+7, r20	; 0x07
     f2c:	58 87       	std	Y+8, r21	; 0x08
	_event = mode_result_event;
     f2e:	86 e9       	ldi	r24, 0x96	; 150
     f30:	9a e0       	ldi	r25, 0x0A	; 10
     f32:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_event+0x1>
     f36:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_event>
	lcd_cursor(0, 1);
     f3a:	80 ec       	ldi	r24, 0xC0	; 192
     f3c:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_string(FORMAT_NUMBER(y, _buf_conv, sizeof(_buf_conv) - 1));
     f40:	0f e0       	ldi	r16, 0x0F	; 15
     f42:	11 e0       	ldi	r17, 0x01	; 1
     f44:	24 e0       	ldi	r18, 0x04	; 4
     f46:	40 e1       	ldi	r20, 0x10	; 16
     f48:	6d 81       	ldd	r22, Y+5	; 0x05
     f4a:	7e 81       	ldd	r23, Y+6	; 0x06
     f4c:	8f 81       	ldd	r24, Y+7	; 0x07
     f4e:	98 85       	ldd	r25, Y+8	; 0x08
     f50:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <dtostrf>
     f54:	0e 94 3d 02 	call	0x47a	; 0x47a <lcd_string>
	lcd_cursor(fld_term.pos < LCD_WIDTH - 1 ?
     f58:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <fld_term+0x5>
     f5c:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <fld_term+0x6>
     f60:	80 31       	cpi	r24, 0x10	; 16
     f62:	91 05       	cpc	r25, r1
     f64:	14 f0       	brlt	.+4      	; 0xf6a <mode_input_event+0x27a>
     f66:	8f e0       	ldi	r24, 0x0F	; 15
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	80 58       	subi	r24, 0x80	; 128
     f6c:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
}
     f70:	29 cf       	rjmp	.-430    	; 0xdc4 <mode_input_event+0xd4>
		if(isdigit(c))
     f72:	e9 2f       	mov	r30, r25
     f74:	e0 53       	subi	r30, 0x30	; 48
     f76:	ff 0b       	sbc	r31, r31
     f78:	3a 97       	sbiw	r30, 0x0a	; 10
     f7a:	08 f0       	brcs	.+2      	; 0xf7e <mode_input_event+0x28e>
     f7c:	f5 c0       	rjmp	.+490    	; 0x1168 <mode_input_event+0x478>
     f7e:	a7 01       	movw	r20, r14
			for(dps = 0, begin = term; (c = *term); ++term)
     f80:	80 2f       	mov	r24, r16
     f82:	5a 01       	movw	r10, r20
     f84:	da 01       	movw	r26, r20
     f86:	2c 91       	ld	r18, X
     f88:	4f 5f       	subi	r20, 0xFF	; 255
     f8a:	5f 4f       	sbci	r21, 0xFF	; 255
     f8c:	22 23       	and	r18, r18
     f8e:	61 f0       	breq	.+24     	; 0xfa8 <mode_input_event+0x2b8>
				if(c == CHAR_DP)
     f90:	2e 32       	cpi	r18, 0x2E	; 46
     f92:	29 f4       	brne	.+10     	; 0xf9e <mode_input_event+0x2ae>
					if(++dps > 1)
     f94:	81 30       	cpi	r24, 0x01	; 1
     f96:	09 f4       	brne	.+2      	; 0xf9a <mode_input_event+0x2aa>
     f98:	c6 c2       	rjmp	.+1420   	; 0x1526 <mode_input_event+0x836>
     f9a:	81 e0       	ldi	r24, 0x01	; 1
     f9c:	f2 cf       	rjmp	.-28     	; 0xf82 <mode_input_event+0x292>
				else if(!isdigit(c))
     f9e:	20 53       	subi	r18, 0x30	; 48
     fa0:	33 0b       	sbc	r19, r19
     fa2:	2a 30       	cpi	r18, 0x0A	; 10
     fa4:	31 05       	cpc	r19, r1
     fa6:	68 f3       	brcs	.-38     	; 0xf82 <mode_input_event+0x292>
     fa8:	81 2c       	mov	r8, r1
     faa:	91 2c       	mov	r9, r1
     fac:	c1 2c       	mov	r12, r1
     fae:	d1 2c       	mov	r13, r1
     fb0:	3f c0       	rjmp	.+126    	; 0x1030 <mode_input_event+0x340>
				if((c = *begin) == CHAR_DP)
     fb2:	f7 01       	movw	r30, r14
     fb4:	71 90       	ld	r7, Z+
     fb6:	7f 01       	movw	r14, r30
     fb8:	fe e2       	ldi	r31, 0x2E	; 46
     fba:	7f 16       	cp	r7, r31
     fbc:	09 f4       	brne	.+2      	; 0xfc0 <mode_input_event+0x2d0>
     fbe:	a0 c0       	rjmp	.+320    	; 0x1100 <mode_input_event+0x410>
				n = n * 10.0 + c - '0';
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	30 e0       	ldi	r19, 0x00	; 0
     fc4:	40 e2       	ldi	r20, 0x20	; 32
     fc6:	51 e4       	ldi	r21, 0x41	; 65
     fc8:	8d 82       	std	Y+5, r8	; 0x05
     fca:	9e 82       	std	Y+6, r9	; 0x06
     fcc:	cf 82       	std	Y+7, r12	; 0x07
     fce:	d8 86       	std	Y+8, r13	; 0x08
     fd0:	6d 81       	ldd	r22, Y+5	; 0x05
     fd2:	7e 81       	ldd	r23, Y+6	; 0x06
     fd4:	8f 81       	ldd	r24, Y+7	; 0x07
     fd6:	98 85       	ldd	r25, Y+8	; 0x08
     fd8:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
     fdc:	4b 01       	movw	r8, r22
     fde:	6c 01       	movw	r12, r24
     fe0:	27 2d       	mov	r18, r7
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	50 e0       	ldi	r21, 0x00	; 0
     fe6:	40 e0       	ldi	r20, 0x00	; 0
     fe8:	2d 83       	std	Y+5, r18	; 0x05
     fea:	3e 83       	std	Y+6, r19	; 0x06
     fec:	4f 83       	std	Y+7, r20	; 0x07
     fee:	58 87       	std	Y+8, r21	; 0x08
     ff0:	ca 01       	movw	r24, r20
     ff2:	b9 01       	movw	r22, r18
     ff4:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__floatsisf>
     ff8:	9b 01       	movw	r18, r22
     ffa:	ac 01       	movw	r20, r24
     ffc:	8d 82       	std	Y+5, r8	; 0x05
     ffe:	9e 82       	std	Y+6, r9	; 0x06
    1000:	cf 82       	std	Y+7, r12	; 0x07
    1002:	d8 86       	std	Y+8, r13	; 0x08
    1004:	6d 81       	ldd	r22, Y+5	; 0x05
    1006:	7e 81       	ldd	r23, Y+6	; 0x06
    1008:	8f 81       	ldd	r24, Y+7	; 0x07
    100a:	98 85       	ldd	r25, Y+8	; 0x08
    100c:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	40 e4       	ldi	r20, 0x40	; 64
    1016:	52 e4       	ldi	r21, 0x42	; 66
    1018:	6d 83       	std	Y+5, r22	; 0x05
    101a:	7e 83       	std	Y+6, r23	; 0x06
    101c:	8f 83       	std	Y+7, r24	; 0x07
    101e:	98 87       	std	Y+8, r25	; 0x08
    1020:	6d 81       	ldd	r22, Y+5	; 0x05
    1022:	7e 81       	ldd	r23, Y+6	; 0x06
    1024:	8f 81       	ldd	r24, Y+7	; 0x07
    1026:	98 85       	ldd	r25, Y+8	; 0x08
    1028:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__subsf3>
    102c:	4b 01       	movw	r8, r22
    102e:	6c 01       	movw	r12, r24
			for(n = 0.0; begin < term; ++begin)
    1030:	ea 14       	cp	r14, r10
    1032:	fb 04       	cpc	r15, r11
    1034:	08 f4       	brcc	.+2      	; 0x1038 <mode_input_event+0x348>
    1036:	bd cf       	rjmp	.-134    	; 0xfb2 <mode_input_event+0x2c2>
    1038:	41 2c       	mov	r4, r1
    103a:	51 2c       	mov	r5, r1
    103c:	20 e8       	ldi	r18, 0x80	; 128
    103e:	62 2e       	mov	r6, r18
    1040:	3f e3       	ldi	r19, 0x3F	; 63
    1042:	73 2e       	mov	r7, r19
			if(tok_cnt >= TOKEN_LIST_SIZE - 1)
    1044:	ee e1       	ldi	r30, 0x1E	; 30
    1046:	e3 15       	cp	r30, r3
    1048:	08 f0       	brcs	.+2      	; 0x104c <mode_input_event+0x35c>
    104a:	61 c0       	rjmp	.+194    	; 0x110e <mode_input_event+0x41e>
    104c:	30 92 60 02 	sts	0x0260, r3	; 0x800260 <tok_cnt>
			return ERROR_NOMEM;
    1050:	83 e0       	ldi	r24, 0x03	; 3
    1052:	f5 c0       	rjmp	.+490    	; 0x123e <mode_input_event+0x54e>
				n = n * 10.0 + *begin - '0';
    1054:	d7 01       	movw	r26, r14
    1056:	8d 91       	ld	r24, X+
    1058:	7d 01       	movw	r14, r26
    105a:	28 2f       	mov	r18, r24
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	40 e0       	ldi	r20, 0x00	; 0
    1062:	2d 83       	std	Y+5, r18	; 0x05
    1064:	3e 83       	std	Y+6, r19	; 0x06
    1066:	4f 83       	std	Y+7, r20	; 0x07
    1068:	58 87       	std	Y+8, r21	; 0x08
    106a:	ca 01       	movw	r24, r20
    106c:	b9 01       	movw	r22, r18
    106e:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__floatsisf>
    1072:	69 87       	std	Y+9, r22	; 0x09
    1074:	7a 87       	std	Y+10, r23	; 0x0a
    1076:	8b 87       	std	Y+11, r24	; 0x0b
    1078:	9c 87       	std	Y+12, r25	; 0x0c
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	40 e2       	ldi	r20, 0x20	; 32
    1080:	51 e4       	ldi	r21, 0x41	; 65
    1082:	8d 82       	std	Y+5, r8	; 0x05
    1084:	9e 82       	std	Y+6, r9	; 0x06
    1086:	cf 82       	std	Y+7, r12	; 0x07
    1088:	d8 86       	std	Y+8, r13	; 0x08
    108a:	6d 81       	ldd	r22, Y+5	; 0x05
    108c:	7e 81       	ldd	r23, Y+6	; 0x06
    108e:	8f 81       	ldd	r24, Y+7	; 0x07
    1090:	98 85       	ldd	r25, Y+8	; 0x08
    1092:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
    1096:	9b 01       	movw	r18, r22
    1098:	ac 01       	movw	r20, r24
    109a:	89 85       	ldd	r24, Y+9	; 0x09
    109c:	8d 83       	std	Y+5, r24	; 0x05
    109e:	9a 85       	ldd	r25, Y+10	; 0x0a
    10a0:	9e 83       	std	Y+6, r25	; 0x06
    10a2:	ab 85       	ldd	r26, Y+11	; 0x0b
    10a4:	af 83       	std	Y+7, r26	; 0x07
    10a6:	bc 85       	ldd	r27, Y+12	; 0x0c
    10a8:	b8 87       	std	Y+8, r27	; 0x08
    10aa:	6d 81       	ldd	r22, Y+5	; 0x05
    10ac:	7e 81       	ldd	r23, Y+6	; 0x06
    10ae:	8f 81       	ldd	r24, Y+7	; 0x07
    10b0:	98 85       	ldd	r25, Y+8	; 0x08
    10b2:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
    10b6:	20 e0       	ldi	r18, 0x00	; 0
    10b8:	30 e0       	ldi	r19, 0x00	; 0
    10ba:	40 e4       	ldi	r20, 0x40	; 64
    10bc:	52 e4       	ldi	r21, 0x42	; 66
    10be:	6d 83       	std	Y+5, r22	; 0x05
    10c0:	7e 83       	std	Y+6, r23	; 0x06
    10c2:	8f 83       	std	Y+7, r24	; 0x07
    10c4:	98 87       	std	Y+8, r25	; 0x08
    10c6:	6d 81       	ldd	r22, Y+5	; 0x05
    10c8:	7e 81       	ldd	r23, Y+6	; 0x06
    10ca:	8f 81       	ldd	r24, Y+7	; 0x07
    10cc:	98 85       	ldd	r25, Y+8	; 0x08
    10ce:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__subsf3>
    10d2:	4b 01       	movw	r8, r22
    10d4:	6c 01       	movw	r12, r24
				power *= 10.0;
    10d6:	20 e0       	ldi	r18, 0x00	; 0
    10d8:	30 e0       	ldi	r19, 0x00	; 0
    10da:	40 e2       	ldi	r20, 0x20	; 32
    10dc:	51 e4       	ldi	r21, 0x41	; 65
    10de:	4d 82       	std	Y+5, r4	; 0x05
    10e0:	5e 82       	std	Y+6, r5	; 0x06
    10e2:	6f 82       	std	Y+7, r6	; 0x07
    10e4:	78 86       	std	Y+8, r7	; 0x08
    10e6:	6d 81       	ldd	r22, Y+5	; 0x05
    10e8:	7e 81       	ldd	r23, Y+6	; 0x06
    10ea:	8f 81       	ldd	r24, Y+7	; 0x07
    10ec:	98 85       	ldd	r25, Y+8	; 0x08
    10ee:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
    10f2:	2b 01       	movw	r4, r22
    10f4:	3c 01       	movw	r6, r24
			for(power = 1.0; begin < term; ++begin)
    10f6:	ea 14       	cp	r14, r10
    10f8:	fb 04       	cpc	r15, r11
    10fa:	08 f4       	brcc	.+2      	; 0x10fe <mode_input_event+0x40e>
    10fc:	ab cf       	rjmp	.-170    	; 0x1054 <mode_input_event+0x364>
    10fe:	a2 cf       	rjmp	.-188    	; 0x1044 <mode_input_event+0x354>
    1100:	41 2c       	mov	r4, r1
    1102:	51 2c       	mov	r5, r1
    1104:	80 e8       	ldi	r24, 0x80	; 128
    1106:	68 2e       	mov	r6, r24
    1108:	9f e3       	ldi	r25, 0x3F	; 63
    110a:	79 2e       	mov	r7, r25
    110c:	f4 cf       	rjmp	.-24     	; 0x10f6 <mode_input_event+0x406>
			tok_type_list[tok_cnt++] = cur_type = TT_NUMBER;
    110e:	f1 e0       	ldi	r31, 0x01	; 1
    1110:	f3 0d       	add	r31, r3
    1112:	f9 87       	std	Y+9, r31	; 0x09
    1114:	e3 2d       	mov	r30, r3
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	e0 56       	subi	r30, 0x60	; 96
    111a:	fe 4f       	sbci	r31, 0xFE	; 254
    111c:	21 e0       	ldi	r18, 0x01	; 1
    111e:	20 83       	st	Z, r18
			tok_num_list[top_num++] = n / power;
    1120:	31 e0       	ldi	r19, 0x01	; 1
    1122:	32 0d       	add	r19, r2
    1124:	3a 87       	std	Y+10, r19	; 0x0a
    1126:	44 e0       	ldi	r20, 0x04	; 4
    1128:	24 9e       	mul	r2, r20
    112a:	70 01       	movw	r14, r0
    112c:	11 24       	eor	r1, r1
    112e:	c7 01       	movw	r24, r14
    1130:	80 5e       	subi	r24, 0xE0	; 224
    1132:	9e 4f       	sbci	r25, 0xFE	; 254
    1134:	7c 01       	movw	r14, r24
    1136:	24 2d       	mov	r18, r4
    1138:	35 2d       	mov	r19, r5
    113a:	46 2d       	mov	r20, r6
    113c:	57 2d       	mov	r21, r7
    113e:	8d 82       	std	Y+5, r8	; 0x05
    1140:	9e 82       	std	Y+6, r9	; 0x06
    1142:	cf 82       	std	Y+7, r12	; 0x07
    1144:	d8 86       	std	Y+8, r13	; 0x08
    1146:	6d 81       	ldd	r22, Y+5	; 0x05
    1148:	7e 81       	ldd	r23, Y+6	; 0x06
    114a:	8f 81       	ldd	r24, Y+7	; 0x07
    114c:	98 85       	ldd	r25, Y+8	; 0x08
    114e:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__divsf3>
    1152:	d7 01       	movw	r26, r14
    1154:	6d 93       	st	X+, r22
    1156:	7d 93       	st	X+, r23
    1158:	8d 93       	st	X+, r24
    115a:	9c 93       	st	X, r25
    115c:	13 97       	sbiw	r26, 0x03	; 3
			tok_type_list[tok_cnt++] = cur_type = TT_NUMBER;
    115e:	39 84       	ldd	r3, Y+9	; 0x09
			tok_num_list[top_num++] = n / power;
    1160:	2a 84       	ldd	r2, Y+10	; 0x0a
			tok_type_list[tok_cnt++] = cur_type = TT_NUMBER;
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	75 01       	movw	r14, r10
    1166:	c1 ce       	rjmp	.-638    	; 0xeea <mode_input_event+0x1fa>
			switch(c)
    1168:	93 36       	cpi	r25, 0x63	; 99
    116a:	09 f4       	brne	.+2      	; 0x116e <mode_input_event+0x47e>
    116c:	d2 c0       	rjmp	.+420    	; 0x1312 <mode_input_event+0x622>
    116e:	20 f5       	brcc	.+72     	; 0x11b8 <mode_input_event+0x4c8>
    1170:	9b 32       	cpi	r25, 0x2B	; 43
    1172:	09 f4       	brne	.+2      	; 0x1176 <mode_input_event+0x486>
    1174:	d8 c0       	rjmp	.+432    	; 0x1326 <mode_input_event+0x636>
    1176:	58 f4       	brcc	.+22     	; 0x118e <mode_input_event+0x49e>
    1178:	99 32       	cpi	r25, 0x29	; 41
    117a:	09 f4       	brne	.+2      	; 0x117e <mode_input_event+0x48e>
    117c:	53 c0       	rjmp	.+166    	; 0x1224 <mode_input_event+0x534>
    117e:	9a 32       	cpi	r25, 0x2A	; 42
    1180:	09 f4       	brne	.+2      	; 0x1184 <mode_input_event+0x494>
    1182:	d4 c0       	rjmp	.+424    	; 0x132c <mode_input_event+0x63c>
    1184:	98 32       	cpi	r25, 0x28	; 40
    1186:	09 f4       	brne	.+2      	; 0x118a <mode_input_event+0x49a>
    1188:	97 c0       	rjmp	.+302    	; 0x12b8 <mode_input_event+0x5c8>
		isop = 1;
    118a:	91 e0       	ldi	r25, 0x01	; 1
    118c:	2a c0       	rjmp	.+84     	; 0x11e2 <mode_input_event+0x4f2>
			switch(c)
    118e:	9e 35       	cpi	r25, 0x5E	; 94
    1190:	09 f4       	brne	.+2      	; 0x1194 <mode_input_event+0x4a4>
    1192:	cf c0       	rjmp	.+414    	; 0x1332 <mode_input_event+0x642>
    1194:	91 36       	cpi	r25, 0x61	; 97
    1196:	09 f4       	brne	.+2      	; 0x119a <mode_input_event+0x4aa>
    1198:	aa c0       	rjmp	.+340    	; 0x12ee <mode_input_event+0x5fe>
    119a:	9d 32       	cpi	r25, 0x2D	; 45
    119c:	b1 f7       	brne	.-20     	; 0x118a <mode_input_event+0x49a>
				switch(cur_type)
    119e:	83 30       	cpi	r24, 0x03	; 3
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <mode_input_event+0x4b4>
    11a2:	58 c0       	rjmp	.+176    	; 0x1254 <mode_input_event+0x564>
    11a4:	08 f0       	brcs	.+2      	; 0x11a8 <mode_input_event+0x4b8>
    11a6:	4e c0       	rjmp	.+156    	; 0x1244 <mode_input_event+0x554>
    11a8:	88 23       	and	r24, r24
    11aa:	09 f4       	brne	.+2      	; 0x11ae <mode_input_event+0x4be>
    11ac:	53 c0       	rjmp	.+166    	; 0x1254 <mode_input_event+0x564>
		isop = 1;
    11ae:	91 e0       	ldi	r25, 0x01	; 1
    11b0:	83 30       	cpi	r24, 0x03	; 3
    11b2:	b9 f0       	breq	.+46     	; 0x11e2 <mode_input_event+0x4f2>
					cur_type = TT_SUB;
    11b4:	8e e0       	ldi	r24, 0x0E	; 14
    11b6:	15 c0       	rjmp	.+42     	; 0x11e2 <mode_input_event+0x4f2>
			switch(c)
    11b8:	98 37       	cpi	r25, 0x78	; 120
    11ba:	09 f4       	brne	.+2      	; 0x11be <mode_input_event+0x4ce>
    11bc:	6f c0       	rjmp	.+222    	; 0x129c <mode_input_event+0x5ac>
    11be:	50 f4       	brcc	.+20     	; 0x11d4 <mode_input_event+0x4e4>
    11c0:	93 37       	cpi	r25, 0x73	; 115
    11c2:	09 f4       	brne	.+2      	; 0x11c6 <mode_input_event+0x4d6>
    11c4:	a8 c0       	rjmp	.+336    	; 0x1316 <mode_input_event+0x626>
    11c6:	94 37       	cpi	r25, 0x74	; 116
    11c8:	09 f4       	brne	.+2      	; 0x11cc <mode_input_event+0x4dc>
    11ca:	a7 c0       	rjmp	.+334    	; 0x131a <mode_input_event+0x62a>
    11cc:	9c 36       	cpi	r25, 0x6C	; 108
    11ce:	e9 f6       	brne	.-70     	; 0x118a <mode_input_event+0x49a>
    11d0:	86 e0       	ldi	r24, 0x06	; 6
    11d2:	9b c0       	rjmp	.+310    	; 0x130a <mode_input_event+0x61a>
    11d4:	97 3f       	cpi	r25, 0xF7	; 247
    11d6:	09 f4       	brne	.+2      	; 0x11da <mode_input_event+0x4ea>
    11d8:	40 c0       	rjmp	.+128    	; 0x125a <mode_input_event+0x56a>
    11da:	9d 3f       	cpi	r25, 0xFD	; 253
    11dc:	b1 f6       	brne	.-84     	; 0x118a <mode_input_event+0x49a>
		isop = 1;
    11de:	91 e0       	ldi	r25, 0x01	; 1
				cur_type = TT_DIV;
    11e0:	80 e1       	ldi	r24, 0x10	; 16
			++term;
    11e2:	57 01       	movw	r10, r14
    11e4:	ef ef       	ldi	r30, 0xFF	; 255
    11e6:	ae 1a       	sub	r10, r30
    11e8:	be 0a       	sbc	r11, r30
		if(isop)
    11ea:	99 23       	and	r25, r25
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <mode_input_event+0x500>
    11ee:	ba cf       	rjmp	.-140    	; 0x1164 <mode_input_event+0x474>
}

static uint8_t get_precedence(uint8_t tt)
{
	switch(tt)
    11f0:	e3 ef       	ldi	r30, 0xF3	; 243
    11f2:	e8 0f       	add	r30, r24
		if(isop)
    11f4:	40 2f       	mov	r20, r16
    11f6:	e5 30       	cpi	r30, 0x05	; 5
    11f8:	20 f4       	brcc	.+8      	; 0x1202 <mode_input_event+0x512>
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	ee 5f       	subi	r30, 0xFE	; 254
    11fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1200:	40 81       	ld	r20, Z
			while(top_stack > 0)
    1202:	a3 2d       	mov	r26, r3
    1204:	b0 e0       	ldi	r27, 0x00	; 0
    1206:	a0 56       	subi	r26, 0x60	; 96
    1208:	be 4f       	sbci	r27, 0xFE	; 254
    120a:	21 2f       	mov	r18, r17
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	20 5c       	subi	r18, 0xC0	; 192
    1210:	3d 4f       	sbci	r19, 0xFD	; 253
    1212:	11 11       	cpse	r17, r1
    1214:	93 c0       	rjmp	.+294    	; 0x133c <mode_input_event+0x64c>
			op_stack[top_stack++] = cur_type;
    1216:	e1 2f       	mov	r30, r17
    1218:	f0 e0       	ldi	r31, 0x00	; 0
    121a:	e0 5c       	subi	r30, 0xC0	; 192
    121c:	fd 4f       	sbci	r31, 0xFD	; 253
    121e:	80 83       	st	Z, r24
    1220:	1f 5f       	subi	r17, 0xFF	; 255
    1222:	a0 cf       	rjmp	.-192    	; 0x1164 <mode_input_event+0x474>
    1224:	a3 2d       	mov	r26, r3
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	a0 56       	subi	r26, 0x60	; 96
    122a:	be 4f       	sbci	r27, 0xFE	; 254
    122c:	e1 2f       	mov	r30, r17
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	e0 5c       	subi	r30, 0xC0	; 192
    1232:	fd 4f       	sbci	r31, 0xFD	; 253
					if(top_stack == 0)
    1234:	11 11       	cpse	r17, r1
    1236:	4c c0       	rjmp	.+152    	; 0x12d0 <mode_input_event+0x5e0>
    1238:	30 92 60 02 	sts	0x0260, r3	; 0x800260 <tok_cnt>
						return ERROR_SYNTAX;
    123c:	81 e0       	ldi	r24, 0x01	; 1
			mode_error(err);
    123e:	0e 94 25 03 	call	0x64a	; 0x64a <mode_error>
			break;
    1242:	c0 cd       	rjmp	.-1152   	; 0xdc4 <mode_input_event+0xd4>
    1244:	84 30       	cpi	r24, 0x04	; 4
    1246:	09 f4       	brne	.+2      	; 0x124a <mode_input_event+0x55a>
    1248:	77 c0       	rjmp	.+238    	; 0x1338 <mode_input_event+0x648>
    124a:	93 ef       	ldi	r25, 0xF3	; 243
    124c:	98 0f       	add	r25, r24
    124e:	95 30       	cpi	r25, 0x05	; 5
    1250:	08 f0       	brcs	.+2      	; 0x1254 <mode_input_event+0x564>
    1252:	9b cf       	rjmp	.-202    	; 0x118a <mode_input_event+0x49a>
		isop = 1;
    1254:	91 e0       	ldi	r25, 0x01	; 1
					cur_type = TT_UNARY_MINUS;
    1256:	85 e0       	ldi	r24, 0x05	; 5
    1258:	c4 cf       	rjmp	.-120    	; 0x11e2 <mode_input_event+0x4f2>
				if(tok_cnt >= TOKEN_LIST_SIZE - 1)
    125a:	be e1       	ldi	r27, 0x1E	; 30
    125c:	b3 15       	cp	r27, r3
    125e:	08 f4       	brcc	.+2      	; 0x1262 <mode_input_event+0x572>
    1260:	f5 ce       	rjmp	.-534    	; 0x104c <mode_input_event+0x35c>
				tok_type_list[tok_cnt++] =
    1262:	e3 2d       	mov	r30, r3
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	e0 56       	subi	r30, 0x60	; 96
    1268:	fe 4f       	sbci	r31, 0xFE	; 254
    126a:	21 e0       	ldi	r18, 0x01	; 1
    126c:	20 83       	st	Z, r18
				tok_num_list[top_num++] = M_PI;
    126e:	34 e0       	ldi	r19, 0x04	; 4
    1270:	23 9e       	mul	r2, r19
    1272:	f0 01       	movw	r30, r0
    1274:	11 24       	eor	r1, r1
    1276:	e0 5e       	subi	r30, 0xE0	; 224
    1278:	fe 4f       	sbci	r31, 0xFE	; 254
    127a:	5b ed       	ldi	r21, 0xDB	; 219
    127c:	4f e0       	ldi	r20, 0x0F	; 15
    127e:	39 e4       	ldi	r19, 0x49	; 73
    1280:	20 e4       	ldi	r18, 0x40	; 64
    1282:	85 2f       	mov	r24, r21
    1284:	94 2f       	mov	r25, r20
    1286:	a3 2f       	mov	r26, r19
    1288:	b2 2f       	mov	r27, r18
    128a:	80 83       	st	Z, r24
    128c:	91 83       	std	Z+1, r25	; 0x01
    128e:	a2 83       	std	Z+2, r26	; 0x02
    1290:	b3 83       	std	Z+3, r27	; 0x03
				tok_type_list[tok_cnt++] =
    1292:	33 94       	inc	r3
				tok_num_list[top_num++] = M_PI;
    1294:	23 94       	inc	r2
				isop = 0;
    1296:	90 2f       	mov	r25, r16
					cur_type = TT_NUMBER;
    1298:	81 e0       	ldi	r24, 0x01	; 1
				break;
    129a:	a3 cf       	rjmp	.-186    	; 0x11e2 <mode_input_event+0x4f2>
				if(tok_cnt >= TOKEN_LIST_SIZE - 1)
    129c:	4e e1       	ldi	r20, 0x1E	; 30
    129e:	43 15       	cp	r20, r3
    12a0:	08 f4       	brcc	.+2      	; 0x12a4 <mode_input_event+0x5b4>
    12a2:	d4 ce       	rjmp	.-600    	; 0x104c <mode_input_event+0x35c>
				tok_type_list[tok_cnt++] =
    12a4:	e3 2d       	mov	r30, r3
    12a6:	f0 e0       	ldi	r31, 0x00	; 0
    12a8:	e0 56       	subi	r30, 0x60	; 96
    12aa:	fe 4f       	sbci	r31, 0xFE	; 254
    12ac:	52 e0       	ldi	r21, 0x02	; 2
    12ae:	50 83       	st	Z, r21
    12b0:	33 94       	inc	r3
				isop = 0;
    12b2:	90 2f       	mov	r25, r16
					cur_type = TT_X;
    12b4:	82 e0       	ldi	r24, 0x02	; 2
				break;
    12b6:	95 cf       	rjmp	.-214    	; 0x11e2 <mode_input_event+0x4f2>
				if(top_stack >= OPERATOR_STACK_SIZE - 1)
    12b8:	1f 31       	cpi	r17, 0x1F	; 31
    12ba:	08 f0       	brcs	.+2      	; 0x12be <mode_input_event+0x5ce>
    12bc:	c7 ce       	rjmp	.-626    	; 0x104c <mode_input_event+0x35c>
				op_stack[top_stack++] = cur_type = TT_LP;
    12be:	e1 2f       	mov	r30, r17
    12c0:	f0 e0       	ldi	r31, 0x00	; 0
    12c2:	e0 5c       	subi	r30, 0xC0	; 192
    12c4:	fd 4f       	sbci	r31, 0xFD	; 253
    12c6:	83 e0       	ldi	r24, 0x03	; 3
    12c8:	80 83       	st	Z, r24
    12ca:	1f 5f       	subi	r17, 0xFF	; 255
				isop = 0;
    12cc:	90 2f       	mov	r25, r16
				break;
    12ce:	89 cf       	rjmp	.-238    	; 0x11e2 <mode_input_event+0x4f2>
					if((t = op_stack[top_stack - 1]) == TT_LP)
    12d0:	82 91       	ld	r24, -Z
    12d2:	83 30       	cpi	r24, 0x03	; 3
    12d4:	21 f4       	brne	.+8      	; 0x12de <mode_input_event+0x5ee>
					--top_stack;
    12d6:	11 50       	subi	r17, 0x01	; 1
				isop = 0;
    12d8:	90 2f       	mov	r25, r16
				cur_type = TT_RP;
    12da:	84 e0       	ldi	r24, 0x04	; 4
    12dc:	82 cf       	rjmp	.-252    	; 0x11e2 <mode_input_event+0x4f2>
						if(tok_cnt >= TOKEN_LIST_SIZE - 1)
    12de:	9e e1       	ldi	r25, 0x1E	; 30
    12e0:	93 15       	cp	r25, r3
    12e2:	08 f4       	brcc	.+2      	; 0x12e6 <mode_input_event+0x5f6>
    12e4:	b3 ce       	rjmp	.-666    	; 0x104c <mode_input_event+0x35c>
						tok_type_list[tok_cnt++] = t;
    12e6:	33 94       	inc	r3
    12e8:	8d 93       	st	X+, r24
					--top_stack;
    12ea:	11 50       	subi	r17, 0x01	; 1
				while(i)
    12ec:	a3 cf       	rjmp	.-186    	; 0x1234 <mode_input_event+0x544>
				switch(*(++term))
    12ee:	97 01       	movw	r18, r14
    12f0:	2f 5f       	subi	r18, 0xFF	; 255
    12f2:	3f 4f       	sbci	r19, 0xFF	; 255
    12f4:	d7 01       	movw	r26, r14
    12f6:	11 96       	adiw	r26, 0x01	; 1
    12f8:	9c 91       	ld	r25, X
    12fa:	79 01       	movw	r14, r18
    12fc:	93 37       	cpi	r25, 0x73	; 115
    12fe:	79 f0       	breq	.+30     	; 0x131e <mode_input_event+0x62e>
    1300:	94 37       	cpi	r25, 0x74	; 116
    1302:	79 f0       	breq	.+30     	; 0x1322 <mode_input_event+0x632>
    1304:	93 36       	cpi	r25, 0x63	; 99
    1306:	09 f4       	brne	.+2      	; 0x130a <mode_input_event+0x61a>
					cur_type = TT_ACOS;
    1308:	8b e0       	ldi	r24, 0x0B	; 11
				term += 2;
    130a:	b2 e0       	ldi	r27, 0x02	; 2
    130c:	eb 0e       	add	r14, r27
    130e:	f1 1c       	adc	r15, r1
    1310:	3c cf       	rjmp	.-392    	; 0x118a <mode_input_event+0x49a>
				cur_type = TT_COS;
    1312:	88 e0       	ldi	r24, 0x08	; 8
    1314:	fa cf       	rjmp	.-12     	; 0x130a <mode_input_event+0x61a>
				cur_type = TT_SIN;
    1316:	87 e0       	ldi	r24, 0x07	; 7
    1318:	f8 cf       	rjmp	.-16     	; 0x130a <mode_input_event+0x61a>
				cur_type = TT_TAN;
    131a:	89 e0       	ldi	r24, 0x09	; 9
    131c:	f6 cf       	rjmp	.-20     	; 0x130a <mode_input_event+0x61a>
    131e:	8a e0       	ldi	r24, 0x0A	; 10
    1320:	f4 cf       	rjmp	.-24     	; 0x130a <mode_input_event+0x61a>
					cur_type = TT_ATAN;
    1322:	8c e0       	ldi	r24, 0x0C	; 12
    1324:	f2 cf       	rjmp	.-28     	; 0x130a <mode_input_event+0x61a>
			switch(c)
    1326:	91 e0       	ldi	r25, 0x01	; 1
    1328:	8d e0       	ldi	r24, 0x0D	; 13
    132a:	5b cf       	rjmp	.-330    	; 0x11e2 <mode_input_event+0x4f2>
		isop = 1;
    132c:	91 e0       	ldi	r25, 0x01	; 1
				cur_type = TT_MUL;
    132e:	8f e0       	ldi	r24, 0x0F	; 15
    1330:	58 cf       	rjmp	.-336    	; 0x11e2 <mode_input_event+0x4f2>
		isop = 1;
    1332:	91 e0       	ldi	r25, 0x01	; 1
				cur_type = TT_POW;
    1334:	81 e1       	ldi	r24, 0x11	; 17
    1336:	55 cf       	rjmp	.-342    	; 0x11e2 <mode_input_event+0x4f2>
		isop = 1;
    1338:	91 e0       	ldi	r25, 0x01	; 1
    133a:	3c cf       	rjmp	.-392    	; 0x11b4 <mode_input_event+0x4c4>
				tmp = op_stack[top_stack - 1];
    133c:	f9 01       	movw	r30, r18
    133e:	92 91       	ld	r25, -Z
	switch(tt)
    1340:	23 ef       	ldi	r18, 0xF3	; 243
    1342:	29 0f       	add	r18, r25
    1344:	6e 2f       	mov	r22, r30
    1346:	5f 2f       	mov	r21, r31
    1348:	25 30       	cpi	r18, 0x05	; 5
    134a:	58 f4       	brcc	.+22     	; 0x1362 <mode_input_event+0x672>
				if((get_precedence(tmp) > precedence) ||
    134c:	e2 2f       	mov	r30, r18
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	ee 5f       	subi	r30, 0xFE	; 254
    1352:	fe 4f       	sbci	r31, 0xFE	; 254
    1354:	20 81       	ld	r18, Z
    1356:	42 17       	cp	r20, r18
    1358:	30 f4       	brcc	.+12     	; 0x1366 <mode_input_event+0x676>
			if(top_stack >= OPERATOR_STACK_SIZE - 1)
    135a:	1f 31       	cpi	r17, 0x1F	; 31
    135c:	08 f4       	brcc	.+2      	; 0x1360 <mode_input_event+0x670>
    135e:	5b cf       	rjmp	.-330    	; 0x1216 <mode_input_event+0x526>
    1360:	75 ce       	rjmp	.-790    	; 0x104c <mode_input_event+0x35c>
				if((get_precedence(tmp) > precedence) ||
    1362:	93 30       	cpi	r25, 0x03	; 3
    1364:	d1 f3       	breq	.-12     	; 0x135a <mode_input_event+0x66a>
				--top_stack;
    1366:	11 50       	subi	r17, 0x01	; 1
				if(tok_cnt >= TOKEN_LIST_SIZE - 1)
    1368:	26 2f       	mov	r18, r22
    136a:	35 2f       	mov	r19, r21
    136c:	fe e1       	ldi	r31, 0x1E	; 30
    136e:	f3 15       	cp	r31, r3
    1370:	08 f4       	brcc	.+2      	; 0x1374 <mode_input_event+0x684>
    1372:	6c ce       	rjmp	.-808    	; 0x104c <mode_input_event+0x35c>
				tok_type_list[tok_cnt++] = tmp;
    1374:	33 94       	inc	r3
    1376:	9d 93       	st	X+, r25
    1378:	4c cf       	rjmp	.-360    	; 0x1212 <mode_input_event+0x522>
		if(tok_cnt >= TOKEN_LIST_SIZE - 1)
    137a:	be e1       	ldi	r27, 0x1E	; 30
    137c:	b3 15       	cp	r27, r3
    137e:	08 f4       	brcc	.+2      	; 0x1382 <mode_input_event+0x692>
    1380:	65 ce       	rjmp	.-822    	; 0x104c <mode_input_event+0x35c>
		tok_type_list[tok_cnt++] =
    1382:	11 50       	subi	r17, 0x01	; 1
			op_stack[--top_stack];
    1384:	a1 2f       	mov	r26, r17
    1386:	b0 e0       	ldi	r27, 0x00	; 0
    1388:	a0 5c       	subi	r26, 0xC0	; 192
    138a:	bd 4f       	sbci	r27, 0xFD	; 253
		tok_type_list[tok_cnt++] =
    138c:	8c 91       	ld	r24, X
    138e:	81 93       	st	Z+, r24
    1390:	33 94       	inc	r3
    1392:	b3 cd       	rjmp	.-1178   	; 0xefa <mode_input_event+0x20a>
			if(err && err != ERROR_MATH)
    1394:	98 2f       	mov	r25, r24
    1396:	9d 7f       	andi	r25, 0xFD	; 253
    1398:	09 f0       	breq	.+2      	; 0x139c <mode_input_event+0x6ac>
    139a:	51 cf       	rjmp	.-350    	; 0x123e <mode_input_event+0x54e>
			mode_settings();
    139c:	0e 94 f5 02 	call	0x5ea	; 0x5ea <mode_settings>
    13a0:	11 cd       	rjmp	.-1502   	; 0xdc4 <mode_input_event+0xd4>
		field_ins_str_P(&fld_term, _str_sin, 3);
    13a2:	63 e0       	ldi	r22, 0x03	; 3
    13a4:	83 e6       	ldi	r24, 0x63	; 99
    13a6:	93 e0       	ldi	r25, 0x03	; 3
}
    13a8:	2c 96       	adiw	r28, 0x0c	; 12
    13aa:	0f b6       	in	r0, 0x3f	; 63
    13ac:	f8 94       	cli
    13ae:	de bf       	out	0x3e, r29	; 62
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	cd bf       	out	0x3d, r28	; 61
    13b4:	df 91       	pop	r29
    13b6:	cf 91       	pop	r28
    13b8:	1f 91       	pop	r17
    13ba:	0f 91       	pop	r16
    13bc:	ff 90       	pop	r15
    13be:	ef 90       	pop	r14
    13c0:	df 90       	pop	r13
    13c2:	cf 90       	pop	r12
    13c4:	bf 90       	pop	r11
    13c6:	af 90       	pop	r10
    13c8:	9f 90       	pop	r9
    13ca:	8f 90       	pop	r8
    13cc:	7f 90       	pop	r7
    13ce:	6f 90       	pop	r6
    13d0:	5f 90       	pop	r5
    13d2:	4f 90       	pop	r4
    13d4:	3f 90       	pop	r3
    13d6:	2f 90       	pop	r2
		field_ins_str_P(&fld_term, _str_atan, 4);
    13d8:	0c 94 33 06 	jmp	0xc66	; 0xc66 <field_ins_str_P.constprop.0>
	if(f->pos > 0)
    13dc:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <fld_term+0x5>
    13e0:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <fld_term+0x6>
    13e4:	18 16       	cp	r1, r24
    13e6:	19 06       	cpc	r1, r25
    13e8:	94 f5       	brge	.+100    	; 0x144e <mode_input_event+0x75e>
		--(f->pos);
    13ea:	9c 01       	movw	r18, r24
    13ec:	21 50       	subi	r18, 0x01	; 1
    13ee:	31 09       	sbc	r19, r1
    13f0:	30 93 ac 03 	sts	0x03AC, r19	; 0x8003ac <fld_term+0x6>
    13f4:	20 93 ab 03 	sts	0x03AB, r18	; 0x8003ab <fld_term+0x5>
		if(f->buf[f->pos] == CHAR_LP)
    13f8:	e0 90 a9 03 	lds	r14, 0x03A9	; 0x8003a9 <fld_term+0x3>
    13fc:	f0 90 aa 03 	lds	r15, 0x03AA	; 0x8003aa <fld_term+0x4>
    1400:	2e 0d       	add	r18, r14
    1402:	3f 1d       	adc	r19, r15
    1404:	d9 01       	movw	r26, r18
    1406:	2c 91       	ld	r18, X
    1408:	28 32       	cpi	r18, 0x28	; 40
    140a:	09 f0       	breq	.+2      	; 0x140e <mode_input_event+0x71e>
    140c:	30 cd       	rjmp	.-1440   	; 0xe6e <mode_input_event+0x17e>
			--(f->pos);
    140e:	02 97       	sbiw	r24, 0x02	; 2
    1410:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <fld_term+0x6>
    1414:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <fld_term+0x5>
			for(; islower(f->buf[f->pos]); --(f->pos)) ;
    1418:	00 91 ab 03 	lds	r16, 0x03AB	; 0x8003ab <fld_term+0x5>
    141c:	10 91 ac 03 	lds	r17, 0x03AC	; 0x8003ac <fld_term+0x6>
    1420:	f7 01       	movw	r30, r14
    1422:	e0 0f       	add	r30, r16
    1424:	f1 1f       	adc	r31, r17
    1426:	80 81       	ld	r24, Z
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	0e 94 27 12 	call	0x244e	; 0x244e <islower>
    142e:	89 2b       	or	r24, r25
    1430:	39 f4       	brne	.+14     	; 0x1440 <mode_input_event+0x750>
			++(f->pos);
    1432:	0f 5f       	subi	r16, 0xFF	; 255
    1434:	1f 4f       	sbci	r17, 0xFF	; 255
    1436:	10 93 ac 03 	sts	0x03AC, r17	; 0x8003ac <fld_term+0x6>
    143a:	00 93 ab 03 	sts	0x03AB, r16	; 0x8003ab <fld_term+0x5>
    143e:	17 cd       	rjmp	.-1490   	; 0xe6e <mode_input_event+0x17e>
			for(; islower(f->buf[f->pos]); --(f->pos)) ;
    1440:	01 50       	subi	r16, 0x01	; 1
    1442:	11 09       	sbc	r17, r1
    1444:	10 93 ac 03 	sts	0x03AC, r17	; 0x8003ac <fld_term+0x6>
    1448:	00 93 ab 03 	sts	0x03AB, r16	; 0x8003ab <fld_term+0x5>
    144c:	e5 cf       	rjmp	.-54     	; 0x1418 <mode_input_event+0x728>
		f->pos = f->len;
    144e:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <fld_term+0x7>
    1452:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <fld_term+0x8>
    1456:	90 93 ac 03 	sts	0x03AC, r25	; 0x8003ac <fld_term+0x6>
    145a:	80 93 ab 03 	sts	0x03AB, r24	; 0x8003ab <fld_term+0x5>
    145e:	07 cd       	rjmp	.-1522   	; 0xe6e <mode_input_event+0x17e>
		field_ins_chr(&fld_term, CHAR_X);
    1460:	68 e7       	ldi	r22, 0x78	; 120
    1462:	86 ea       	ldi	r24, 0xA6	; 166
    1464:	93 e0       	ldi	r25, 0x03	; 3
    1466:	0e 94 0c 06 	call	0xc18	; 0xc18 <field_ins_chr>
		++x_cnt;
    146a:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <x_cnt>
    146e:	8f 5f       	subi	r24, 0xFF	; 255
    1470:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <x_cnt>
		break;
    1474:	a7 cc       	rjmp	.-1714   	; 0xdc4 <mode_input_event+0xd4>
		field_ins_str_P(&fld_term, _str_asin, 4);
    1476:	64 e0       	ldi	r22, 0x04	; 4
    1478:	86 e5       	ldi	r24, 0x56	; 86
    147a:	93 e0       	ldi	r25, 0x03	; 3
    147c:	95 cf       	rjmp	.-214    	; 0x13a8 <mode_input_event+0x6b8>
		field_ins_str_P(&fld_term, _str_cos, 3);
    147e:	63 e0       	ldi	r22, 0x03	; 3
    1480:	8f e5       	ldi	r24, 0x5F	; 95
    1482:	93 e0       	ldi	r25, 0x03	; 3
    1484:	91 cf       	rjmp	.-222    	; 0x13a8 <mode_input_event+0x6b8>
		field_ins_chr(&fld_term, CHAR_PI);
    1486:	67 ef       	ldi	r22, 0xF7	; 247
    1488:	58 cc       	rjmp	.-1872   	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, CHAR_POW);
    148a:	6e e5       	ldi	r22, 0x5E	; 94
    148c:	56 cc       	rjmp	.-1876   	; 0xd3a <mode_input_event+0x4a>
		field_ins_str_P(&fld_term, _str_acos, 4);
    148e:	64 e0       	ldi	r22, 0x04	; 4
    1490:	81 e5       	ldi	r24, 0x51	; 81
    1492:	93 e0       	ldi	r25, 0x03	; 3
    1494:	89 cf       	rjmp	.-238    	; 0x13a8 <mode_input_event+0x6b8>
		field_ins_str_P(&fld_term, _str_tan, 3);
    1496:	63 e0       	ldi	r22, 0x03	; 3
    1498:	8b e5       	ldi	r24, 0x5B	; 91
    149a:	93 e0       	ldi	r25, 0x03	; 3
    149c:	85 cf       	rjmp	.-246    	; 0x13a8 <mode_input_event+0x6b8>
	if(f->pos < f->len)
    149e:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <fld_term+0x5>
    14a2:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <fld_term+0x6>
    14a6:	20 91 ad 03 	lds	r18, 0x03AD	; 0x8003ad <fld_term+0x7>
    14aa:	30 91 ae 03 	lds	r19, 0x03AE	; 0x8003ae <fld_term+0x8>
    14ae:	82 17       	cp	r24, r18
    14b0:	93 07       	cpc	r25, r19
    14b2:	24 f5       	brge	.+72     	; 0x14fc <mode_input_event+0x80c>
		if(f->buf[f->pos] != CHAR_X)
    14b4:	e0 90 a9 03 	lds	r14, 0x03A9	; 0x8003a9 <fld_term+0x3>
    14b8:	f0 90 aa 03 	lds	r15, 0x03AA	; 0x8003aa <fld_term+0x4>
    14bc:	8e 0d       	add	r24, r14
    14be:	9f 1d       	adc	r25, r15
    14c0:	fc 01       	movw	r30, r24
    14c2:	80 81       	ld	r24, Z
    14c4:	88 37       	cpi	r24, 0x78	; 120
    14c6:	51 f4       	brne	.+20     	; 0x14dc <mode_input_event+0x7ec>
		++(f->pos);
    14c8:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <fld_term+0x5>
    14cc:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <fld_term+0x6>
    14d0:	01 96       	adiw	r24, 0x01	; 1
    14d2:	c1 cf       	rjmp	.-126    	; 0x1456 <mode_input_event+0x766>
				++(f->pos);
    14d4:	10 93 ac 03 	sts	0x03AC, r17	; 0x8003ac <fld_term+0x6>
    14d8:	00 93 ab 03 	sts	0x03AB, r16	; 0x8003ab <fld_term+0x5>
			while(islower(f->buf[f->pos]))
    14dc:	00 91 ab 03 	lds	r16, 0x03AB	; 0x8003ab <fld_term+0x5>
    14e0:	10 91 ac 03 	lds	r17, 0x03AC	; 0x8003ac <fld_term+0x6>
    14e4:	f7 01       	movw	r30, r14
    14e6:	e0 0f       	add	r30, r16
    14e8:	f1 1f       	adc	r31, r17
    14ea:	80 81       	ld	r24, Z
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	0e 94 27 12 	call	0x244e	; 0x244e <islower>
				++(f->pos);
    14f2:	0f 5f       	subi	r16, 0xFF	; 255
    14f4:	1f 4f       	sbci	r17, 0xFF	; 255
			while(islower(f->buf[f->pos]))
    14f6:	89 2b       	or	r24, r25
    14f8:	69 f7       	brne	.-38     	; 0x14d4 <mode_input_event+0x7e4>
    14fa:	e6 cf       	rjmp	.-52     	; 0x14c8 <mode_input_event+0x7d8>
		f->pos = 0;
    14fc:	10 92 ac 03 	sts	0x03AC, r1	; 0x8003ac <fld_term+0x6>
    1500:	10 92 ab 03 	sts	0x03AB, r1	; 0x8003ab <fld_term+0x5>
    1504:	b4 cc       	rjmp	.-1688   	; 0xe6e <mode_input_event+0x17e>
		field_ins_str_P(&fld_term, _str_log, 3);
    1506:	63 e0       	ldi	r22, 0x03	; 3
    1508:	88 e4       	ldi	r24, 0x48	; 72
    150a:	93 e0       	ldi	r25, 0x03	; 3
    150c:	4d cf       	rjmp	.-358    	; 0x13a8 <mode_input_event+0x6b8>
		field_ins_str_P(&fld_term, _str_atan, 4);
    150e:	64 e0       	ldi	r22, 0x04	; 4
    1510:	8c e4       	ldi	r24, 0x4C	; 76
    1512:	93 e0       	ldi	r25, 0x03	; 3
    1514:	49 cf       	rjmp	.-366    	; 0x13a8 <mode_input_event+0x6b8>
		field_ins_chr(&fld_term, CHAR_ADD);
    1516:	6b e2       	ldi	r22, 0x2B	; 43
    1518:	10 cc       	rjmp	.-2016   	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, CHAR_SUB);
    151a:	6d e2       	ldi	r22, 0x2D	; 45
    151c:	0e cc       	rjmp	.-2020   	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, CHAR_MUL);
    151e:	6a e2       	ldi	r22, 0x2A	; 42
    1520:	0c cc       	rjmp	.-2024   	; 0xd3a <mode_input_event+0x4a>
		field_ins_chr(&fld_term, CHAR_DIV);
    1522:	6d ef       	ldi	r22, 0xFD	; 253
    1524:	0a cc       	rjmp	.-2028   	; 0xd3a <mode_input_event+0x4a>
    1526:	30 92 60 02 	sts	0x0260, r3	; 0x800260 <tok_cnt>
    152a:	89 ce       	rjmp	.-750    	; 0x123e <mode_input_event+0x54e>

0000152c <mode_result_event>:
{
    152c:	cf 93       	push	r28
    152e:	c8 2f       	mov	r28, r24
	mode_input();
    1530:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <mode_input>
	mode_input_event(key);
    1534:	8c 2f       	mov	r24, r28
}
    1536:	cf 91       	pop	r28
	mode_input_event(key);
    1538:	0c 94 78 06 	jmp	0xcf0	; 0xcf0 <mode_input_event>

0000153c <mode_settings_event>:
{
    153c:	cf 93       	push	r28
    153e:	df 93       	push	r29
    1540:	00 d0       	rcall	.+0      	; 0x1542 <mode_settings_event+0x6>
    1542:	00 d0       	rcall	.+0      	; 0x1544 <mode_settings_event+0x8>
    1544:	cd b7       	in	r28, 0x3d	; 61
    1546:	de b7       	in	r29, 0x3e	; 62
	field_number_event(tbl_cur_fld, key);
    1548:	20 91 6d 02 	lds	r18, 0x026D	; 0x80026d <tbl_cur_fld>
    154c:	30 91 6e 02 	lds	r19, 0x026E	; 0x80026e <tbl_cur_fld+0x1>
    1550:	3a 83       	std	Y+2, r19	; 0x02
    1552:	29 83       	std	Y+1, r18	; 0x01
	switch(key)
    1554:	ee ef       	ldi	r30, 0xFE	; 254
    1556:	e8 0f       	add	r30, r24
    1558:	ea 31       	cpi	r30, 0x1A	; 26
    155a:	08 f0       	brcs	.+2      	; 0x155e <mode_settings_event+0x22>
    155c:	90 c0       	rjmp	.+288    	; 0x167e <mode_settings_event+0x142>
    155e:	f0 e0       	ldi	r31, 0x00	; 0
    1560:	e1 54       	subi	r30, 0x41	; 65
    1562:	f9 4e       	sbci	r31, 0xE9	; 233
    1564:	0c 94 ec 11 	jmp	0x23d8	; 0x23d8 <__tablejump2__>
		field_ins_chr(f, '1');
    1568:	61 e3       	ldi	r22, 0x31	; 49
		field_ins_chr(f, '4');
    156a:	89 81       	ldd	r24, Y+1	; 0x01
    156c:	9a 81       	ldd	r25, Y+2	; 0x02
}
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	0f 90       	pop	r0
    1576:	df 91       	pop	r29
    1578:	cf 91       	pop	r28
		field_ins_chr(f, '4');
    157a:	0c 94 0c 06 	jmp	0xc18	; 0xc18 <field_ins_chr>
    157e:	64 e3       	ldi	r22, 0x34	; 52
    1580:	f4 cf       	rjmp	.-24     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '7');
    1582:	67 e3       	ldi	r22, 0x37	; 55
    1584:	f2 cf       	rjmp	.-28     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '2');
    1586:	62 e3       	ldi	r22, 0x32	; 50
    1588:	f0 cf       	rjmp	.-32     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '5');
    158a:	65 e3       	ldi	r22, 0x35	; 53
    158c:	ee cf       	rjmp	.-36     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '8');
    158e:	68 e3       	ldi	r22, 0x38	; 56
    1590:	ec cf       	rjmp	.-40     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '0');
    1592:	60 e3       	ldi	r22, 0x30	; 48
    1594:	ea cf       	rjmp	.-44     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '3');
    1596:	63 e3       	ldi	r22, 0x33	; 51
    1598:	e8 cf       	rjmp	.-48     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '6');
    159a:	66 e3       	ldi	r22, 0x36	; 54
    159c:	e6 cf       	rjmp	.-52     	; 0x156a <mode_settings_event+0x2e>
		field_ins_chr(f, '9');
    159e:	69 e3       	ldi	r22, 0x39	; 57
    15a0:	e4 cf       	rjmp	.-56     	; 0x156a <mode_settings_event+0x2e>
	f->len = 0;
    15a2:	a9 81       	ldd	r26, Y+1	; 0x01
    15a4:	ba 81       	ldd	r27, Y+2	; 0x02
    15a6:	18 96       	adiw	r26, 0x08	; 8
    15a8:	1c 92       	st	X, r1
    15aa:	1e 92       	st	-X, r1
    15ac:	17 97       	sbiw	r26, 0x07	; 7
	f->pos = 0;
    15ae:	16 96       	adiw	r26, 0x06	; 6
    15b0:	1c 92       	st	X, r1
    15b2:	1e 92       	st	-X, r1
    15b4:	15 97       	sbiw	r26, 0x05	; 5
	f->buf[0] = '\0';
    15b6:	13 96       	adiw	r26, 0x03	; 3
    15b8:	ed 91       	ld	r30, X+
    15ba:	fc 91       	ld	r31, X
    15bc:	14 97       	sbiw	r26, 0x04	; 4
		f->buf[f->len] = '\0';
    15be:	10 82       	st	Z, r1
		field_update(f);
    15c0:	cd 01       	movw	r24, r26
}
    15c2:	0f 90       	pop	r0
    15c4:	0f 90       	pop	r0
    15c6:	0f 90       	pop	r0
    15c8:	0f 90       	pop	r0
    15ca:	df 91       	pop	r29
    15cc:	cf 91       	pop	r28
		field_update(tbl_cur_fld);
    15ce:	0c 94 66 02 	jmp	0x4cc	; 0x4cc <field_update>
	if(f->pos > 0)
    15d2:	e9 81       	ldd	r30, Y+1	; 0x01
    15d4:	fa 81       	ldd	r31, Y+2	; 0x02
    15d6:	85 81       	ldd	r24, Z+5	; 0x05
    15d8:	96 81       	ldd	r25, Z+6	; 0x06
    15da:	18 16       	cp	r1, r24
    15dc:	19 06       	cpc	r1, r25
    15de:	0c f0       	brlt	.+2      	; 0x15e2 <mode_settings_event+0xa6>
    15e0:	57 c0       	rjmp	.+174    	; 0x1690 <mode_settings_event+0x154>
		field_shrink(f, 1);
    15e2:	61 e0       	ldi	r22, 0x01	; 1
    15e4:	cf 01       	movw	r24, r30
    15e6:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <field_shrink>
		--(f->pos);
    15ea:	a9 81       	ldd	r26, Y+1	; 0x01
    15ec:	ba 81       	ldd	r27, Y+2	; 0x02
    15ee:	15 96       	adiw	r26, 0x05	; 5
    15f0:	8d 91       	ld	r24, X+
    15f2:	9c 91       	ld	r25, X
    15f4:	16 97       	sbiw	r26, 0x06	; 6
    15f6:	01 97       	sbiw	r24, 0x01	; 1
    15f8:	16 96       	adiw	r26, 0x06	; 6
    15fa:	9c 93       	st	X, r25
    15fc:	8e 93       	st	-X, r24
    15fe:	15 97       	sbiw	r26, 0x05	; 5
		--(f->len);
    1600:	17 96       	adiw	r26, 0x07	; 7
    1602:	8d 91       	ld	r24, X+
    1604:	9c 91       	ld	r25, X
    1606:	18 97       	sbiw	r26, 0x08	; 8
    1608:	01 97       	sbiw	r24, 0x01	; 1
    160a:	18 96       	adiw	r26, 0x08	; 8
    160c:	9c 93       	st	X, r25
    160e:	8e 93       	st	-X, r24
    1610:	17 97       	sbiw	r26, 0x07	; 7
		f->buf[f->len] = '\0';
    1612:	13 96       	adiw	r26, 0x03	; 3
    1614:	2d 91       	ld	r18, X+
    1616:	3c 91       	ld	r19, X
    1618:	14 97       	sbiw	r26, 0x04	; 4
    161a:	82 0f       	add	r24, r18
    161c:	93 1f       	adc	r25, r19
    161e:	fc 01       	movw	r30, r24
    1620:	ce cf       	rjmp	.-100    	; 0x15be <mode_settings_event+0x82>
		field_ins_chr(f, CHAR_DP);
    1622:	6e e2       	ldi	r22, 0x2E	; 46
    1624:	a2 cf       	rjmp	.-188    	; 0x156a <mode_settings_event+0x2e>
	if(f->pos > 0)
    1626:	a9 81       	ldd	r26, Y+1	; 0x01
    1628:	ba 81       	ldd	r27, Y+2	; 0x02
    162a:	15 96       	adiw	r26, 0x05	; 5
    162c:	8d 91       	ld	r24, X+
    162e:	9c 91       	ld	r25, X
    1630:	16 97       	sbiw	r26, 0x06	; 6
    1632:	18 16       	cp	r1, r24
    1634:	19 06       	cpc	r1, r25
    1636:	34 f4       	brge	.+12     	; 0x1644 <mode_settings_event+0x108>
		--(f->pos);
    1638:	01 97       	sbiw	r24, 0x01	; 1
		++(f->pos);
    163a:	16 96       	adiw	r26, 0x06	; 6
    163c:	9c 93       	st	X, r25
    163e:	8e 93       	st	-X, r24
    1640:	15 97       	sbiw	r26, 0x05	; 5
    1642:	06 c0       	rjmp	.+12     	; 0x1650 <mode_settings_event+0x114>
		f->pos = f->len;
    1644:	e9 81       	ldd	r30, Y+1	; 0x01
    1646:	fa 81       	ldd	r31, Y+2	; 0x02
    1648:	87 81       	ldd	r24, Z+7	; 0x07
    164a:	90 85       	ldd	r25, Z+8	; 0x08
    164c:	96 83       	std	Z+6, r25	; 0x06
    164e:	85 83       	std	Z+5, r24	; 0x05
	field_update(f);
    1650:	89 81       	ldd	r24, Y+1	; 0x01
    1652:	9a 81       	ldd	r25, Y+2	; 0x02
    1654:	b6 cf       	rjmp	.-148    	; 0x15c2 <mode_settings_event+0x86>
	if(f->pos < f->len)
    1656:	a9 81       	ldd	r26, Y+1	; 0x01
    1658:	ba 81       	ldd	r27, Y+2	; 0x02
    165a:	15 96       	adiw	r26, 0x05	; 5
    165c:	8d 91       	ld	r24, X+
    165e:	9c 91       	ld	r25, X
    1660:	16 97       	sbiw	r26, 0x06	; 6
    1662:	17 96       	adiw	r26, 0x07	; 7
    1664:	2d 91       	ld	r18, X+
    1666:	3c 91       	ld	r19, X
    1668:	18 97       	sbiw	r26, 0x08	; 8
    166a:	82 17       	cp	r24, r18
    166c:	93 07       	cpc	r25, r19
    166e:	14 f4       	brge	.+4      	; 0x1674 <mode_settings_event+0x138>
		++(f->pos);
    1670:	01 96       	adiw	r24, 0x01	; 1
    1672:	e3 cf       	rjmp	.-58     	; 0x163a <mode_settings_event+0xfe>
		f->pos = 0;
    1674:	e9 81       	ldd	r30, Y+1	; 0x01
    1676:	fa 81       	ldd	r31, Y+2	; 0x02
    1678:	16 82       	std	Z+6, r1	; 0x06
    167a:	15 82       	std	Z+5, r1	; 0x05
    167c:	e9 cf       	rjmp	.-46     	; 0x1650 <mode_settings_event+0x114>
	switch(key)
    167e:	88 31       	cpi	r24, 0x18	; 24
    1680:	09 f4       	brne	.+2      	; 0x1684 <mode_settings_event+0x148>
    1682:	7a c0       	rjmp	.+244    	; 0x1778 <mode_settings_event+0x23c>
    1684:	60 f4       	brcc	.+24     	; 0x169e <mode_settings_event+0x162>
    1686:	88 23       	and	r24, r24
    1688:	b9 f0       	breq	.+46     	; 0x16b8 <mode_settings_event+0x17c>
    168a:	86 31       	cpi	r24, 0x16	; 22
    168c:	09 f4       	brne	.+2      	; 0x1690 <mode_settings_event+0x154>
    168e:	85 c0       	rjmp	.+266    	; 0x179a <mode_settings_event+0x25e>
}
    1690:	0f 90       	pop	r0
    1692:	0f 90       	pop	r0
    1694:	0f 90       	pop	r0
    1696:	0f 90       	pop	r0
    1698:	df 91       	pop	r29
    169a:	cf 91       	pop	r28
    169c:	08 95       	ret
	switch(key)
    169e:	8e 31       	cpi	r24, 0x1E	; 30
    16a0:	09 f4       	brne	.+2      	; 0x16a4 <mode_settings_event+0x168>
    16a2:	74 c0       	rjmp	.+232    	; 0x178c <mode_settings_event+0x250>
    16a4:	8f 31       	cpi	r24, 0x1F	; 31
    16a6:	a1 f7       	brne	.-24     	; 0x1690 <mode_settings_event+0x154>
}
    16a8:	0f 90       	pop	r0
    16aa:	0f 90       	pop	r0
    16ac:	0f 90       	pop	r0
    16ae:	0f 90       	pop	r0
    16b0:	df 91       	pop	r29
    16b2:	cf 91       	pop	r28
		mode_input();
    16b4:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <mode_input>
		tbl_start = atof((char *)buf_start);
    16b8:	8a e8       	ldi	r24, 0x8A	; 138
    16ba:	92 e0       	ldi	r25, 0x02	; 2
    16bc:	0e 94 1f 12 	call	0x243e	; 0x243e <atof>
    16c0:	60 93 65 02 	sts	0x0265, r22	; 0x800265 <tbl_start>
    16c4:	70 93 66 02 	sts	0x0266, r23	; 0x800266 <tbl_start+0x1>
    16c8:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <tbl_start+0x2>
    16cc:	90 93 68 02 	sts	0x0268, r25	; 0x800268 <tbl_start+0x3>
		if((tbl_step = atof((char *)buf_step)) == 0.0)
    16d0:	8f e6       	ldi	r24, 0x6F	; 111
    16d2:	92 e0       	ldi	r25, 0x02	; 2
    16d4:	0e 94 1f 12 	call	0x243e	; 0x243e <atof>
    16d8:	f6 2f       	mov	r31, r22
    16da:	e7 2f       	mov	r30, r23
    16dc:	46 2f       	mov	r20, r22
    16de:	57 2f       	mov	r21, r23
    16e0:	bc 01       	movw	r22, r24
    16e2:	40 93 61 02 	sts	0x0261, r20	; 0x800261 <tbl_step>
    16e6:	50 93 62 02 	sts	0x0262, r21	; 0x800262 <tbl_step+0x1>
    16ea:	60 93 63 02 	sts	0x0263, r22	; 0x800263 <tbl_step+0x2>
    16ee:	70 93 64 02 	sts	0x0264, r23	; 0x800264 <tbl_step+0x3>
    16f2:	20 e0       	ldi	r18, 0x00	; 0
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	a9 01       	movw	r20, r18
    16f8:	f9 83       	std	Y+1, r31	; 0x01
    16fa:	ea 83       	std	Y+2, r30	; 0x02
    16fc:	8b 83       	std	Y+3, r24	; 0x03
    16fe:	9c 83       	std	Y+4, r25	; 0x04
    1700:	69 81       	ldd	r22, Y+1	; 0x01
    1702:	7a 81       	ldd	r23, Y+2	; 0x02
    1704:	8b 81       	ldd	r24, Y+3	; 0x03
    1706:	9c 81       	ldd	r25, Y+4	; 0x04
    1708:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
    170c:	81 11       	cpse	r24, r1
    170e:	09 c0       	rjmp	.+18     	; 0x1722 <mode_settings_event+0x1e6>
			mode_error(ERROR_RANGE);
    1710:	84 e0       	ldi	r24, 0x04	; 4
}
    1712:	0f 90       	pop	r0
    1714:	0f 90       	pop	r0
    1716:	0f 90       	pop	r0
    1718:	0f 90       	pop	r0
    171a:	df 91       	pop	r29
    171c:	cf 91       	pop	r28
			mode_error(ERROR_RANGE);
    171e:	0c 94 25 03 	jmp	0x64a	; 0x64a <mode_error>
	tbl_pos = 0;
    1722:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <tbl_pos>
    1726:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <tbl_pos+0x1>
    172a:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <tbl_pos+0x2>
    172e:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <tbl_pos+0x3>
	_event = mode_table_event;
    1732:	8c eb       	ldi	r24, 0xBC	; 188
    1734:	95 e0       	ldi	r25, 0x05	; 5
    1736:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <_event+0x1>
    173a:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <_event>
	lcd_command(LCD_SET_DISPLAY | LCD_DISPLAY_ON |
    173e:	8c e0       	ldi	r24, 0x0C	; 12
    1740:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_cursor(0, 0);
    1744:	80 e8       	ldi	r24, 0x80	; 128
    1746:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_data('X');
    174a:	88 e5       	ldi	r24, 0x58	; 88
    174c:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
	lcd_data('=');
    1750:	8d e3       	ldi	r24, 0x3D	; 61
    1752:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
	lcd_cursor(0, 1);
    1756:	80 ec       	ldi	r24, 0xC0	; 192
    1758:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_data('Y');
    175c:	89 e5       	ldi	r24, 0x59	; 89
    175e:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
	lcd_data('=');
    1762:	8d e3       	ldi	r24, 0x3D	; 61
    1764:	0e 94 2d 02 	call	0x45a	; 0x45a <lcd_data>
}
    1768:	0f 90       	pop	r0
    176a:	0f 90       	pop	r0
    176c:	0f 90       	pop	r0
    176e:	0f 90       	pop	r0
    1770:	df 91       	pop	r29
    1772:	cf 91       	pop	r28
	mode_table_update();
    1774:	0c 94 32 05 	jmp	0xa64	; 0xa64 <mode_table_update>
		if(tbl_cur_fld == &fld_start)
    1778:	29 81       	ldd	r18, Y+1	; 0x01
    177a:	3a 81       	ldd	r19, Y+2	; 0x02
    177c:	2a 59       	subi	r18, 0x9A	; 154
    177e:	32 40       	sbci	r19, 0x02	; 2
    1780:	09 f0       	breq	.+2      	; 0x1784 <mode_settings_event+0x248>
    1782:	86 cf       	rjmp	.-244    	; 0x1690 <mode_settings_event+0x154>
			field_ins_chr(tbl_cur_fld, '-');
    1784:	6d e2       	ldi	r22, 0x2D	; 45
    1786:	8a e9       	ldi	r24, 0x9A	; 154
    1788:	92 e0       	ldi	r25, 0x02	; 2
    178a:	f1 ce       	rjmp	.-542    	; 0x156e <mode_settings_event+0x32>
		tbl_cur_fld = &fld_start;
    178c:	8a e9       	ldi	r24, 0x9A	; 154
    178e:	92 e0       	ldi	r25, 0x02	; 2
		tbl_cur_fld = &fld_step;
    1790:	90 93 6e 02 	sts	0x026E, r25	; 0x80026e <tbl_cur_fld+0x1>
    1794:	80 93 6d 02 	sts	0x026D, r24	; 0x80026d <tbl_cur_fld>
    1798:	14 cf       	rjmp	.-472    	; 0x15c2 <mode_settings_event+0x86>
    179a:	8f e7       	ldi	r24, 0x7F	; 127
    179c:	92 e0       	ldi	r25, 0x02	; 2
    179e:	f8 cf       	rjmp	.-16     	; 0x1790 <mode_settings_event+0x254>

000017a0 <__vector_7>:
	return 0;
}

/* Key Scanning Interrupt */
ISR(TIMER2_COMPA_vect)
{
    17a0:	1f 92       	push	r1
    17a2:	0f 92       	push	r0
    17a4:	0f b6       	in	r0, 0x3f	; 63
    17a6:	0f 92       	push	r0
    17a8:	11 24       	eor	r1, r1
    17aa:	2f 93       	push	r18
    17ac:	3f 93       	push	r19
    17ae:	4f 93       	push	r20
    17b0:	5f 93       	push	r21
    17b2:	6f 93       	push	r22
    17b4:	7f 93       	push	r23
    17b6:	8f 93       	push	r24
    17b8:	9f 93       	push	r25
    17ba:	af 93       	push	r26
    17bc:	bf 93       	push	r27
    17be:	cf 93       	push	r28
    17c0:	ef 93       	push	r30
    17c2:	ff 93       	push	r31
	static int8_t last_key = KEY_NULL;
	static uint8_t t = 0, lt = 3;
	static uint16_t key_states = 0;

	key_states |= (PINC & 0x0F) << (4 * lt);
    17c4:	86 b1       	in	r24, 0x06	; 6
    17c6:	40 91 01 01 	lds	r20, 0x0101	; 0x800101 <lt.3>
    17ca:	8f 70       	andi	r24, 0x0F	; 15
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	54 e0       	ldi	r21, 0x04	; 4
    17d0:	45 9f       	mul	r20, r21
    17d2:	90 01       	movw	r18, r0
    17d4:	11 24       	eor	r1, r1
    17d6:	02 c0       	rjmp	.+4      	; 0x17dc <__vector_7+0x3c>
    17d8:	88 0f       	add	r24, r24
    17da:	99 1f       	adc	r25, r25
    17dc:	2a 95       	dec	r18
    17de:	e2 f7       	brpl	.-8      	; 0x17d8 <__vector_7+0x38>
    17e0:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <key_states.2>
    17e4:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <key_states.2+0x1>
    17e8:	82 2b       	or	r24, r18
    17ea:	93 2b       	or	r25, r19
    17ec:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <key_states.2+0x1>
    17f0:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <key_states.2>
	DDRB &= ~(1 << lt);
    17f4:	54 b1       	in	r21, 0x04	; 4
    17f6:	81 e0       	ldi	r24, 0x01	; 1
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	9c 01       	movw	r18, r24
    17fc:	01 c0       	rjmp	.+2      	; 0x1800 <__vector_7+0x60>
    17fe:	22 0f       	add	r18, r18
    1800:	4a 95       	dec	r20
    1802:	ea f7       	brpl	.-6      	; 0x17fe <__vector_7+0x5e>
    1804:	20 95       	com	r18
    1806:	25 23       	and	r18, r21
    1808:	24 b9       	out	0x04, r18	; 4
	PORTB &= ~(1 << lt);
    180a:	25 b1       	in	r18, 0x05	; 5
    180c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <lt.3>
    1810:	01 c0       	rjmp	.+2      	; 0x1814 <__vector_7+0x74>
    1812:	88 0f       	add	r24, r24
    1814:	3a 95       	dec	r19
    1816:	ea f7       	brpl	.-6      	; 0x1812 <__vector_7+0x72>
    1818:	80 95       	com	r24
    181a:	82 23       	and	r24, r18
    181c:	85 b9       	out	0x05, r24	; 5

	if(++lt == 4)
    181e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <lt.3>
    1822:	91 e0       	ldi	r25, 0x01	; 1
    1824:	98 0f       	add	r25, r24
    1826:	83 30       	cpi	r24, 0x03	; 3
    1828:	89 f1       	breq	.+98     	; 0x188c <__vector_7+0xec>
    182a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <lt.3>
	{
		lt = 0;
	}

	DDRB |= (1 << t);
    182e:	24 b1       	in	r18, 0x04	; 4
    1830:	30 91 08 01 	lds	r19, 0x0108	; 0x800108 <t.1>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	ac 01       	movw	r20, r24
    183a:	01 c0       	rjmp	.+2      	; 0x183e <__vector_7+0x9e>
    183c:	44 0f       	add	r20, r20
    183e:	3a 95       	dec	r19
    1840:	ea f7       	brpl	.-6      	; 0x183c <__vector_7+0x9c>
    1842:	24 2b       	or	r18, r20
    1844:	24 b9       	out	0x04, r18	; 4
	PORTB |= (1 << t);
    1846:	25 b1       	in	r18, 0x05	; 5
    1848:	30 91 08 01 	lds	r19, 0x0108	; 0x800108 <t.1>
    184c:	01 c0       	rjmp	.+2      	; 0x1850 <__vector_7+0xb0>
    184e:	88 0f       	add	r24, r24
    1850:	3a 95       	dec	r19
    1852:	ea f7       	brpl	.-6      	; 0x184e <__vector_7+0xae>
    1854:	82 2b       	or	r24, r18
    1856:	85 b9       	out	0x05, r24	; 5

	if(++t == 4)
    1858:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <t.1>
    185c:	91 e0       	ldi	r25, 0x01	; 1
    185e:	98 0f       	add	r25, r24
    1860:	83 30       	cpi	r24, 0x03	; 3
    1862:	b9 f0       	breq	.+46     	; 0x1892 <__vector_7+0xf2>
    1864:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <t.1>
			_event((uint8_t)key);
		}

		last_key = key;
	}
}
    1868:	ff 91       	pop	r31
    186a:	ef 91       	pop	r30
    186c:	cf 91       	pop	r28
    186e:	bf 91       	pop	r27
    1870:	af 91       	pop	r26
    1872:	9f 91       	pop	r25
    1874:	8f 91       	pop	r24
    1876:	7f 91       	pop	r23
    1878:	6f 91       	pop	r22
    187a:	5f 91       	pop	r21
    187c:	4f 91       	pop	r20
    187e:	3f 91       	pop	r19
    1880:	2f 91       	pop	r18
    1882:	0f 90       	pop	r0
    1884:	0f be       	out	0x3f, r0	; 63
    1886:	0f 90       	pop	r0
    1888:	1f 90       	pop	r1
    188a:	18 95       	reti
		lt = 0;
    188c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <lt.3>
    1890:	ce cf       	rjmp	.-100    	; 0x182e <__vector_7+0x8e>
			if((key_states >> t) & 1)
    1892:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <key_states.2>
    1896:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <key_states.2+0x1>
		for(t = 0; t < 16; ++t)
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	c8 2f       	mov	r28, r24
    18a0:	80 31       	cpi	r24, 0x10	; 16
    18a2:	91 05       	cpc	r25, r1
    18a4:	11 f4       	brne	.+4      	; 0x18aa <__vector_7+0x10a>
		int8_t key = KEY_NULL;
    18a6:	cf ef       	ldi	r28, 0xFF	; 255
    18a8:	11 c0       	rjmp	.+34     	; 0x18cc <__vector_7+0x12c>
			if((key_states >> t) & 1)
    18aa:	ac 01       	movw	r20, r24
    18ac:	4f 5f       	subi	r20, 0xFF	; 255
    18ae:	5f 4f       	sbci	r21, 0xFF	; 255
    18b0:	b9 01       	movw	r22, r18
    18b2:	08 2e       	mov	r0, r24
    18b4:	02 c0       	rjmp	.+4      	; 0x18ba <__vector_7+0x11a>
    18b6:	76 95       	lsr	r23
    18b8:	67 95       	ror	r22
    18ba:	0a 94       	dec	r0
    18bc:	e2 f7       	brpl	.-8      	; 0x18b6 <__vector_7+0x116>
    18be:	60 ff       	sbrs	r22, 0
    18c0:	1c c0       	rjmp	.+56     	; 0x18fa <__vector_7+0x15a>
    18c2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <t.1>
				if(!((PINB >> PIN_SHIFT) & 1))
    18c6:	1c 9b       	sbis	0x03, 4	; 3
    18c8:	16 c0       	rjmp	.+44     	; 0x18f6 <__vector_7+0x156>
				key = t;
    18ca:	c8 2f       	mov	r28, r24
		key_states = 0;
    18cc:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <key_states.2+0x1>
    18d0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <key_states.2>
		t = 0;
    18d4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <t.1>
		if(key != last_key && last_key == KEY_NULL)
    18d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <last_key.0>
    18dc:	8c 17       	cp	r24, r28
    18de:	41 f0       	breq	.+16     	; 0x18f0 <__vector_7+0x150>
    18e0:	8f 3f       	cpi	r24, 0xFF	; 255
    18e2:	31 f4       	brne	.+12     	; 0x18f0 <__vector_7+0x150>
			_event((uint8_t)key);
    18e4:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <_event>
    18e8:	f0 91 0e 01 	lds	r31, 0x010E	; 0x80010e <_event+0x1>
    18ec:	8c 2f       	mov	r24, r28
    18ee:	09 95       	icall
		last_key = key;
    18f0:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <last_key.0>
}
    18f4:	b9 cf       	rjmp	.-142    	; 0x1868 <__vector_7+0xc8>
					key += 16;
    18f6:	c0 5f       	subi	r28, 0xF0	; 240
    18f8:	e9 cf       	rjmp	.-46     	; 0x18cc <__vector_7+0x12c>
    18fa:	ca 01       	movw	r24, r20
    18fc:	d0 cf       	rjmp	.-96     	; 0x189e <__vector_7+0xfe>

000018fe <main>:
	LCD_DIR |= pins;
    18fe:	8a b1       	in	r24, 0x0a	; 10
    1900:	8c 6f       	ori	r24, 0xFC	; 252
    1902:	8a b9       	out	0x0a, r24	; 10
	LCD_OUT &= ~pins;
    1904:	8b b1       	in	r24, 0x0b	; 11
    1906:	83 70       	andi	r24, 0x03	; 3
    1908:	8b b9       	out	0x0b, r24	; 11
    190a:	8f e2       	ldi	r24, 0x2F	; 47
    190c:	95 e7       	ldi	r25, 0x75	; 117
    190e:	01 97       	sbiw	r24, 0x01	; 1
    1910:	f1 f7       	brne	.-4      	; 0x190e <main+0x10>
    1912:	00 c0       	rjmp	.+0      	; 0x1914 <main+0x16>
    1914:	00 00       	nop
	lcd_out(LCD_SOFT_RESET);
    1916:	80 e3       	ldi	r24, 0x30	; 48
    1918:	0e 94 24 02 	call	0x448	; 0x448 <lcd_out>
    191c:	8f e0       	ldi	r24, 0x0F	; 15
    191e:	97 e2       	ldi	r25, 0x27	; 39
    1920:	01 97       	sbiw	r24, 0x01	; 1
    1922:	f1 f7       	brne	.-4      	; 0x1920 <main+0x22>
    1924:	00 c0       	rjmp	.+0      	; 0x1926 <main+0x28>
    1926:	00 00       	nop
	lcd_enable();
    1928:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_enable>
    192c:	8f ec       	ldi	r24, 0xCF	; 207
    192e:	97 e0       	ldi	r25, 0x07	; 7
    1930:	01 97       	sbiw	r24, 0x01	; 1
    1932:	f1 f7       	brne	.-4      	; 0x1930 <main+0x32>
    1934:	00 c0       	rjmp	.+0      	; 0x1936 <main+0x38>
    1936:	00 00       	nop
	lcd_enable();
    1938:	0e 94 1d 02 	call	0x43a	; 0x43a <lcd_enable>
    193c:	8f ec       	ldi	r24, 0xCF	; 207
    193e:	97 e0       	ldi	r25, 0x07	; 7
    1940:	01 97       	sbiw	r24, 0x01	; 1
    1942:	f1 f7       	brne	.-4      	; 0x1940 <main+0x42>
    1944:	00 c0       	rjmp	.+0      	; 0x1946 <main+0x48>
    1946:	00 00       	nop
	lcd_out(LCD_SET_FUNCTION | LCD_FUNCTION_4BIT);
    1948:	80 e2       	ldi	r24, 0x20	; 32
    194a:	0e 94 24 02 	call	0x448	; 0x448 <lcd_out>
    194e:	8f e0       	ldi	r24, 0x0F	; 15
    1950:	97 e2       	ldi	r25, 0x27	; 39
    1952:	01 97       	sbiw	r24, 0x01	; 1
    1954:	f1 f7       	brne	.-4      	; 0x1952 <main+0x54>
    1956:	00 c0       	rjmp	.+0      	; 0x1958 <main+0x5a>
    1958:	00 00       	nop
	lcd_command(LCD_SET_FUNCTION | LCD_FUNCTION_4BIT |
    195a:	88 e2       	ldi	r24, 0x28	; 40
    195c:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_command(LCD_SET_DISPLAY | LCD_DISPLAY_ON |
    1960:	8c e0       	ldi	r24, 0x0C	; 12
    1962:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_command(LCD_SET_ENTRY | LCD_ENTRY_INCREASE |
    1966:	86 e0       	ldi	r24, 0x06	; 6
    1968:	0e 94 57 02 	call	0x4ae	; 0x4ae <lcd_command>
	lcd_clear();
    196c:	0e 94 d6 02 	call	0x5ac	; 0x5ac <lcd_clear>
	TCCR2A = (1 << WGM21);
    1970:	82 e0       	ldi	r24, 0x02	; 2
    1972:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
	TCCR2B = (1 << CS22) | (1 << CS20);
    1976:	95 e0       	ldi	r25, 0x05	; 5
    1978:	90 93 b1 00 	sts	0x00B1, r25	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
	TIMSK2 = (1 << OCIE2A);
    197c:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
	OCR2A = 78;
    1980:	8e e4       	ldi	r24, 0x4E	; 78
    1982:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
	PORTB |= (1 << PIN_SHIFT) | (1 << 5) | (1 << 6) | (1 << 7);
    1986:	85 b1       	in	r24, 0x05	; 5
    1988:	80 6f       	ori	r24, 0xF0	; 240
    198a:	85 b9       	out	0x05, r24	; 5
	PORTC |= (1 << 4) | (1 << 5);
    198c:	88 b1       	in	r24, 0x08	; 8
    198e:	80 63       	ori	r24, 0x30	; 48
    1990:	88 b9       	out	0x08, r24	; 8
	PORTD |= (1 << 0) | (1 << 1);
    1992:	8b b1       	in	r24, 0x0b	; 11
    1994:	83 60       	ori	r24, 0x03	; 3
    1996:	8b b9       	out	0x0b, r24	; 11
	memcpy_P(&fld_term, &_fld_term_P, sizeof(Field));
    1998:	4b e0       	ldi	r20, 0x0B	; 11
    199a:	50 e0       	ldi	r21, 0x00	; 0
    199c:	6f ed       	ldi	r22, 0xDF	; 223
    199e:	72 e0       	ldi	r23, 0x02	; 2
    19a0:	86 ea       	ldi	r24, 0xA6	; 166
    19a2:	93 e0       	ldi	r25, 0x03	; 3
    19a4:	0e 94 2e 12 	call	0x245c	; 0x245c <memcpy_P>
	memcpy_P(&fld_start, &_fld_start_P, sizeof(Field));
    19a8:	4b e0       	ldi	r20, 0x0B	; 11
    19aa:	50 e0       	ldi	r21, 0x00	; 0
    19ac:	64 ed       	ldi	r22, 0xD4	; 212
    19ae:	72 e0       	ldi	r23, 0x02	; 2
    19b0:	8a e9       	ldi	r24, 0x9A	; 154
    19b2:	92 e0       	ldi	r25, 0x02	; 2
    19b4:	0e 94 2e 12 	call	0x245c	; 0x245c <memcpy_P>
	memcpy_P(&fld_step, &_fld_step_P, sizeof(Field));
    19b8:	4b e0       	ldi	r20, 0x0B	; 11
    19ba:	50 e0       	ldi	r21, 0x00	; 0
    19bc:	69 ec       	ldi	r22, 0xC9	; 201
    19be:	72 e0       	ldi	r23, 0x02	; 2
    19c0:	8f e7       	ldi	r24, 0x7F	; 127
    19c2:	92 e0       	ldi	r25, 0x02	; 2
    19c4:	0e 94 2e 12 	call	0x245c	; 0x245c <memcpy_P>
	mode_input();
    19c8:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <mode_input>
	sei();
    19cc:	78 94       	sei
	power_adc_disable();
    19ce:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    19d2:	81 60       	ori	r24, 0x01	; 1
    19d4:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	power_spi_disable();
    19d8:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    19dc:	84 60       	ori	r24, 0x04	; 4
    19de:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	power_twi_disable();
    19e2:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    19e6:	80 68       	ori	r24, 0x80	; 128
    19e8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	power_timer0_disable();
    19ec:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    19f0:	80 62       	ori	r24, 0x20	; 32
    19f2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	power_timer1_disable();
    19f6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    19fa:	88 60       	ori	r24, 0x08	; 8
    19fc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	power_usart0_disable();
    1a00:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1a04:	82 60       	ori	r24, 0x02	; 2
    1a06:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	sleep_enable();
    1a0a:	83 b7       	in	r24, 0x33	; 51
    1a0c:	81 60       	ori	r24, 0x01	; 1
    1a0e:	83 bf       	out	0x33, r24	; 51
	set_sleep_mode(SLEEP_MODE_PWR_SAVE);
    1a10:	83 b7       	in	r24, 0x33	; 51
    1a12:	81 7f       	andi	r24, 0xF1	; 241
    1a14:	86 60       	ori	r24, 0x06	; 6
    1a16:	83 bf       	out	0x33, r24	; 51
	for(;;) { sleep_cpu(); }
    1a18:	88 95       	sleep
    1a1a:	fe cf       	rjmp	.-4      	; 0x1a18 <main+0x11a>

00001a1c <acos>:
    1a1c:	9f 93       	push	r25
    1a1e:	9f 77       	andi	r25, 0x7F	; 127
    1a20:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__fp_arccos>
    1a24:	0f 90       	pop	r0
    1a26:	00 20       	and	r0, r0
    1a28:	42 f4       	brpl	.+16     	; 0x1a3a <acos+0x1e>
    1a2a:	90 58       	subi	r25, 0x80	; 128
    1a2c:	a2 ea       	ldi	r26, 0xA2	; 162
    1a2e:	2a ed       	ldi	r18, 0xDA	; 218
    1a30:	3f e0       	ldi	r19, 0x0F	; 15
    1a32:	49 e4       	ldi	r20, 0x49	; 73
    1a34:	50 e4       	ldi	r21, 0x40	; 64
    1a36:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1a3a:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <__fp_round>

00001a3e <__subsf3>:
    1a3e:	50 58       	subi	r21, 0x80	; 128

00001a40 <__addsf3>:
    1a40:	bb 27       	eor	r27, r27
    1a42:	aa 27       	eor	r26, r26
    1a44:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1a48:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <__fp_round>
    1a4c:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fp_pscA>
    1a50:	38 f0       	brcs	.+14     	; 0x1a60 <__addsf3+0x20>
    1a52:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_pscB>
    1a56:	20 f0       	brcs	.+8      	; 0x1a60 <__addsf3+0x20>
    1a58:	39 f4       	brne	.+14     	; 0x1a68 <__addsf3+0x28>
    1a5a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a5c:	19 f4       	brne	.+6      	; 0x1a64 <__addsf3+0x24>
    1a5e:	26 f4       	brtc	.+8      	; 0x1a68 <__addsf3+0x28>
    1a60:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>
    1a64:	0e f4       	brtc	.+2      	; 0x1a68 <__addsf3+0x28>
    1a66:	e0 95       	com	r30
    1a68:	e7 fb       	bst	r30, 7
    1a6a:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>

00001a6e <__addsf3x>:
    1a6e:	e9 2f       	mov	r30, r25
    1a70:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__fp_split3>
    1a74:	58 f3       	brcs	.-42     	; 0x1a4c <__addsf3+0xc>
    1a76:	ba 17       	cp	r27, r26
    1a78:	62 07       	cpc	r22, r18
    1a7a:	73 07       	cpc	r23, r19
    1a7c:	84 07       	cpc	r24, r20
    1a7e:	95 07       	cpc	r25, r21
    1a80:	20 f0       	brcs	.+8      	; 0x1a8a <__addsf3x+0x1c>
    1a82:	79 f4       	brne	.+30     	; 0x1aa2 <__addsf3x+0x34>
    1a84:	a6 f5       	brtc	.+104    	; 0x1aee <__addsf3x+0x80>
    1a86:	0c 94 97 0f 	jmp	0x1f2e	; 0x1f2e <__fp_zero>
    1a8a:	0e f4       	brtc	.+2      	; 0x1a8e <__addsf3x+0x20>
    1a8c:	e0 95       	com	r30
    1a8e:	0b 2e       	mov	r0, r27
    1a90:	ba 2f       	mov	r27, r26
    1a92:	a0 2d       	mov	r26, r0
    1a94:	0b 01       	movw	r0, r22
    1a96:	b9 01       	movw	r22, r18
    1a98:	90 01       	movw	r18, r0
    1a9a:	0c 01       	movw	r0, r24
    1a9c:	ca 01       	movw	r24, r20
    1a9e:	a0 01       	movw	r20, r0
    1aa0:	11 24       	eor	r1, r1
    1aa2:	ff 27       	eor	r31, r31
    1aa4:	59 1b       	sub	r21, r25
    1aa6:	99 f0       	breq	.+38     	; 0x1ace <__addsf3x+0x60>
    1aa8:	59 3f       	cpi	r21, 0xF9	; 249
    1aaa:	50 f4       	brcc	.+20     	; 0x1ac0 <__addsf3x+0x52>
    1aac:	50 3e       	cpi	r21, 0xE0	; 224
    1aae:	68 f1       	brcs	.+90     	; 0x1b0a <__addsf3x+0x9c>
    1ab0:	1a 16       	cp	r1, r26
    1ab2:	f0 40       	sbci	r31, 0x00	; 0
    1ab4:	a2 2f       	mov	r26, r18
    1ab6:	23 2f       	mov	r18, r19
    1ab8:	34 2f       	mov	r19, r20
    1aba:	44 27       	eor	r20, r20
    1abc:	58 5f       	subi	r21, 0xF8	; 248
    1abe:	f3 cf       	rjmp	.-26     	; 0x1aa6 <__addsf3x+0x38>
    1ac0:	46 95       	lsr	r20
    1ac2:	37 95       	ror	r19
    1ac4:	27 95       	ror	r18
    1ac6:	a7 95       	ror	r26
    1ac8:	f0 40       	sbci	r31, 0x00	; 0
    1aca:	53 95       	inc	r21
    1acc:	c9 f7       	brne	.-14     	; 0x1ac0 <__addsf3x+0x52>
    1ace:	7e f4       	brtc	.+30     	; 0x1aee <__addsf3x+0x80>
    1ad0:	1f 16       	cp	r1, r31
    1ad2:	ba 0b       	sbc	r27, r26
    1ad4:	62 0b       	sbc	r22, r18
    1ad6:	73 0b       	sbc	r23, r19
    1ad8:	84 0b       	sbc	r24, r20
    1ada:	ba f0       	brmi	.+46     	; 0x1b0a <__addsf3x+0x9c>
    1adc:	91 50       	subi	r25, 0x01	; 1
    1ade:	a1 f0       	breq	.+40     	; 0x1b08 <__addsf3x+0x9a>
    1ae0:	ff 0f       	add	r31, r31
    1ae2:	bb 1f       	adc	r27, r27
    1ae4:	66 1f       	adc	r22, r22
    1ae6:	77 1f       	adc	r23, r23
    1ae8:	88 1f       	adc	r24, r24
    1aea:	c2 f7       	brpl	.-16     	; 0x1adc <__addsf3x+0x6e>
    1aec:	0e c0       	rjmp	.+28     	; 0x1b0a <__addsf3x+0x9c>
    1aee:	ba 0f       	add	r27, r26
    1af0:	62 1f       	adc	r22, r18
    1af2:	73 1f       	adc	r23, r19
    1af4:	84 1f       	adc	r24, r20
    1af6:	48 f4       	brcc	.+18     	; 0x1b0a <__addsf3x+0x9c>
    1af8:	87 95       	ror	r24
    1afa:	77 95       	ror	r23
    1afc:	67 95       	ror	r22
    1afe:	b7 95       	ror	r27
    1b00:	f7 95       	ror	r31
    1b02:	9e 3f       	cpi	r25, 0xFE	; 254
    1b04:	08 f0       	brcs	.+2      	; 0x1b08 <__addsf3x+0x9a>
    1b06:	b0 cf       	rjmp	.-160    	; 0x1a68 <__addsf3+0x28>
    1b08:	93 95       	inc	r25
    1b0a:	88 0f       	add	r24, r24
    1b0c:	08 f0       	brcs	.+2      	; 0x1b10 <__addsf3x+0xa2>
    1b0e:	99 27       	eor	r25, r25
    1b10:	ee 0f       	add	r30, r30
    1b12:	97 95       	ror	r25
    1b14:	87 95       	ror	r24
    1b16:	08 95       	ret

00001b18 <asin>:
    1b18:	9f 93       	push	r25
    1b1a:	9f 77       	andi	r25, 0x7F	; 127
    1b1c:	ee e3       	ldi	r30, 0x3E	; 62
    1b1e:	89 37       	cpi	r24, 0x79	; 121
    1b20:	9e 07       	cpc	r25, r30
    1b22:	28 f4       	brcc	.+10     	; 0x1b2e <asin+0x16>
    1b24:	e8 e6       	ldi	r30, 0x68	; 104
    1b26:	f0 e0       	ldi	r31, 0x00	; 0
    1b28:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <__fp_powsodd>
    1b2c:	0c c0       	rjmp	.+24     	; 0x1b46 <asin+0x2e>
    1b2e:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__fp_arccos>
    1b32:	90 58       	subi	r25, 0x80	; 128
    1b34:	a2 ea       	ldi	r26, 0xA2	; 162
    1b36:	2a ed       	ldi	r18, 0xDA	; 218
    1b38:	3f e0       	ldi	r19, 0x0F	; 15
    1b3a:	49 ec       	ldi	r20, 0xC9	; 201
    1b3c:	5f e3       	ldi	r21, 0x3F	; 63
    1b3e:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1b42:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <__fp_round>
    1b46:	0f 90       	pop	r0
    1b48:	07 fc       	sbrc	r0, 7
    1b4a:	90 58       	subi	r25, 0x80	; 128
    1b4c:	08 95       	ret

00001b4e <atan>:
    1b4e:	df 93       	push	r29
    1b50:	dd 27       	eor	r29, r29
    1b52:	b9 2f       	mov	r27, r25
    1b54:	bf 77       	andi	r27, 0x7F	; 127
    1b56:	40 e8       	ldi	r20, 0x80	; 128
    1b58:	5f e3       	ldi	r21, 0x3F	; 63
    1b5a:	16 16       	cp	r1, r22
    1b5c:	17 06       	cpc	r1, r23
    1b5e:	48 07       	cpc	r20, r24
    1b60:	5b 07       	cpc	r21, r27
    1b62:	18 f4       	brcc	.+6      	; 0x1b6a <atan+0x1c>
    1b64:	d9 2f       	mov	r29, r25
    1b66:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <inverse>
    1b6a:	9f 93       	push	r25
    1b6c:	8f 93       	push	r24
    1b6e:	7f 93       	push	r23
    1b70:	6f 93       	push	r22
    1b72:	0e 94 06 11 	call	0x220c	; 0x220c <square>
    1b76:	ec e7       	ldi	r30, 0x7C	; 124
    1b78:	f0 e0       	ldi	r31, 0x00	; 0
    1b7a:	0e 94 dc 0e 	call	0x1db8	; 0x1db8 <__fp_powser>
    1b7e:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <__fp_round>
    1b82:	2f 91       	pop	r18
    1b84:	3f 91       	pop	r19
    1b86:	4f 91       	pop	r20
    1b88:	5f 91       	pop	r21
    1b8a:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3x>
    1b8e:	dd 23       	and	r29, r29
    1b90:	51 f0       	breq	.+20     	; 0x1ba6 <atan+0x58>
    1b92:	90 58       	subi	r25, 0x80	; 128
    1b94:	a2 ea       	ldi	r26, 0xA2	; 162
    1b96:	2a ed       	ldi	r18, 0xDA	; 218
    1b98:	3f e0       	ldi	r19, 0x0F	; 15
    1b9a:	49 ec       	ldi	r20, 0xC9	; 201
    1b9c:	5f e3       	ldi	r21, 0x3F	; 63
    1b9e:	d0 78       	andi	r29, 0x80	; 128
    1ba0:	5d 27       	eor	r21, r29
    1ba2:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1ba6:	df 91       	pop	r29
    1ba8:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <__fp_round>

00001bac <__cmpsf2>:
    1bac:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <__fp_cmp>
    1bb0:	08 f4       	brcc	.+2      	; 0x1bb4 <__cmpsf2+0x8>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	08 95       	ret

00001bb6 <cos>:
    1bb6:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <__fp_rempio2>
    1bba:	e3 95       	inc	r30
    1bbc:	0c 94 61 0f 	jmp	0x1ec2	; 0x1ec2 <__fp_sinus>

00001bc0 <__divsf3>:
    1bc0:	0e 94 f4 0d 	call	0x1be8	; 0x1be8 <__divsf3x>
    1bc4:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <__fp_round>
    1bc8:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_pscB>
    1bcc:	58 f0       	brcs	.+22     	; 0x1be4 <__divsf3+0x24>
    1bce:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fp_pscA>
    1bd2:	40 f0       	brcs	.+16     	; 0x1be4 <__divsf3+0x24>
    1bd4:	29 f4       	brne	.+10     	; 0x1be0 <__divsf3+0x20>
    1bd6:	5f 3f       	cpi	r21, 0xFF	; 255
    1bd8:	29 f0       	breq	.+10     	; 0x1be4 <__divsf3+0x24>
    1bda:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>
    1bde:	51 11       	cpse	r21, r1
    1be0:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__fp_szero>
    1be4:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>

00001be8 <__divsf3x>:
    1be8:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__fp_split3>
    1bec:	68 f3       	brcs	.-38     	; 0x1bc8 <__divsf3+0x8>

00001bee <__divsf3_pse>:
    1bee:	99 23       	and	r25, r25
    1bf0:	b1 f3       	breq	.-20     	; 0x1bde <__divsf3+0x1e>
    1bf2:	55 23       	and	r21, r21
    1bf4:	91 f3       	breq	.-28     	; 0x1bda <__divsf3+0x1a>
    1bf6:	95 1b       	sub	r25, r21
    1bf8:	55 0b       	sbc	r21, r21
    1bfa:	bb 27       	eor	r27, r27
    1bfc:	aa 27       	eor	r26, r26
    1bfe:	62 17       	cp	r22, r18
    1c00:	73 07       	cpc	r23, r19
    1c02:	84 07       	cpc	r24, r20
    1c04:	38 f0       	brcs	.+14     	; 0x1c14 <__divsf3_pse+0x26>
    1c06:	9f 5f       	subi	r25, 0xFF	; 255
    1c08:	5f 4f       	sbci	r21, 0xFF	; 255
    1c0a:	22 0f       	add	r18, r18
    1c0c:	33 1f       	adc	r19, r19
    1c0e:	44 1f       	adc	r20, r20
    1c10:	aa 1f       	adc	r26, r26
    1c12:	a9 f3       	breq	.-22     	; 0x1bfe <__divsf3_pse+0x10>
    1c14:	35 d0       	rcall	.+106    	; 0x1c80 <__divsf3_pse+0x92>
    1c16:	0e 2e       	mov	r0, r30
    1c18:	3a f0       	brmi	.+14     	; 0x1c28 <__divsf3_pse+0x3a>
    1c1a:	e0 e8       	ldi	r30, 0x80	; 128
    1c1c:	32 d0       	rcall	.+100    	; 0x1c82 <__divsf3_pse+0x94>
    1c1e:	91 50       	subi	r25, 0x01	; 1
    1c20:	50 40       	sbci	r21, 0x00	; 0
    1c22:	e6 95       	lsr	r30
    1c24:	00 1c       	adc	r0, r0
    1c26:	ca f7       	brpl	.-14     	; 0x1c1a <__divsf3_pse+0x2c>
    1c28:	2b d0       	rcall	.+86     	; 0x1c80 <__divsf3_pse+0x92>
    1c2a:	fe 2f       	mov	r31, r30
    1c2c:	29 d0       	rcall	.+82     	; 0x1c80 <__divsf3_pse+0x92>
    1c2e:	66 0f       	add	r22, r22
    1c30:	77 1f       	adc	r23, r23
    1c32:	88 1f       	adc	r24, r24
    1c34:	bb 1f       	adc	r27, r27
    1c36:	26 17       	cp	r18, r22
    1c38:	37 07       	cpc	r19, r23
    1c3a:	48 07       	cpc	r20, r24
    1c3c:	ab 07       	cpc	r26, r27
    1c3e:	b0 e8       	ldi	r27, 0x80	; 128
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <__divsf3_pse+0x56>
    1c42:	bb 0b       	sbc	r27, r27
    1c44:	80 2d       	mov	r24, r0
    1c46:	bf 01       	movw	r22, r30
    1c48:	ff 27       	eor	r31, r31
    1c4a:	93 58       	subi	r25, 0x83	; 131
    1c4c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c4e:	3a f0       	brmi	.+14     	; 0x1c5e <__divsf3_pse+0x70>
    1c50:	9e 3f       	cpi	r25, 0xFE	; 254
    1c52:	51 05       	cpc	r21, r1
    1c54:	78 f0       	brcs	.+30     	; 0x1c74 <__divsf3_pse+0x86>
    1c56:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>
    1c5a:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__fp_szero>
    1c5e:	5f 3f       	cpi	r21, 0xFF	; 255
    1c60:	e4 f3       	brlt	.-8      	; 0x1c5a <__divsf3_pse+0x6c>
    1c62:	98 3e       	cpi	r25, 0xE8	; 232
    1c64:	d4 f3       	brlt	.-12     	; 0x1c5a <__divsf3_pse+0x6c>
    1c66:	86 95       	lsr	r24
    1c68:	77 95       	ror	r23
    1c6a:	67 95       	ror	r22
    1c6c:	b7 95       	ror	r27
    1c6e:	f7 95       	ror	r31
    1c70:	9f 5f       	subi	r25, 0xFF	; 255
    1c72:	c9 f7       	brne	.-14     	; 0x1c66 <__divsf3_pse+0x78>
    1c74:	88 0f       	add	r24, r24
    1c76:	91 1d       	adc	r25, r1
    1c78:	96 95       	lsr	r25
    1c7a:	87 95       	ror	r24
    1c7c:	97 f9       	bld	r25, 7
    1c7e:	08 95       	ret
    1c80:	e1 e0       	ldi	r30, 0x01	; 1
    1c82:	66 0f       	add	r22, r22
    1c84:	77 1f       	adc	r23, r23
    1c86:	88 1f       	adc	r24, r24
    1c88:	bb 1f       	adc	r27, r27
    1c8a:	62 17       	cp	r22, r18
    1c8c:	73 07       	cpc	r23, r19
    1c8e:	84 07       	cpc	r24, r20
    1c90:	ba 07       	cpc	r27, r26
    1c92:	20 f0       	brcs	.+8      	; 0x1c9c <__divsf3_pse+0xae>
    1c94:	62 1b       	sub	r22, r18
    1c96:	73 0b       	sbc	r23, r19
    1c98:	84 0b       	sbc	r24, r20
    1c9a:	ba 0b       	sbc	r27, r26
    1c9c:	ee 1f       	adc	r30, r30
    1c9e:	88 f7       	brcc	.-30     	; 0x1c82 <__divsf3_pse+0x94>
    1ca0:	e0 95       	com	r30
    1ca2:	08 95       	ret

00001ca4 <__floatunsisf>:
    1ca4:	e8 94       	clt
    1ca6:	09 c0       	rjmp	.+18     	; 0x1cba <__floatsisf+0x12>

00001ca8 <__floatsisf>:
    1ca8:	97 fb       	bst	r25, 7
    1caa:	3e f4       	brtc	.+14     	; 0x1cba <__floatsisf+0x12>
    1cac:	90 95       	com	r25
    1cae:	80 95       	com	r24
    1cb0:	70 95       	com	r23
    1cb2:	61 95       	neg	r22
    1cb4:	7f 4f       	sbci	r23, 0xFF	; 255
    1cb6:	8f 4f       	sbci	r24, 0xFF	; 255
    1cb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cba:	99 23       	and	r25, r25
    1cbc:	a9 f0       	breq	.+42     	; 0x1ce8 <__floatsisf+0x40>
    1cbe:	f9 2f       	mov	r31, r25
    1cc0:	96 e9       	ldi	r25, 0x96	; 150
    1cc2:	bb 27       	eor	r27, r27
    1cc4:	93 95       	inc	r25
    1cc6:	f6 95       	lsr	r31
    1cc8:	87 95       	ror	r24
    1cca:	77 95       	ror	r23
    1ccc:	67 95       	ror	r22
    1cce:	b7 95       	ror	r27
    1cd0:	f1 11       	cpse	r31, r1
    1cd2:	f8 cf       	rjmp	.-16     	; 0x1cc4 <__floatsisf+0x1c>
    1cd4:	fa f4       	brpl	.+62     	; 0x1d14 <__floatsisf+0x6c>
    1cd6:	bb 0f       	add	r27, r27
    1cd8:	11 f4       	brne	.+4      	; 0x1cde <__floatsisf+0x36>
    1cda:	60 ff       	sbrs	r22, 0
    1cdc:	1b c0       	rjmp	.+54     	; 0x1d14 <__floatsisf+0x6c>
    1cde:	6f 5f       	subi	r22, 0xFF	; 255
    1ce0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ce4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ce6:	16 c0       	rjmp	.+44     	; 0x1d14 <__floatsisf+0x6c>
    1ce8:	88 23       	and	r24, r24
    1cea:	11 f0       	breq	.+4      	; 0x1cf0 <__floatsisf+0x48>
    1cec:	96 e9       	ldi	r25, 0x96	; 150
    1cee:	11 c0       	rjmp	.+34     	; 0x1d12 <__floatsisf+0x6a>
    1cf0:	77 23       	and	r23, r23
    1cf2:	21 f0       	breq	.+8      	; 0x1cfc <__floatsisf+0x54>
    1cf4:	9e e8       	ldi	r25, 0x8E	; 142
    1cf6:	87 2f       	mov	r24, r23
    1cf8:	76 2f       	mov	r23, r22
    1cfa:	05 c0       	rjmp	.+10     	; 0x1d06 <__floatsisf+0x5e>
    1cfc:	66 23       	and	r22, r22
    1cfe:	71 f0       	breq	.+28     	; 0x1d1c <__floatsisf+0x74>
    1d00:	96 e8       	ldi	r25, 0x86	; 134
    1d02:	86 2f       	mov	r24, r22
    1d04:	70 e0       	ldi	r23, 0x00	; 0
    1d06:	60 e0       	ldi	r22, 0x00	; 0
    1d08:	2a f0       	brmi	.+10     	; 0x1d14 <__floatsisf+0x6c>
    1d0a:	9a 95       	dec	r25
    1d0c:	66 0f       	add	r22, r22
    1d0e:	77 1f       	adc	r23, r23
    1d10:	88 1f       	adc	r24, r24
    1d12:	da f7       	brpl	.-10     	; 0x1d0a <__floatsisf+0x62>
    1d14:	88 0f       	add	r24, r24
    1d16:	96 95       	lsr	r25
    1d18:	87 95       	ror	r24
    1d1a:	97 f9       	bld	r25, 7
    1d1c:	08 95       	ret

00001d1e <__fp_arccos>:
    1d1e:	df 93       	push	r29
    1d20:	cf 93       	push	r28
    1d22:	1f 93       	push	r17
    1d24:	0f 93       	push	r16
    1d26:	8b 01       	movw	r16, r22
    1d28:	ec 01       	movw	r28, r24
    1d2a:	e9 ea       	ldi	r30, 0xA9	; 169
    1d2c:	f0 e0       	ldi	r31, 0x00	; 0
    1d2e:	0e 94 dc 0e 	call	0x1db8	; 0x1db8 <__fp_powser>
    1d32:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <__fp_round>
    1d36:	98 01       	movw	r18, r16
    1d38:	ae 01       	movw	r20, r28
    1d3a:	8b 01       	movw	r16, r22
    1d3c:	ec 01       	movw	r28, r24
    1d3e:	60 e0       	ldi	r22, 0x00	; 0
    1d40:	70 e0       	ldi	r23, 0x00	; 0
    1d42:	80 e8       	ldi	r24, 0x80	; 128
    1d44:	9f e3       	ldi	r25, 0x3F	; 63
    1d46:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__subsf3>
    1d4a:	0e 94 c6 10 	call	0x218c	; 0x218c <sqrt>
    1d4e:	98 01       	movw	r18, r16
    1d50:	ae 01       	movw	r20, r28
    1d52:	0f 91       	pop	r16
    1d54:	1f 91       	pop	r17
    1d56:	cf 91       	pop	r28
    1d58:	df 91       	pop	r29
    1d5a:	0c 94 0e 10 	jmp	0x201c	; 0x201c <__mulsf3x>

00001d5e <__fp_cmp>:
    1d5e:	99 0f       	add	r25, r25
    1d60:	00 08       	sbc	r0, r0
    1d62:	55 0f       	add	r21, r21
    1d64:	aa 0b       	sbc	r26, r26
    1d66:	e0 e8       	ldi	r30, 0x80	; 128
    1d68:	fe ef       	ldi	r31, 0xFE	; 254
    1d6a:	16 16       	cp	r1, r22
    1d6c:	17 06       	cpc	r1, r23
    1d6e:	e8 07       	cpc	r30, r24
    1d70:	f9 07       	cpc	r31, r25
    1d72:	c0 f0       	brcs	.+48     	; 0x1da4 <__fp_cmp+0x46>
    1d74:	12 16       	cp	r1, r18
    1d76:	13 06       	cpc	r1, r19
    1d78:	e4 07       	cpc	r30, r20
    1d7a:	f5 07       	cpc	r31, r21
    1d7c:	98 f0       	brcs	.+38     	; 0x1da4 <__fp_cmp+0x46>
    1d7e:	62 1b       	sub	r22, r18
    1d80:	73 0b       	sbc	r23, r19
    1d82:	84 0b       	sbc	r24, r20
    1d84:	95 0b       	sbc	r25, r21
    1d86:	39 f4       	brne	.+14     	; 0x1d96 <__fp_cmp+0x38>
    1d88:	0a 26       	eor	r0, r26
    1d8a:	61 f0       	breq	.+24     	; 0x1da4 <__fp_cmp+0x46>
    1d8c:	23 2b       	or	r18, r19
    1d8e:	24 2b       	or	r18, r20
    1d90:	25 2b       	or	r18, r21
    1d92:	21 f4       	brne	.+8      	; 0x1d9c <__fp_cmp+0x3e>
    1d94:	08 95       	ret
    1d96:	0a 26       	eor	r0, r26
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <__fp_cmp+0x3e>
    1d9a:	a1 40       	sbci	r26, 0x01	; 1
    1d9c:	a6 95       	lsr	r26
    1d9e:	8f ef       	ldi	r24, 0xFF	; 255
    1da0:	81 1d       	adc	r24, r1
    1da2:	81 1d       	adc	r24, r1
    1da4:	08 95       	ret

00001da6 <__fp_inf>:
    1da6:	97 f9       	bld	r25, 7
    1da8:	9f 67       	ori	r25, 0x7F	; 127
    1daa:	80 e8       	ldi	r24, 0x80	; 128
    1dac:	70 e0       	ldi	r23, 0x00	; 0
    1dae:	60 e0       	ldi	r22, 0x00	; 0
    1db0:	08 95       	ret

00001db2 <__fp_nan>:
    1db2:	9f ef       	ldi	r25, 0xFF	; 255
    1db4:	80 ec       	ldi	r24, 0xC0	; 192
    1db6:	08 95       	ret

00001db8 <__fp_powser>:
    1db8:	df 93       	push	r29
    1dba:	cf 93       	push	r28
    1dbc:	1f 93       	push	r17
    1dbe:	0f 93       	push	r16
    1dc0:	ff 92       	push	r15
    1dc2:	ef 92       	push	r14
    1dc4:	df 92       	push	r13
    1dc6:	7b 01       	movw	r14, r22
    1dc8:	8c 01       	movw	r16, r24
    1dca:	68 94       	set
    1dcc:	06 c0       	rjmp	.+12     	; 0x1dda <__fp_powser+0x22>
    1dce:	da 2e       	mov	r13, r26
    1dd0:	ef 01       	movw	r28, r30
    1dd2:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3x>
    1dd6:	fe 01       	movw	r30, r28
    1dd8:	e8 94       	clt
    1dda:	a5 91       	lpm	r26, Z+
    1ddc:	25 91       	lpm	r18, Z+
    1dde:	35 91       	lpm	r19, Z+
    1de0:	45 91       	lpm	r20, Z+
    1de2:	55 91       	lpm	r21, Z+
    1de4:	a6 f3       	brts	.-24     	; 0x1dce <__fp_powser+0x16>
    1de6:	ef 01       	movw	r28, r30
    1de8:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1dec:	fe 01       	movw	r30, r28
    1dee:	97 01       	movw	r18, r14
    1df0:	a8 01       	movw	r20, r16
    1df2:	da 94       	dec	r13
    1df4:	69 f7       	brne	.-38     	; 0x1dd0 <__fp_powser+0x18>
    1df6:	df 90       	pop	r13
    1df8:	ef 90       	pop	r14
    1dfa:	ff 90       	pop	r15
    1dfc:	0f 91       	pop	r16
    1dfe:	1f 91       	pop	r17
    1e00:	cf 91       	pop	r28
    1e02:	df 91       	pop	r29
    1e04:	08 95       	ret

00001e06 <__fp_powsodd>:
    1e06:	9f 93       	push	r25
    1e08:	8f 93       	push	r24
    1e0a:	7f 93       	push	r23
    1e0c:	6f 93       	push	r22
    1e0e:	ff 93       	push	r31
    1e10:	ef 93       	push	r30
    1e12:	9b 01       	movw	r18, r22
    1e14:	ac 01       	movw	r20, r24
    1e16:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
    1e1a:	ef 91       	pop	r30
    1e1c:	ff 91       	pop	r31
    1e1e:	0e 94 dc 0e 	call	0x1db8	; 0x1db8 <__fp_powser>
    1e22:	2f 91       	pop	r18
    1e24:	3f 91       	pop	r19
    1e26:	4f 91       	pop	r20
    1e28:	5f 91       	pop	r21
    1e2a:	0c 94 fb 0f 	jmp	0x1ff6	; 0x1ff6 <__mulsf3>

00001e2e <__fp_pscA>:
    1e2e:	00 24       	eor	r0, r0
    1e30:	0a 94       	dec	r0
    1e32:	16 16       	cp	r1, r22
    1e34:	17 06       	cpc	r1, r23
    1e36:	18 06       	cpc	r1, r24
    1e38:	09 06       	cpc	r0, r25
    1e3a:	08 95       	ret

00001e3c <__fp_pscB>:
    1e3c:	00 24       	eor	r0, r0
    1e3e:	0a 94       	dec	r0
    1e40:	12 16       	cp	r1, r18
    1e42:	13 06       	cpc	r1, r19
    1e44:	14 06       	cpc	r1, r20
    1e46:	05 06       	cpc	r0, r21
    1e48:	08 95       	ret
    1e4a:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>

00001e4e <__fp_rempio2>:
    1e4e:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_splitA>
    1e52:	d8 f3       	brcs	.-10     	; 0x1e4a <__fp_pscB+0xe>
    1e54:	e8 94       	clt
    1e56:	e0 e0       	ldi	r30, 0x00	; 0
    1e58:	bb 27       	eor	r27, r27
    1e5a:	9f 57       	subi	r25, 0x7F	; 127
    1e5c:	f0 f0       	brcs	.+60     	; 0x1e9a <__fp_rempio2+0x4c>
    1e5e:	2a ed       	ldi	r18, 0xDA	; 218
    1e60:	3f e0       	ldi	r19, 0x0F	; 15
    1e62:	49 ec       	ldi	r20, 0xC9	; 201
    1e64:	06 c0       	rjmp	.+12     	; 0x1e72 <__fp_rempio2+0x24>
    1e66:	ee 0f       	add	r30, r30
    1e68:	bb 0f       	add	r27, r27
    1e6a:	66 1f       	adc	r22, r22
    1e6c:	77 1f       	adc	r23, r23
    1e6e:	88 1f       	adc	r24, r24
    1e70:	28 f0       	brcs	.+10     	; 0x1e7c <__fp_rempio2+0x2e>
    1e72:	b2 3a       	cpi	r27, 0xA2	; 162
    1e74:	62 07       	cpc	r22, r18
    1e76:	73 07       	cpc	r23, r19
    1e78:	84 07       	cpc	r24, r20
    1e7a:	28 f0       	brcs	.+10     	; 0x1e86 <__fp_rempio2+0x38>
    1e7c:	b2 5a       	subi	r27, 0xA2	; 162
    1e7e:	62 0b       	sbc	r22, r18
    1e80:	73 0b       	sbc	r23, r19
    1e82:	84 0b       	sbc	r24, r20
    1e84:	e3 95       	inc	r30
    1e86:	9a 95       	dec	r25
    1e88:	72 f7       	brpl	.-36     	; 0x1e66 <__fp_rempio2+0x18>
    1e8a:	80 38       	cpi	r24, 0x80	; 128
    1e8c:	30 f4       	brcc	.+12     	; 0x1e9a <__fp_rempio2+0x4c>
    1e8e:	9a 95       	dec	r25
    1e90:	bb 0f       	add	r27, r27
    1e92:	66 1f       	adc	r22, r22
    1e94:	77 1f       	adc	r23, r23
    1e96:	88 1f       	adc	r24, r24
    1e98:	d2 f7       	brpl	.-12     	; 0x1e8e <__fp_rempio2+0x40>
    1e9a:	90 48       	sbci	r25, 0x80	; 128
    1e9c:	0c 94 6b 11 	jmp	0x22d6	; 0x22d6 <__fp_mpack_finite>

00001ea0 <__fp_round>:
    1ea0:	09 2e       	mov	r0, r25
    1ea2:	03 94       	inc	r0
    1ea4:	00 0c       	add	r0, r0
    1ea6:	11 f4       	brne	.+4      	; 0x1eac <__fp_round+0xc>
    1ea8:	88 23       	and	r24, r24
    1eaa:	52 f0       	brmi	.+20     	; 0x1ec0 <__fp_round+0x20>
    1eac:	bb 0f       	add	r27, r27
    1eae:	40 f4       	brcc	.+16     	; 0x1ec0 <__fp_round+0x20>
    1eb0:	bf 2b       	or	r27, r31
    1eb2:	11 f4       	brne	.+4      	; 0x1eb8 <__fp_round+0x18>
    1eb4:	60 ff       	sbrs	r22, 0
    1eb6:	04 c0       	rjmp	.+8      	; 0x1ec0 <__fp_round+0x20>
    1eb8:	6f 5f       	subi	r22, 0xFF	; 255
    1eba:	7f 4f       	sbci	r23, 0xFF	; 255
    1ebc:	8f 4f       	sbci	r24, 0xFF	; 255
    1ebe:	9f 4f       	sbci	r25, 0xFF	; 255
    1ec0:	08 95       	ret

00001ec2 <__fp_sinus>:
    1ec2:	ef 93       	push	r30
    1ec4:	e0 ff       	sbrs	r30, 0
    1ec6:	07 c0       	rjmp	.+14     	; 0x1ed6 <__fp_sinus+0x14>
    1ec8:	a2 ea       	ldi	r26, 0xA2	; 162
    1eca:	2a ed       	ldi	r18, 0xDA	; 218
    1ecc:	3f e0       	ldi	r19, 0x0F	; 15
    1ece:	49 ec       	ldi	r20, 0xC9	; 201
    1ed0:	5f eb       	ldi	r21, 0xBF	; 191
    1ed2:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1ed6:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <__fp_round>
    1eda:	0f 90       	pop	r0
    1edc:	03 94       	inc	r0
    1ede:	01 fc       	sbrc	r0, 1
    1ee0:	90 58       	subi	r25, 0x80	; 128
    1ee2:	e1 ed       	ldi	r30, 0xD1	; 209
    1ee4:	f0 e0       	ldi	r31, 0x00	; 0
    1ee6:	0c 94 03 0f 	jmp	0x1e06	; 0x1e06 <__fp_powsodd>

00001eea <__fp_split3>:
    1eea:	57 fd       	sbrc	r21, 7
    1eec:	90 58       	subi	r25, 0x80	; 128
    1eee:	44 0f       	add	r20, r20
    1ef0:	55 1f       	adc	r21, r21
    1ef2:	59 f0       	breq	.+22     	; 0x1f0a <__fp_splitA+0x10>
    1ef4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ef6:	71 f0       	breq	.+28     	; 0x1f14 <__fp_splitA+0x1a>
    1ef8:	47 95       	ror	r20

00001efa <__fp_splitA>:
    1efa:	88 0f       	add	r24, r24
    1efc:	97 fb       	bst	r25, 7
    1efe:	99 1f       	adc	r25, r25
    1f00:	61 f0       	breq	.+24     	; 0x1f1a <__fp_splitA+0x20>
    1f02:	9f 3f       	cpi	r25, 0xFF	; 255
    1f04:	79 f0       	breq	.+30     	; 0x1f24 <__fp_splitA+0x2a>
    1f06:	87 95       	ror	r24
    1f08:	08 95       	ret
    1f0a:	12 16       	cp	r1, r18
    1f0c:	13 06       	cpc	r1, r19
    1f0e:	14 06       	cpc	r1, r20
    1f10:	55 1f       	adc	r21, r21
    1f12:	f2 cf       	rjmp	.-28     	; 0x1ef8 <__fp_split3+0xe>
    1f14:	46 95       	lsr	r20
    1f16:	f1 df       	rcall	.-30     	; 0x1efa <__fp_splitA>
    1f18:	08 c0       	rjmp	.+16     	; 0x1f2a <__fp_splitA+0x30>
    1f1a:	16 16       	cp	r1, r22
    1f1c:	17 06       	cpc	r1, r23
    1f1e:	18 06       	cpc	r1, r24
    1f20:	99 1f       	adc	r25, r25
    1f22:	f1 cf       	rjmp	.-30     	; 0x1f06 <__fp_splitA+0xc>
    1f24:	86 95       	lsr	r24
    1f26:	71 05       	cpc	r23, r1
    1f28:	61 05       	cpc	r22, r1
    1f2a:	08 94       	sec
    1f2c:	08 95       	ret

00001f2e <__fp_zero>:
    1f2e:	e8 94       	clt

00001f30 <__fp_szero>:
    1f30:	bb 27       	eor	r27, r27
    1f32:	66 27       	eor	r22, r22
    1f34:	77 27       	eor	r23, r23
    1f36:	cb 01       	movw	r24, r22
    1f38:	97 f9       	bld	r25, 7
    1f3a:	08 95       	ret

00001f3c <__gesf2>:
    1f3c:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <__fp_cmp>
    1f40:	08 f4       	brcc	.+2      	; 0x1f44 <__gesf2+0x8>
    1f42:	8f ef       	ldi	r24, 0xFF	; 255
    1f44:	08 95       	ret

00001f46 <inverse>:
    1f46:	9b 01       	movw	r18, r22
    1f48:	ac 01       	movw	r20, r24
    1f4a:	60 e0       	ldi	r22, 0x00	; 0
    1f4c:	70 e0       	ldi	r23, 0x00	; 0
    1f4e:	80 e8       	ldi	r24, 0x80	; 128
    1f50:	9f e3       	ldi	r25, 0x3F	; 63
    1f52:	0c 94 e0 0d 	jmp	0x1bc0	; 0x1bc0 <__divsf3>
    1f56:	16 f0       	brts	.+4      	; 0x1f5c <inverse+0x16>
    1f58:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__fp_mpack>
    1f5c:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>
    1f60:	68 94       	set
    1f62:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>

00001f66 <log>:
    1f66:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_splitA>
    1f6a:	a8 f3       	brcs	.-22     	; 0x1f56 <inverse+0x10>
    1f6c:	99 23       	and	r25, r25
    1f6e:	c1 f3       	breq	.-16     	; 0x1f60 <inverse+0x1a>
    1f70:	ae f3       	brts	.-22     	; 0x1f5c <inverse+0x16>
    1f72:	df 93       	push	r29
    1f74:	cf 93       	push	r28
    1f76:	1f 93       	push	r17
    1f78:	0f 93       	push	r16
    1f7a:	ff 92       	push	r15
    1f7c:	c9 2f       	mov	r28, r25
    1f7e:	dd 27       	eor	r29, r29
    1f80:	88 23       	and	r24, r24
    1f82:	2a f0       	brmi	.+10     	; 0x1f8e <log+0x28>
    1f84:	21 97       	sbiw	r28, 0x01	; 1
    1f86:	66 0f       	add	r22, r22
    1f88:	77 1f       	adc	r23, r23
    1f8a:	88 1f       	adc	r24, r24
    1f8c:	da f7       	brpl	.-10     	; 0x1f84 <log+0x1e>
    1f8e:	20 e0       	ldi	r18, 0x00	; 0
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	40 e8       	ldi	r20, 0x80	; 128
    1f94:	5f eb       	ldi	r21, 0xBF	; 191
    1f96:	9f e3       	ldi	r25, 0x3F	; 63
    1f98:	88 39       	cpi	r24, 0x98	; 152
    1f9a:	20 f0       	brcs	.+8      	; 0x1fa4 <log+0x3e>
    1f9c:	80 3e       	cpi	r24, 0xE0	; 224
    1f9e:	38 f0       	brcs	.+14     	; 0x1fae <log+0x48>
    1fa0:	21 96       	adiw	r28, 0x01	; 1
    1fa2:	8f 77       	andi	r24, 0x7F	; 127
    1fa4:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
    1fa8:	ef ee       	ldi	r30, 0xEF	; 239
    1faa:	f0 e0       	ldi	r31, 0x00	; 0
    1fac:	04 c0       	rjmp	.+8      	; 0x1fb6 <log+0x50>
    1fae:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <__addsf3>
    1fb2:	ec e1       	ldi	r30, 0x1C	; 28
    1fb4:	f1 e0       	ldi	r31, 0x01	; 1
    1fb6:	0e 94 dc 0e 	call	0x1db8	; 0x1db8 <__fp_powser>
    1fba:	8b 01       	movw	r16, r22
    1fbc:	be 01       	movw	r22, r28
    1fbe:	ec 01       	movw	r28, r24
    1fc0:	fb 2e       	mov	r15, r27
    1fc2:	6f 57       	subi	r22, 0x7F	; 127
    1fc4:	71 09       	sbc	r23, r1
    1fc6:	75 95       	asr	r23
    1fc8:	77 1f       	adc	r23, r23
    1fca:	88 0b       	sbc	r24, r24
    1fcc:	99 0b       	sbc	r25, r25
    1fce:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__floatsisf>
    1fd2:	28 e1       	ldi	r18, 0x18	; 24
    1fd4:	32 e7       	ldi	r19, 0x72	; 114
    1fd6:	41 e3       	ldi	r20, 0x31	; 49
    1fd8:	5f e3       	ldi	r21, 0x3F	; 63
    1fda:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3x>
    1fde:	af 2d       	mov	r26, r15
    1fe0:	98 01       	movw	r18, r16
    1fe2:	ae 01       	movw	r20, r28
    1fe4:	ff 90       	pop	r15
    1fe6:	0f 91       	pop	r16
    1fe8:	1f 91       	pop	r17
    1fea:	cf 91       	pop	r28
    1fec:	df 91       	pop	r29
    1fee:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    1ff2:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <__fp_round>

00001ff6 <__mulsf3>:
    1ff6:	0e 94 0e 10 	call	0x201c	; 0x201c <__mulsf3x>
    1ffa:	0c 94 50 0f 	jmp	0x1ea0	; 0x1ea0 <__fp_round>
    1ffe:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__fp_pscA>
    2002:	38 f0       	brcs	.+14     	; 0x2012 <__mulsf3+0x1c>
    2004:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_pscB>
    2008:	20 f0       	brcs	.+8      	; 0x2012 <__mulsf3+0x1c>
    200a:	95 23       	and	r25, r21
    200c:	11 f0       	breq	.+4      	; 0x2012 <__mulsf3+0x1c>
    200e:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>
    2012:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>
    2016:	11 24       	eor	r1, r1
    2018:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__fp_szero>

0000201c <__mulsf3x>:
    201c:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__fp_split3>
    2020:	70 f3       	brcs	.-36     	; 0x1ffe <__mulsf3+0x8>

00002022 <__mulsf3_pse>:
    2022:	95 9f       	mul	r25, r21
    2024:	c1 f3       	breq	.-16     	; 0x2016 <__mulsf3+0x20>
    2026:	95 0f       	add	r25, r21
    2028:	50 e0       	ldi	r21, 0x00	; 0
    202a:	55 1f       	adc	r21, r21
    202c:	62 9f       	mul	r22, r18
    202e:	f0 01       	movw	r30, r0
    2030:	72 9f       	mul	r23, r18
    2032:	bb 27       	eor	r27, r27
    2034:	f0 0d       	add	r31, r0
    2036:	b1 1d       	adc	r27, r1
    2038:	63 9f       	mul	r22, r19
    203a:	aa 27       	eor	r26, r26
    203c:	f0 0d       	add	r31, r0
    203e:	b1 1d       	adc	r27, r1
    2040:	aa 1f       	adc	r26, r26
    2042:	64 9f       	mul	r22, r20
    2044:	66 27       	eor	r22, r22
    2046:	b0 0d       	add	r27, r0
    2048:	a1 1d       	adc	r26, r1
    204a:	66 1f       	adc	r22, r22
    204c:	82 9f       	mul	r24, r18
    204e:	22 27       	eor	r18, r18
    2050:	b0 0d       	add	r27, r0
    2052:	a1 1d       	adc	r26, r1
    2054:	62 1f       	adc	r22, r18
    2056:	73 9f       	mul	r23, r19
    2058:	b0 0d       	add	r27, r0
    205a:	a1 1d       	adc	r26, r1
    205c:	62 1f       	adc	r22, r18
    205e:	83 9f       	mul	r24, r19
    2060:	a0 0d       	add	r26, r0
    2062:	61 1d       	adc	r22, r1
    2064:	22 1f       	adc	r18, r18
    2066:	74 9f       	mul	r23, r20
    2068:	33 27       	eor	r19, r19
    206a:	a0 0d       	add	r26, r0
    206c:	61 1d       	adc	r22, r1
    206e:	23 1f       	adc	r18, r19
    2070:	84 9f       	mul	r24, r20
    2072:	60 0d       	add	r22, r0
    2074:	21 1d       	adc	r18, r1
    2076:	82 2f       	mov	r24, r18
    2078:	76 2f       	mov	r23, r22
    207a:	6a 2f       	mov	r22, r26
    207c:	11 24       	eor	r1, r1
    207e:	9f 57       	subi	r25, 0x7F	; 127
    2080:	50 40       	sbci	r21, 0x00	; 0
    2082:	9a f0       	brmi	.+38     	; 0x20aa <__mulsf3_pse+0x88>
    2084:	f1 f0       	breq	.+60     	; 0x20c2 <__mulsf3_pse+0xa0>
    2086:	88 23       	and	r24, r24
    2088:	4a f0       	brmi	.+18     	; 0x209c <__mulsf3_pse+0x7a>
    208a:	ee 0f       	add	r30, r30
    208c:	ff 1f       	adc	r31, r31
    208e:	bb 1f       	adc	r27, r27
    2090:	66 1f       	adc	r22, r22
    2092:	77 1f       	adc	r23, r23
    2094:	88 1f       	adc	r24, r24
    2096:	91 50       	subi	r25, 0x01	; 1
    2098:	50 40       	sbci	r21, 0x00	; 0
    209a:	a9 f7       	brne	.-22     	; 0x2086 <__mulsf3_pse+0x64>
    209c:	9e 3f       	cpi	r25, 0xFE	; 254
    209e:	51 05       	cpc	r21, r1
    20a0:	80 f0       	brcs	.+32     	; 0x20c2 <__mulsf3_pse+0xa0>
    20a2:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>
    20a6:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__fp_szero>
    20aa:	5f 3f       	cpi	r21, 0xFF	; 255
    20ac:	e4 f3       	brlt	.-8      	; 0x20a6 <__mulsf3_pse+0x84>
    20ae:	98 3e       	cpi	r25, 0xE8	; 232
    20b0:	d4 f3       	brlt	.-12     	; 0x20a6 <__mulsf3_pse+0x84>
    20b2:	86 95       	lsr	r24
    20b4:	77 95       	ror	r23
    20b6:	67 95       	ror	r22
    20b8:	b7 95       	ror	r27
    20ba:	f7 95       	ror	r31
    20bc:	e7 95       	ror	r30
    20be:	9f 5f       	subi	r25, 0xFF	; 255
    20c0:	c1 f7       	brne	.-16     	; 0x20b2 <__mulsf3_pse+0x90>
    20c2:	fe 2b       	or	r31, r30
    20c4:	88 0f       	add	r24, r24
    20c6:	91 1d       	adc	r25, r1
    20c8:	96 95       	lsr	r25
    20ca:	87 95       	ror	r24
    20cc:	97 f9       	bld	r25, 7
    20ce:	08 95       	ret

000020d0 <pow>:
    20d0:	fa 01       	movw	r30, r20
    20d2:	ee 0f       	add	r30, r30
    20d4:	ff 1f       	adc	r31, r31
    20d6:	30 96       	adiw	r30, 0x00	; 0
    20d8:	21 05       	cpc	r18, r1
    20da:	31 05       	cpc	r19, r1
    20dc:	a1 f1       	breq	.+104    	; 0x2146 <pow+0x76>
    20de:	61 15       	cp	r22, r1
    20e0:	71 05       	cpc	r23, r1
    20e2:	61 f4       	brne	.+24     	; 0x20fc <pow+0x2c>
    20e4:	80 38       	cpi	r24, 0x80	; 128
    20e6:	bf e3       	ldi	r27, 0x3F	; 63
    20e8:	9b 07       	cpc	r25, r27
    20ea:	49 f1       	breq	.+82     	; 0x213e <pow+0x6e>
    20ec:	68 94       	set
    20ee:	90 38       	cpi	r25, 0x80	; 128
    20f0:	81 05       	cpc	r24, r1
    20f2:	61 f0       	breq	.+24     	; 0x210c <pow+0x3c>
    20f4:	80 38       	cpi	r24, 0x80	; 128
    20f6:	bf ef       	ldi	r27, 0xFF	; 255
    20f8:	9b 07       	cpc	r25, r27
    20fa:	41 f0       	breq	.+16     	; 0x210c <pow+0x3c>
    20fc:	99 23       	and	r25, r25
    20fe:	4a f5       	brpl	.+82     	; 0x2152 <pow+0x82>
    2100:	ff 3f       	cpi	r31, 0xFF	; 255
    2102:	e1 05       	cpc	r30, r1
    2104:	31 05       	cpc	r19, r1
    2106:	21 05       	cpc	r18, r1
    2108:	19 f1       	breq	.+70     	; 0x2150 <pow+0x80>
    210a:	e8 94       	clt
    210c:	08 94       	sec
    210e:	e7 95       	ror	r30
    2110:	d9 01       	movw	r26, r18
    2112:	aa 23       	and	r26, r26
    2114:	29 f4       	brne	.+10     	; 0x2120 <pow+0x50>
    2116:	ab 2f       	mov	r26, r27
    2118:	be 2f       	mov	r27, r30
    211a:	f8 5f       	subi	r31, 0xF8	; 248
    211c:	d0 f3       	brcs	.-12     	; 0x2112 <pow+0x42>
    211e:	10 c0       	rjmp	.+32     	; 0x2140 <pow+0x70>
    2120:	ff 5f       	subi	r31, 0xFF	; 255
    2122:	70 f4       	brcc	.+28     	; 0x2140 <pow+0x70>
    2124:	a6 95       	lsr	r26
    2126:	e0 f7       	brcc	.-8      	; 0x2120 <pow+0x50>
    2128:	f7 39       	cpi	r31, 0x97	; 151
    212a:	50 f0       	brcs	.+20     	; 0x2140 <pow+0x70>
    212c:	19 f0       	breq	.+6      	; 0x2134 <pow+0x64>
    212e:	ff 3a       	cpi	r31, 0xAF	; 175
    2130:	38 f4       	brcc	.+14     	; 0x2140 <pow+0x70>
    2132:	9f 77       	andi	r25, 0x7F	; 127
    2134:	9f 93       	push	r25
    2136:	0d d0       	rcall	.+26     	; 0x2152 <pow+0x82>
    2138:	0f 90       	pop	r0
    213a:	07 fc       	sbrc	r0, 7
    213c:	90 58       	subi	r25, 0x80	; 128
    213e:	08 95       	ret
    2140:	46 f0       	brts	.+16     	; 0x2152 <pow+0x82>
    2142:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>
    2146:	60 e0       	ldi	r22, 0x00	; 0
    2148:	70 e0       	ldi	r23, 0x00	; 0
    214a:	80 e8       	ldi	r24, 0x80	; 128
    214c:	9f e3       	ldi	r25, 0x3F	; 63
    214e:	08 95       	ret
    2150:	4f e7       	ldi	r20, 0x7F	; 127
    2152:	9f 77       	andi	r25, 0x7F	; 127
    2154:	5f 93       	push	r21
    2156:	4f 93       	push	r20
    2158:	3f 93       	push	r19
    215a:	2f 93       	push	r18
    215c:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <log>
    2160:	2f 91       	pop	r18
    2162:	3f 91       	pop	r19
    2164:	4f 91       	pop	r20
    2166:	5f 91       	pop	r21
    2168:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
    216c:	0c 94 37 11 	jmp	0x226e	; 0x226e <exp>

00002170 <sin>:
    2170:	9f 93       	push	r25
    2172:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <__fp_rempio2>
    2176:	0f 90       	pop	r0
    2178:	07 fc       	sbrc	r0, 7
    217a:	ee 5f       	subi	r30, 0xFE	; 254
    217c:	0c 94 61 0f 	jmp	0x1ec2	; 0x1ec2 <__fp_sinus>
    2180:	19 f4       	brne	.+6      	; 0x2188 <sin+0x18>
    2182:	16 f4       	brtc	.+4      	; 0x2188 <sin+0x18>
    2184:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>
    2188:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__fp_mpack>

0000218c <sqrt>:
    218c:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_splitA>
    2190:	b8 f3       	brcs	.-18     	; 0x2180 <sin+0x10>
    2192:	99 23       	and	r25, r25
    2194:	c9 f3       	breq	.-14     	; 0x2188 <sin+0x18>
    2196:	b6 f3       	brts	.-20     	; 0x2184 <sin+0x14>
    2198:	9f 57       	subi	r25, 0x7F	; 127
    219a:	55 0b       	sbc	r21, r21
    219c:	87 ff       	sbrs	r24, 7
    219e:	0e 94 77 11 	call	0x22ee	; 0x22ee <__fp_norm2>
    21a2:	00 24       	eor	r0, r0
    21a4:	a0 e6       	ldi	r26, 0x60	; 96
    21a6:	40 ea       	ldi	r20, 0xA0	; 160
    21a8:	90 01       	movw	r18, r0
    21aa:	80 58       	subi	r24, 0x80	; 128
    21ac:	56 95       	lsr	r21
    21ae:	97 95       	ror	r25
    21b0:	28 f4       	brcc	.+10     	; 0x21bc <sqrt+0x30>
    21b2:	80 5c       	subi	r24, 0xC0	; 192
    21b4:	66 0f       	add	r22, r22
    21b6:	77 1f       	adc	r23, r23
    21b8:	88 1f       	adc	r24, r24
    21ba:	20 f0       	brcs	.+8      	; 0x21c4 <sqrt+0x38>
    21bc:	26 17       	cp	r18, r22
    21be:	37 07       	cpc	r19, r23
    21c0:	48 07       	cpc	r20, r24
    21c2:	30 f4       	brcc	.+12     	; 0x21d0 <sqrt+0x44>
    21c4:	62 1b       	sub	r22, r18
    21c6:	73 0b       	sbc	r23, r19
    21c8:	84 0b       	sbc	r24, r20
    21ca:	20 29       	or	r18, r0
    21cc:	31 29       	or	r19, r1
    21ce:	4a 2b       	or	r20, r26
    21d0:	a6 95       	lsr	r26
    21d2:	17 94       	ror	r1
    21d4:	07 94       	ror	r0
    21d6:	20 25       	eor	r18, r0
    21d8:	31 25       	eor	r19, r1
    21da:	4a 27       	eor	r20, r26
    21dc:	58 f7       	brcc	.-42     	; 0x21b4 <sqrt+0x28>
    21de:	66 0f       	add	r22, r22
    21e0:	77 1f       	adc	r23, r23
    21e2:	88 1f       	adc	r24, r24
    21e4:	20 f0       	brcs	.+8      	; 0x21ee <sqrt+0x62>
    21e6:	26 17       	cp	r18, r22
    21e8:	37 07       	cpc	r19, r23
    21ea:	48 07       	cpc	r20, r24
    21ec:	30 f4       	brcc	.+12     	; 0x21fa <sqrt+0x6e>
    21ee:	62 0b       	sbc	r22, r18
    21f0:	73 0b       	sbc	r23, r19
    21f2:	84 0b       	sbc	r24, r20
    21f4:	20 0d       	add	r18, r0
    21f6:	31 1d       	adc	r19, r1
    21f8:	41 1d       	adc	r20, r1
    21fa:	a0 95       	com	r26
    21fc:	81 f7       	brne	.-32     	; 0x21de <sqrt+0x52>
    21fe:	b9 01       	movw	r22, r18
    2200:	84 2f       	mov	r24, r20
    2202:	91 58       	subi	r25, 0x81	; 129
    2204:	88 0f       	add	r24, r24
    2206:	96 95       	lsr	r25
    2208:	87 95       	ror	r24
    220a:	08 95       	ret

0000220c <square>:
    220c:	9b 01       	movw	r18, r22
    220e:	ac 01       	movw	r20, r24
    2210:	0c 94 fb 0f 	jmp	0x1ff6	; 0x1ff6 <__mulsf3>

00002214 <tan>:
    2214:	df 93       	push	r29
    2216:	d9 2f       	mov	r29, r25
    2218:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <__fp_rempio2>
    221c:	e6 95       	lsr	r30
    221e:	d7 95       	ror	r29
    2220:	2a ed       	ldi	r18, 0xDA	; 218
    2222:	3f e0       	ldi	r19, 0x0F	; 15
    2224:	49 e4       	ldi	r20, 0x49	; 73
    2226:	5f e3       	ldi	r21, 0x3F	; 63
    2228:	b3 3a       	cpi	r27, 0xA3	; 163
    222a:	62 07       	cpc	r22, r18
    222c:	73 07       	cpc	r23, r19
    222e:	84 07       	cpc	r24, r20
    2230:	95 07       	cpc	r25, r21
    2232:	d7 95       	ror	r29
    2234:	3a f0       	brmi	.+14     	; 0x2244 <tan+0x30>
    2236:	a2 ea       	ldi	r26, 0xA2	; 162
    2238:	49 ec       	ldi	r20, 0xC9	; 201
    223a:	90 68       	ori	r25, 0x80	; 128
    223c:	0e 94 37 0d 	call	0x1a6e	; 0x1a6e <__addsf3x>
    2240:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <__fp_round>
    2244:	e9 e4       	ldi	r30, 0x49	; 73
    2246:	f1 e0       	ldi	r31, 0x01	; 1
    2248:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <__fp_powsodd>
    224c:	dd 0f       	add	r29, r29
    224e:	13 f0       	brvs	.+4      	; 0x2254 <tan+0x40>
    2250:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <inverse>
    2254:	dd 0f       	add	r29, r29
    2256:	0b f4       	brvc	.+2      	; 0x225a <tan+0x46>
    2258:	90 58       	subi	r25, 0x80	; 128
    225a:	df 91       	pop	r29
    225c:	08 95       	ret
    225e:	29 f4       	brne	.+10     	; 0x226a <tan+0x56>
    2260:	16 f0       	brts	.+4      	; 0x2266 <tan+0x52>
    2262:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>
    2266:	0c 94 97 0f 	jmp	0x1f2e	; 0x1f2e <__fp_zero>
    226a:	0c 94 d9 0e 	jmp	0x1db2	; 0x1db2 <__fp_nan>

0000226e <exp>:
    226e:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_splitA>
    2272:	a8 f3       	brcs	.-22     	; 0x225e <tan+0x4a>
    2274:	96 38       	cpi	r25, 0x86	; 134
    2276:	a0 f7       	brcc	.-24     	; 0x2260 <tan+0x4c>
    2278:	07 f8       	bld	r0, 7
    227a:	0f 92       	push	r0
    227c:	e8 94       	clt
    227e:	2b e3       	ldi	r18, 0x3B	; 59
    2280:	3a ea       	ldi	r19, 0xAA	; 170
    2282:	48 eb       	ldi	r20, 0xB8	; 184
    2284:	5f e7       	ldi	r21, 0x7F	; 127
    2286:	0e 94 11 10 	call	0x2022	; 0x2022 <__mulsf3_pse>
    228a:	0f 92       	push	r0
    228c:	0f 92       	push	r0
    228e:	0f 92       	push	r0
    2290:	4d b7       	in	r20, 0x3d	; 61
    2292:	5e b7       	in	r21, 0x3e	; 62
    2294:	0f 92       	push	r0
    2296:	0e 94 b8 11 	call	0x2370	; 0x2370 <modf>
    229a:	ec e6       	ldi	r30, 0x6C	; 108
    229c:	f1 e0       	ldi	r31, 0x01	; 1
    229e:	0e 94 dc 0e 	call	0x1db8	; 0x1db8 <__fp_powser>
    22a2:	4f 91       	pop	r20
    22a4:	5f 91       	pop	r21
    22a6:	ef 91       	pop	r30
    22a8:	ff 91       	pop	r31
    22aa:	e5 95       	asr	r30
    22ac:	ee 1f       	adc	r30, r30
    22ae:	ff 1f       	adc	r31, r31
    22b0:	49 f0       	breq	.+18     	; 0x22c4 <exp+0x56>
    22b2:	fe 57       	subi	r31, 0x7E	; 126
    22b4:	e0 68       	ori	r30, 0x80	; 128
    22b6:	44 27       	eor	r20, r20
    22b8:	ee 0f       	add	r30, r30
    22ba:	44 1f       	adc	r20, r20
    22bc:	fa 95       	dec	r31
    22be:	e1 f7       	brne	.-8      	; 0x22b8 <exp+0x4a>
    22c0:	41 95       	neg	r20
    22c2:	55 0b       	sbc	r21, r21
    22c4:	0e 94 82 11 	call	0x2304	; 0x2304 <ldexp>
    22c8:	0f 90       	pop	r0
    22ca:	07 fe       	sbrs	r0, 7
    22cc:	0c 94 a3 0f 	jmp	0x1f46	; 0x1f46 <inverse>
    22d0:	08 95       	ret

000022d2 <__fp_mpack>:
    22d2:	9f 3f       	cpi	r25, 0xFF	; 255
    22d4:	31 f0       	breq	.+12     	; 0x22e2 <__fp_mpack_finite+0xc>

000022d6 <__fp_mpack_finite>:
    22d6:	91 50       	subi	r25, 0x01	; 1
    22d8:	20 f4       	brcc	.+8      	; 0x22e2 <__fp_mpack_finite+0xc>
    22da:	87 95       	ror	r24
    22dc:	77 95       	ror	r23
    22de:	67 95       	ror	r22
    22e0:	b7 95       	ror	r27
    22e2:	88 0f       	add	r24, r24
    22e4:	91 1d       	adc	r25, r1
    22e6:	96 95       	lsr	r25
    22e8:	87 95       	ror	r24
    22ea:	97 f9       	bld	r25, 7
    22ec:	08 95       	ret

000022ee <__fp_norm2>:
    22ee:	91 50       	subi	r25, 0x01	; 1
    22f0:	50 40       	sbci	r21, 0x00	; 0
    22f2:	66 0f       	add	r22, r22
    22f4:	77 1f       	adc	r23, r23
    22f6:	88 1f       	adc	r24, r24
    22f8:	d2 f7       	brpl	.-12     	; 0x22ee <__fp_norm2>
    22fa:	08 95       	ret
    22fc:	0c 94 d3 0e 	jmp	0x1da6	; 0x1da6 <__fp_inf>
    2300:	0c 94 69 11 	jmp	0x22d2	; 0x22d2 <__fp_mpack>

00002304 <ldexp>:
    2304:	0e 94 7d 0f 	call	0x1efa	; 0x1efa <__fp_splitA>
    2308:	d8 f3       	brcs	.-10     	; 0x2300 <__fp_norm2+0x12>
    230a:	99 23       	and	r25, r25
    230c:	c9 f3       	breq	.-14     	; 0x2300 <__fp_norm2+0x12>
    230e:	94 0f       	add	r25, r20
    2310:	51 1d       	adc	r21, r1
    2312:	a3 f3       	brvs	.-24     	; 0x22fc <__fp_norm2+0xe>
    2314:	91 50       	subi	r25, 0x01	; 1
    2316:	50 40       	sbci	r21, 0x00	; 0
    2318:	94 f0       	brlt	.+36     	; 0x233e <ldexp+0x3a>
    231a:	59 f0       	breq	.+22     	; 0x2332 <ldexp+0x2e>
    231c:	88 23       	and	r24, r24
    231e:	32 f0       	brmi	.+12     	; 0x232c <ldexp+0x28>
    2320:	66 0f       	add	r22, r22
    2322:	77 1f       	adc	r23, r23
    2324:	88 1f       	adc	r24, r24
    2326:	91 50       	subi	r25, 0x01	; 1
    2328:	50 40       	sbci	r21, 0x00	; 0
    232a:	c1 f7       	brne	.-16     	; 0x231c <ldexp+0x18>
    232c:	9e 3f       	cpi	r25, 0xFE	; 254
    232e:	51 05       	cpc	r21, r1
    2330:	2c f7       	brge	.-54     	; 0x22fc <__fp_norm2+0xe>
    2332:	88 0f       	add	r24, r24
    2334:	91 1d       	adc	r25, r1
    2336:	96 95       	lsr	r25
    2338:	87 95       	ror	r24
    233a:	97 f9       	bld	r25, 7
    233c:	08 95       	ret
    233e:	5f 3f       	cpi	r21, 0xFF	; 255
    2340:	ac f0       	brlt	.+42     	; 0x236c <ldexp+0x68>
    2342:	98 3e       	cpi	r25, 0xE8	; 232
    2344:	9c f0       	brlt	.+38     	; 0x236c <ldexp+0x68>
    2346:	bb 27       	eor	r27, r27
    2348:	86 95       	lsr	r24
    234a:	77 95       	ror	r23
    234c:	67 95       	ror	r22
    234e:	b7 95       	ror	r27
    2350:	08 f4       	brcc	.+2      	; 0x2354 <ldexp+0x50>
    2352:	b1 60       	ori	r27, 0x01	; 1
    2354:	93 95       	inc	r25
    2356:	c1 f7       	brne	.-16     	; 0x2348 <ldexp+0x44>
    2358:	bb 0f       	add	r27, r27
    235a:	58 f7       	brcc	.-42     	; 0x2332 <ldexp+0x2e>
    235c:	11 f4       	brne	.+4      	; 0x2362 <ldexp+0x5e>
    235e:	60 ff       	sbrs	r22, 0
    2360:	e8 cf       	rjmp	.-48     	; 0x2332 <ldexp+0x2e>
    2362:	6f 5f       	subi	r22, 0xFF	; 255
    2364:	7f 4f       	sbci	r23, 0xFF	; 255
    2366:	8f 4f       	sbci	r24, 0xFF	; 255
    2368:	9f 4f       	sbci	r25, 0xFF	; 255
    236a:	e3 cf       	rjmp	.-58     	; 0x2332 <ldexp+0x2e>
    236c:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__fp_szero>

00002370 <modf>:
    2370:	fa 01       	movw	r30, r20
    2372:	dc 01       	movw	r26, r24
    2374:	aa 0f       	add	r26, r26
    2376:	bb 1f       	adc	r27, r27
    2378:	9b 01       	movw	r18, r22
    237a:	ac 01       	movw	r20, r24
    237c:	bf 57       	subi	r27, 0x7F	; 127
    237e:	28 f4       	brcc	.+10     	; 0x238a <modf+0x1a>
    2380:	22 27       	eor	r18, r18
    2382:	33 27       	eor	r19, r19
    2384:	44 27       	eor	r20, r20
    2386:	50 78       	andi	r21, 0x80	; 128
    2388:	20 c0       	rjmp	.+64     	; 0x23ca <modf+0x5a>
    238a:	b7 51       	subi	r27, 0x17	; 23
    238c:	90 f4       	brcc	.+36     	; 0x23b2 <modf+0x42>
    238e:	ab 2f       	mov	r26, r27
    2390:	00 24       	eor	r0, r0
    2392:	46 95       	lsr	r20
    2394:	37 95       	ror	r19
    2396:	27 95       	ror	r18
    2398:	01 1c       	adc	r0, r1
    239a:	a3 95       	inc	r26
    239c:	d2 f3       	brmi	.-12     	; 0x2392 <modf+0x22>
    239e:	00 20       	and	r0, r0
    23a0:	71 f0       	breq	.+28     	; 0x23be <modf+0x4e>
    23a2:	22 0f       	add	r18, r18
    23a4:	33 1f       	adc	r19, r19
    23a6:	44 1f       	adc	r20, r20
    23a8:	b3 95       	inc	r27
    23aa:	da f3       	brmi	.-10     	; 0x23a2 <modf+0x32>
    23ac:	0e d0       	rcall	.+28     	; 0x23ca <modf+0x5a>
    23ae:	0c 94 1f 0d 	jmp	0x1a3e	; 0x1a3e <__subsf3>
    23b2:	61 30       	cpi	r22, 0x01	; 1
    23b4:	71 05       	cpc	r23, r1
    23b6:	a0 e8       	ldi	r26, 0x80	; 128
    23b8:	8a 07       	cpc	r24, r26
    23ba:	b9 46       	sbci	r27, 0x69	; 105
    23bc:	30 f4       	brcc	.+12     	; 0x23ca <modf+0x5a>
    23be:	9b 01       	movw	r18, r22
    23c0:	ac 01       	movw	r20, r24
    23c2:	66 27       	eor	r22, r22
    23c4:	77 27       	eor	r23, r23
    23c6:	88 27       	eor	r24, r24
    23c8:	90 78       	andi	r25, 0x80	; 128
    23ca:	30 96       	adiw	r30, 0x00	; 0
    23cc:	21 f0       	breq	.+8      	; 0x23d6 <modf+0x66>
    23ce:	20 83       	st	Z, r18
    23d0:	31 83       	std	Z+1, r19	; 0x01
    23d2:	42 83       	std	Z+2, r20	; 0x02
    23d4:	53 83       	std	Z+3, r21	; 0x03
    23d6:	08 95       	ret

000023d8 <__tablejump2__>:
    23d8:	ee 0f       	add	r30, r30
    23da:	ff 1f       	adc	r31, r31
    23dc:	05 90       	lpm	r0, Z+
    23de:	f4 91       	lpm	r31, Z
    23e0:	e0 2d       	mov	r30, r0
    23e2:	09 94       	ijmp

000023e4 <dtostrf>:
    23e4:	ef 92       	push	r14
    23e6:	0f 93       	push	r16
    23e8:	1f 93       	push	r17
    23ea:	cf 93       	push	r28
    23ec:	df 93       	push	r29
    23ee:	00 d0       	rcall	.+0      	; 0x23f0 <dtostrf+0xc>
    23f0:	00 d0       	rcall	.+0      	; 0x23f2 <dtostrf+0xe>
    23f2:	0f 92       	push	r0
    23f4:	cd b7       	in	r28, 0x3d	; 61
    23f6:	de b7       	in	r29, 0x3e	; 62
    23f8:	32 2f       	mov	r19, r18
    23fa:	0d 83       	std	Y+5, r16	; 0x05
    23fc:	54 e0       	ldi	r21, 0x04	; 4
    23fe:	47 fd       	sbrc	r20, 7
    2400:	54 e1       	ldi	r21, 0x14	; 20
    2402:	24 2f       	mov	r18, r20
    2404:	27 fd       	sbrc	r18, 7
    2406:	21 95       	neg	r18
    2408:	e5 2e       	mov	r14, r21
    240a:	03 2f       	mov	r16, r19
    240c:	4d 81       	ldd	r20, Y+5	; 0x05
    240e:	51 2f       	mov	r21, r17
    2410:	69 83       	std	Y+1, r22	; 0x01
    2412:	7a 83       	std	Y+2, r23	; 0x02
    2414:	8b 83       	std	Y+3, r24	; 0x03
    2416:	9c 83       	std	Y+4, r25	; 0x04
    2418:	69 81       	ldd	r22, Y+1	; 0x01
    241a:	7a 81       	ldd	r23, Y+2	; 0x02
    241c:	8b 81       	ldd	r24, Y+3	; 0x03
    241e:	9c 81       	ldd	r25, Y+4	; 0x04
    2420:	0e 94 37 12 	call	0x246e	; 0x246e <dtoa_prf>
    2424:	8d 81       	ldd	r24, Y+5	; 0x05
    2426:	91 2f       	mov	r25, r17
    2428:	0f 90       	pop	r0
    242a:	0f 90       	pop	r0
    242c:	0f 90       	pop	r0
    242e:	0f 90       	pop	r0
    2430:	0f 90       	pop	r0
    2432:	df 91       	pop	r29
    2434:	cf 91       	pop	r28
    2436:	1f 91       	pop	r17
    2438:	0f 91       	pop	r16
    243a:	ef 90       	pop	r14
    243c:	08 95       	ret

0000243e <atof>:
    243e:	66 27       	eor	r22, r22
    2440:	77 27       	eor	r23, r23
    2442:	0c 94 8f 13 	jmp	0x271e	; 0x271e <strtod>

00002446 <isupper>:
    2446:	85 fd       	sbrc	r24, 5
    2448:	0c 94 14 16 	jmp	0x2c28	; 0x2c28 <__ctype_isfalse>

0000244c <isalpha>:
    244c:	80 62       	ori	r24, 0x20	; 32

0000244e <islower>:
    244e:	91 11       	cpse	r25, r1
    2450:	0c 94 14 16 	jmp	0x2c28	; 0x2c28 <__ctype_isfalse>
    2454:	81 56       	subi	r24, 0x61	; 97
    2456:	8a 51       	subi	r24, 0x1A	; 26
    2458:	d8 f7       	brcc	.-10     	; 0x2450 <islower+0x2>
    245a:	08 95       	ret

0000245c <memcpy_P>:
    245c:	fb 01       	movw	r30, r22
    245e:	dc 01       	movw	r26, r24
    2460:	02 c0       	rjmp	.+4      	; 0x2466 <memcpy_P+0xa>
    2462:	05 90       	lpm	r0, Z+
    2464:	0d 92       	st	X+, r0
    2466:	41 50       	subi	r20, 0x01	; 1
    2468:	50 40       	sbci	r21, 0x00	; 0
    246a:	d8 f7       	brcc	.-10     	; 0x2462 <memcpy_P+0x6>
    246c:	08 95       	ret

0000246e <dtoa_prf>:
    246e:	ad e0       	ldi	r26, 0x0D	; 13
    2470:	b0 e0       	ldi	r27, 0x00	; 0
    2472:	ed e3       	ldi	r30, 0x3D	; 61
    2474:	f2 e1       	ldi	r31, 0x12	; 18
    2476:	0c 94 4a 16 	jmp	0x2c94	; 0x2c94 <__prologue_saves__>
    247a:	6a 01       	movw	r12, r20
    247c:	f2 2e       	mov	r15, r18
    247e:	40 2e       	mov	r4, r16
    2480:	2e 2c       	mov	r2, r14
    2482:	10 2f       	mov	r17, r16
    2484:	2b e3       	ldi	r18, 0x3B	; 59
    2486:	20 17       	cp	r18, r16
    2488:	08 f4       	brcc	.+2      	; 0x248c <dtoa_prf+0x1e>
    248a:	1b e3       	ldi	r17, 0x3B	; 59
    248c:	1f 5f       	subi	r17, 0xFF	; 255
    248e:	01 2f       	mov	r16, r17
    2490:	27 e0       	ldi	r18, 0x07	; 7
    2492:	ae 01       	movw	r20, r28
    2494:	4f 5f       	subi	r20, 0xFF	; 255
    2496:	5f 4f       	sbci	r21, 0xFF	; 255
    2498:	6a 87       	std	Y+10, r22	; 0x0a
    249a:	7b 87       	std	Y+11, r23	; 0x0b
    249c:	8c 87       	std	Y+12, r24	; 0x0c
    249e:	9d 87       	std	Y+13, r25	; 0x0d
    24a0:	6a 85       	ldd	r22, Y+10	; 0x0a
    24a2:	7b 85       	ldd	r23, Y+11	; 0x0b
    24a4:	8c 85       	ldd	r24, Y+12	; 0x0c
    24a6:	9d 85       	ldd	r25, Y+13	; 0x0d
    24a8:	0e 94 3c 15 	call	0x2a78	; 0x2a78 <__ftoa_engine>
    24ac:	4c 01       	movw	r8, r24
    24ae:	59 80       	ldd	r5, Y+1	; 0x01
    24b0:	85 2d       	mov	r24, r5
    24b2:	89 70       	andi	r24, 0x09	; 9
    24b4:	0d e2       	ldi	r16, 0x2D	; 45
    24b6:	81 30       	cpi	r24, 0x01	; 1
    24b8:	39 f0       	breq	.+14     	; 0x24c8 <dtoa_prf+0x5a>
    24ba:	0b e2       	ldi	r16, 0x2B	; 43
    24bc:	21 fc       	sbrc	r2, 1
    24be:	04 c0       	rjmp	.+8      	; 0x24c8 <dtoa_prf+0x5a>
    24c0:	02 2d       	mov	r16, r2
    24c2:	01 70       	andi	r16, 0x01	; 1
    24c4:	20 fc       	sbrc	r2, 0
    24c6:	00 e2       	ldi	r16, 0x20	; 32
    24c8:	42 2d       	mov	r20, r2
    24ca:	40 71       	andi	r20, 0x10	; 16
    24cc:	34 2e       	mov	r3, r20
    24ce:	95 2d       	mov	r25, r5
    24d0:	98 70       	andi	r25, 0x08	; 8
    24d2:	53 fe       	sbrs	r5, 3
    24d4:	41 c0       	rjmp	.+130    	; 0x2558 <dtoa_prf+0xea>
    24d6:	83 e0       	ldi	r24, 0x03	; 3
    24d8:	01 11       	cpse	r16, r1
    24da:	84 e0       	ldi	r24, 0x04	; 4
    24dc:	8f 15       	cp	r24, r15
    24de:	98 f5       	brcc	.+102    	; 0x2546 <dtoa_prf+0xd8>
    24e0:	f8 1a       	sub	r15, r24
    24e2:	31 10       	cpse	r3, r1
    24e4:	0b c0       	rjmp	.+22     	; 0x24fc <dtoa_prf+0x8e>
    24e6:	ef 2c       	mov	r14, r15
    24e8:	f1 2c       	mov	r15, r1
    24ea:	a7 01       	movw	r20, r14
    24ec:	60 e2       	ldi	r22, 0x20	; 32
    24ee:	70 e0       	ldi	r23, 0x00	; 0
    24f0:	c6 01       	movw	r24, r12
    24f2:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    24f6:	ce 0c       	add	r12, r14
    24f8:	df 1c       	adc	r13, r15
    24fa:	f1 2c       	mov	r15, r1
    24fc:	00 23       	and	r16, r16
    24fe:	19 f0       	breq	.+6      	; 0x2506 <dtoa_prf+0x98>
    2500:	f6 01       	movw	r30, r12
    2502:	01 93       	st	Z+, r16
    2504:	6f 01       	movw	r12, r30
    2506:	86 01       	movw	r16, r12
    2508:	0d 5f       	subi	r16, 0xFD	; 253
    250a:	1f 4f       	sbci	r17, 0xFF	; 255
    250c:	22 fe       	sbrs	r2, 2
    250e:	1d c0       	rjmp	.+58     	; 0x254a <dtoa_prf+0xdc>
    2510:	8e e4       	ldi	r24, 0x4E	; 78
    2512:	d6 01       	movw	r26, r12
    2514:	8c 93       	st	X, r24
    2516:	91 e4       	ldi	r25, 0x41	; 65
    2518:	11 96       	adiw	r26, 0x01	; 1
    251a:	9c 93       	st	X, r25
    251c:	11 97       	sbiw	r26, 0x01	; 1
    251e:	12 96       	adiw	r26, 0x02	; 2
    2520:	8c 93       	st	X, r24
    2522:	ef 2c       	mov	r14, r15
    2524:	f1 2c       	mov	r15, r1
    2526:	a7 01       	movw	r20, r14
    2528:	60 e2       	ldi	r22, 0x20	; 32
    252a:	70 e0       	ldi	r23, 0x00	; 0
    252c:	c8 01       	movw	r24, r16
    252e:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    2532:	e0 0e       	add	r14, r16
    2534:	f1 1e       	adc	r15, r17
    2536:	d7 01       	movw	r26, r14
    2538:	1c 92       	st	X, r1
    253a:	8e ef       	ldi	r24, 0xFE	; 254
    253c:	9f ef       	ldi	r25, 0xFF	; 255
    253e:	2d 96       	adiw	r28, 0x0d	; 13
    2540:	e2 e1       	ldi	r30, 0x12	; 18
    2542:	0c 94 66 16 	jmp	0x2ccc	; 0x2ccc <__epilogue_restores__>
    2546:	f1 2c       	mov	r15, r1
    2548:	cc cf       	rjmp	.-104    	; 0x24e2 <dtoa_prf+0x74>
    254a:	8e e6       	ldi	r24, 0x6E	; 110
    254c:	f6 01       	movw	r30, r12
    254e:	80 83       	st	Z, r24
    2550:	91 e6       	ldi	r25, 0x61	; 97
    2552:	91 83       	std	Z+1, r25	; 0x01
    2554:	82 83       	std	Z+2, r24	; 0x02
    2556:	e5 cf       	rjmp	.-54     	; 0x2522 <dtoa_prf+0xb4>
    2558:	52 fe       	sbrs	r5, 2
    255a:	3e c0       	rjmp	.+124    	; 0x25d8 <dtoa_prf+0x16a>
    255c:	83 e0       	ldi	r24, 0x03	; 3
    255e:	01 11       	cpse	r16, r1
    2560:	84 e0       	ldi	r24, 0x04	; 4
    2562:	8f 15       	cp	r24, r15
    2564:	10 f4       	brcc	.+4      	; 0x256a <dtoa_prf+0xfc>
    2566:	9f 2d       	mov	r25, r15
    2568:	98 1b       	sub	r25, r24
    256a:	31 10       	cpse	r3, r1
    256c:	0b c0       	rjmp	.+22     	; 0x2584 <dtoa_prf+0x116>
    256e:	e9 2e       	mov	r14, r25
    2570:	f1 2c       	mov	r15, r1
    2572:	a7 01       	movw	r20, r14
    2574:	60 e2       	ldi	r22, 0x20	; 32
    2576:	70 e0       	ldi	r23, 0x00	; 0
    2578:	c6 01       	movw	r24, r12
    257a:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    257e:	ce 0c       	add	r12, r14
    2580:	df 1c       	adc	r13, r15
    2582:	90 e0       	ldi	r25, 0x00	; 0
    2584:	00 23       	and	r16, r16
    2586:	19 f0       	breq	.+6      	; 0x258e <dtoa_prf+0x120>
    2588:	f6 01       	movw	r30, r12
    258a:	01 93       	st	Z+, r16
    258c:	6f 01       	movw	r12, r30
    258e:	76 01       	movw	r14, r12
    2590:	b3 e0       	ldi	r27, 0x03	; 3
    2592:	eb 0e       	add	r14, r27
    2594:	f1 1c       	adc	r15, r1
    2596:	22 fe       	sbrs	r2, 2
    2598:	14 c0       	rjmp	.+40     	; 0x25c2 <dtoa_prf+0x154>
    259a:	89 e4       	ldi	r24, 0x49	; 73
    259c:	f6 01       	movw	r30, r12
    259e:	80 83       	st	Z, r24
    25a0:	8e e4       	ldi	r24, 0x4E	; 78
    25a2:	81 83       	std	Z+1, r24	; 0x01
    25a4:	86 e4       	ldi	r24, 0x46	; 70
    25a6:	82 83       	std	Z+2, r24	; 0x02
    25a8:	09 2f       	mov	r16, r25
    25aa:	10 e0       	ldi	r17, 0x00	; 0
    25ac:	a8 01       	movw	r20, r16
    25ae:	60 e2       	ldi	r22, 0x20	; 32
    25b0:	70 e0       	ldi	r23, 0x00	; 0
    25b2:	c7 01       	movw	r24, r14
    25b4:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    25b8:	f7 01       	movw	r30, r14
    25ba:	e0 0f       	add	r30, r16
    25bc:	f1 1f       	adc	r31, r17
    25be:	10 82       	st	Z, r1
    25c0:	bc cf       	rjmp	.-136    	; 0x253a <dtoa_prf+0xcc>
    25c2:	89 e6       	ldi	r24, 0x69	; 105
    25c4:	d6 01       	movw	r26, r12
    25c6:	8c 93       	st	X, r24
    25c8:	8e e6       	ldi	r24, 0x6E	; 110
    25ca:	11 96       	adiw	r26, 0x01	; 1
    25cc:	8c 93       	st	X, r24
    25ce:	11 97       	sbiw	r26, 0x01	; 1
    25d0:	86 e6       	ldi	r24, 0x66	; 102
    25d2:	12 96       	adiw	r26, 0x02	; 2
    25d4:	8c 93       	st	X, r24
    25d6:	e8 cf       	rjmp	.-48     	; 0x25a8 <dtoa_prf+0x13a>
    25d8:	54 01       	movw	r10, r8
    25da:	97 fe       	sbrs	r9, 7
    25dc:	02 c0       	rjmp	.+4      	; 0x25e2 <dtoa_prf+0x174>
    25de:	b1 2c       	mov	r11, r1
    25e0:	a1 2c       	mov	r10, r1
    25e2:	81 e0       	ldi	r24, 0x01	; 1
    25e4:	90 e0       	ldi	r25, 0x00	; 0
    25e6:	01 11       	cpse	r16, r1
    25e8:	02 c0       	rjmp	.+4      	; 0x25ee <dtoa_prf+0x180>
    25ea:	90 e0       	ldi	r25, 0x00	; 0
    25ec:	80 e0       	ldi	r24, 0x00	; 0
    25ee:	95 01       	movw	r18, r10
    25f0:	2f 5f       	subi	r18, 0xFF	; 255
    25f2:	3f 4f       	sbci	r19, 0xFF	; 255
    25f4:	82 0f       	add	r24, r18
    25f6:	93 1f       	adc	r25, r19
    25f8:	64 2c       	mov	r6, r4
    25fa:	71 2c       	mov	r7, r1
    25fc:	93 01       	movw	r18, r6
    25fe:	2f 5f       	subi	r18, 0xFF	; 255
    2600:	3f 4f       	sbci	r19, 0xFF	; 255
    2602:	41 10       	cpse	r4, r1
    2604:	02 c0       	rjmp	.+4      	; 0x260a <dtoa_prf+0x19c>
    2606:	30 e0       	ldi	r19, 0x00	; 0
    2608:	20 e0       	ldi	r18, 0x00	; 0
    260a:	82 0f       	add	r24, r18
    260c:	93 1f       	adc	r25, r19
    260e:	f8 16       	cp	r15, r24
    2610:	19 06       	cpc	r1, r25
    2612:	09 f0       	breq	.+2      	; 0x2616 <dtoa_prf+0x1a8>
    2614:	0c f4       	brge	.+2      	; 0x2618 <dtoa_prf+0x1aa>
    2616:	5f c0       	rjmp	.+190    	; 0x26d6 <dtoa_prf+0x268>
    2618:	f8 1a       	sub	r15, r24
    261a:	31 10       	cpse	r3, r1
    261c:	7d c0       	rjmp	.+250    	; 0x2718 <dtoa_prf+0x2aa>
    261e:	23 fc       	sbrc	r2, 3
    2620:	0b c0       	rjmp	.+22     	; 0x2638 <dtoa_prf+0x1ca>
    2622:	ef 2c       	mov	r14, r15
    2624:	f1 2c       	mov	r15, r1
    2626:	a7 01       	movw	r20, r14
    2628:	60 e2       	ldi	r22, 0x20	; 32
    262a:	70 e0       	ldi	r23, 0x00	; 0
    262c:	c6 01       	movw	r24, r12
    262e:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    2632:	ce 0c       	add	r12, r14
    2634:	df 1c       	adc	r13, r15
    2636:	f1 2c       	mov	r15, r1
    2638:	00 23       	and	r16, r16
    263a:	29 f0       	breq	.+10     	; 0x2646 <dtoa_prf+0x1d8>
    263c:	f6 01       	movw	r30, r12
    263e:	01 93       	st	Z+, r16
    2640:	6f 01       	movw	r12, r30
    2642:	31 10       	cpse	r3, r1
    2644:	0b c0       	rjmp	.+22     	; 0x265c <dtoa_prf+0x1ee>
    2646:	ef 2c       	mov	r14, r15
    2648:	f1 2c       	mov	r15, r1
    264a:	a7 01       	movw	r20, r14
    264c:	60 e3       	ldi	r22, 0x30	; 48
    264e:	70 e0       	ldi	r23, 0x00	; 0
    2650:	c6 01       	movw	r24, r12
    2652:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    2656:	ce 0c       	add	r12, r14
    2658:	df 1c       	adc	r13, r15
    265a:	f1 2c       	mov	r15, r1
    265c:	18 0d       	add	r17, r8
    265e:	9a 81       	ldd	r25, Y+2	; 0x02
    2660:	25 2d       	mov	r18, r5
    2662:	20 71       	andi	r18, 0x10	; 16
    2664:	54 fe       	sbrs	r5, 4
    2666:	03 c0       	rjmp	.+6      	; 0x266e <dtoa_prf+0x200>
    2668:	91 33       	cpi	r25, 0x31	; 49
    266a:	09 f4       	brne	.+2      	; 0x266e <dtoa_prf+0x200>
    266c:	11 50       	subi	r17, 0x01	; 1
    266e:	11 16       	cp	r1, r17
    2670:	a4 f5       	brge	.+104    	; 0x26da <dtoa_prf+0x26c>
    2672:	19 30       	cpi	r17, 0x09	; 9
    2674:	08 f0       	brcs	.+2      	; 0x2678 <dtoa_prf+0x20a>
    2676:	18 e0       	ldi	r17, 0x08	; 8
    2678:	f4 01       	movw	r30, r8
    267a:	ea 19       	sub	r30, r10
    267c:	fb 09       	sbc	r31, r11
    267e:	41 e0       	ldi	r20, 0x01	; 1
    2680:	50 e0       	ldi	r21, 0x00	; 0
    2682:	4c 0f       	add	r20, r28
    2684:	5d 1f       	adc	r21, r29
    2686:	e4 0f       	add	r30, r20
    2688:	f5 1f       	adc	r31, r21
    268a:	a4 01       	movw	r20, r8
    268c:	41 1b       	sub	r20, r17
    268e:	51 09       	sbc	r21, r1
    2690:	71 94       	neg	r7
    2692:	61 94       	neg	r6
    2694:	71 08       	sbc	r7, r1
    2696:	3e e2       	ldi	r19, 0x2E	; 46
    2698:	8a 14       	cp	r8, r10
    269a:	9b 04       	cpc	r9, r11
    269c:	04 f1       	brlt	.+64     	; 0x26de <dtoa_prf+0x270>
    269e:	4a 15       	cp	r20, r10
    26a0:	5b 05       	cpc	r21, r11
    26a2:	ec f4       	brge	.+58     	; 0x26de <dtoa_prf+0x270>
    26a4:	81 81       	ldd	r24, Z+1	; 0x01
    26a6:	b1 e0       	ldi	r27, 0x01	; 1
    26a8:	ab 1a       	sub	r10, r27
    26aa:	b1 08       	sbc	r11, r1
    26ac:	86 01       	movw	r16, r12
    26ae:	0f 5f       	subi	r16, 0xFF	; 255
    26b0:	1f 4f       	sbci	r17, 0xFF	; 255
    26b2:	a6 14       	cp	r10, r6
    26b4:	b7 04       	cpc	r11, r7
    26b6:	ac f0       	brlt	.+42     	; 0x26e2 <dtoa_prf+0x274>
    26b8:	d6 01       	movw	r26, r12
    26ba:	8c 93       	st	X, r24
    26bc:	bf ef       	ldi	r27, 0xFF	; 255
    26be:	ab 16       	cp	r10, r27
    26c0:	bb 06       	cpc	r11, r27
    26c2:	31 f4       	brne	.+12     	; 0x26d0 <dtoa_prf+0x262>
    26c4:	86 01       	movw	r16, r12
    26c6:	0e 5f       	subi	r16, 0xFE	; 254
    26c8:	1f 4f       	sbci	r17, 0xFF	; 255
    26ca:	d6 01       	movw	r26, r12
    26cc:	11 96       	adiw	r26, 0x01	; 1
    26ce:	3c 93       	st	X, r19
    26d0:	31 96       	adiw	r30, 0x01	; 1
    26d2:	68 01       	movw	r12, r16
    26d4:	e1 cf       	rjmp	.-62     	; 0x2698 <dtoa_prf+0x22a>
    26d6:	f1 2c       	mov	r15, r1
    26d8:	a0 cf       	rjmp	.-192    	; 0x261a <dtoa_prf+0x1ac>
    26da:	11 e0       	ldi	r17, 0x01	; 1
    26dc:	cd cf       	rjmp	.-102    	; 0x2678 <dtoa_prf+0x20a>
    26de:	80 e3       	ldi	r24, 0x30	; 48
    26e0:	e2 cf       	rjmp	.-60     	; 0x26a6 <dtoa_prf+0x238>
    26e2:	8a 14       	cp	r8, r10
    26e4:	9b 04       	cpc	r9, r11
    26e6:	39 f4       	brne	.+14     	; 0x26f6 <dtoa_prf+0x288>
    26e8:	96 33       	cpi	r25, 0x36	; 54
    26ea:	20 f4       	brcc	.+8      	; 0x26f4 <dtoa_prf+0x286>
    26ec:	95 33       	cpi	r25, 0x35	; 53
    26ee:	19 f4       	brne	.+6      	; 0x26f6 <dtoa_prf+0x288>
    26f0:	21 11       	cpse	r18, r1
    26f2:	01 c0       	rjmp	.+2      	; 0x26f6 <dtoa_prf+0x288>
    26f4:	81 e3       	ldi	r24, 0x31	; 49
    26f6:	f6 01       	movw	r30, r12
    26f8:	80 83       	st	Z, r24
    26fa:	ef 2c       	mov	r14, r15
    26fc:	f1 2c       	mov	r15, r1
    26fe:	a7 01       	movw	r20, r14
    2700:	60 e2       	ldi	r22, 0x20	; 32
    2702:	70 e0       	ldi	r23, 0x00	; 0
    2704:	c8 01       	movw	r24, r16
    2706:	0e 94 38 16 	call	0x2c70	; 0x2c70 <memset>
    270a:	0e 0d       	add	r16, r14
    270c:	1f 1d       	adc	r17, r15
    270e:	d8 01       	movw	r26, r16
    2710:	1c 92       	st	X, r1
    2712:	90 e0       	ldi	r25, 0x00	; 0
    2714:	80 e0       	ldi	r24, 0x00	; 0
    2716:	13 cf       	rjmp	.-474    	; 0x253e <dtoa_prf+0xd0>
    2718:	01 11       	cpse	r16, r1
    271a:	90 cf       	rjmp	.-224    	; 0x263c <dtoa_prf+0x1ce>
    271c:	9f cf       	rjmp	.-194    	; 0x265c <dtoa_prf+0x1ee>

0000271e <strtod>:
    271e:	a8 e0       	ldi	r26, 0x08	; 8
    2720:	b0 e0       	ldi	r27, 0x00	; 0
    2722:	e5 e9       	ldi	r30, 0x95	; 149
    2724:	f3 e1       	ldi	r31, 0x13	; 19
    2726:	0c 94 52 16 	jmp	0x2ca4	; 0x2ca4 <__prologue_saves__+0x10>
    272a:	8d 83       	std	Y+5, r24	; 0x05
    272c:	9e 83       	std	Y+6, r25	; 0x06
    272e:	6b 01       	movw	r12, r22
    2730:	61 15       	cp	r22, r1
    2732:	71 05       	cpc	r23, r1
    2734:	29 f0       	breq	.+10     	; 0x2740 <strtod+0x22>
    2736:	ed 81       	ldd	r30, Y+5	; 0x05
    2738:	fe 81       	ldd	r31, Y+6	; 0x06
    273a:	db 01       	movw	r26, r22
    273c:	ed 93       	st	X+, r30
    273e:	fc 93       	st	X, r31
    2740:	ed 80       	ldd	r14, Y+5	; 0x05
    2742:	fe 80       	ldd	r15, Y+6	; 0x06
    2744:	97 01       	movw	r18, r14
    2746:	2f 5f       	subi	r18, 0xFF	; 255
    2748:	3f 4f       	sbci	r19, 0xFF	; 255
    274a:	3e 83       	std	Y+6, r19	; 0x06
    274c:	2d 83       	std	Y+5, r18	; 0x05
    274e:	d7 01       	movw	r26, r14
    2750:	0c 91       	ld	r16, X
    2752:	80 2f       	mov	r24, r16
    2754:	90 e0       	ldi	r25, 0x00	; 0
    2756:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <isspace>
    275a:	5c 01       	movw	r10, r24
    275c:	89 2b       	or	r24, r25
    275e:	81 f7       	brne	.-32     	; 0x2740 <strtod+0x22>
    2760:	0d 32       	cpi	r16, 0x2D	; 45
    2762:	d9 f5       	brne	.+118    	; 0x27da <strtod+0xbc>
    2764:	ed 81       	ldd	r30, Y+5	; 0x05
    2766:	fe 81       	ldd	r31, Y+6	; 0x06
    2768:	00 81       	ld	r16, Z
    276a:	97 01       	movw	r18, r14
    276c:	2e 5f       	subi	r18, 0xFE	; 254
    276e:	3f 4f       	sbci	r19, 0xFF	; 255
    2770:	3e 83       	std	Y+6, r19	; 0x06
    2772:	2d 83       	std	Y+5, r18	; 0x05
    2774:	11 e0       	ldi	r17, 0x01	; 1
    2776:	ed 80       	ldd	r14, Y+5	; 0x05
    2778:	fe 80       	ldd	r15, Y+6	; 0x06
    277a:	f1 e0       	ldi	r31, 0x01	; 1
    277c:	ef 1a       	sub	r14, r31
    277e:	f1 08       	sbc	r15, r1
    2780:	43 e0       	ldi	r20, 0x03	; 3
    2782:	50 e0       	ldi	r21, 0x00	; 0
    2784:	6c e9       	ldi	r22, 0x9C	; 156
    2786:	71 e0       	ldi	r23, 0x01	; 1
    2788:	c7 01       	movw	r24, r14
    278a:	0e 94 20 16 	call	0x2c40	; 0x2c40 <strncasecmp_P>
    278e:	89 2b       	or	r24, r25
    2790:	79 f5       	brne	.+94     	; 0x27f0 <strtod+0xd2>
    2792:	ed 80       	ldd	r14, Y+5	; 0x05
    2794:	fe 80       	ldd	r15, Y+6	; 0x06
    2796:	22 e0       	ldi	r18, 0x02	; 2
    2798:	e2 0e       	add	r14, r18
    279a:	f1 1c       	adc	r15, r1
    279c:	45 e0       	ldi	r20, 0x05	; 5
    279e:	50 e0       	ldi	r21, 0x00	; 0
    27a0:	67 e9       	ldi	r22, 0x97	; 151
    27a2:	71 e0       	ldi	r23, 0x01	; 1
    27a4:	c7 01       	movw	r24, r14
    27a6:	0e 94 20 16 	call	0x2c40	; 0x2c40 <strncasecmp_P>
    27aa:	89 2b       	or	r24, r25
    27ac:	29 f4       	brne	.+10     	; 0x27b8 <strtod+0x9a>
    27ae:	ed 80       	ldd	r14, Y+5	; 0x05
    27b0:	fe 80       	ldd	r15, Y+6	; 0x06
    27b2:	37 e0       	ldi	r19, 0x07	; 7
    27b4:	e3 0e       	add	r14, r19
    27b6:	f1 1c       	adc	r15, r1
    27b8:	c1 14       	cp	r12, r1
    27ba:	d1 04       	cpc	r13, r1
    27bc:	19 f0       	breq	.+6      	; 0x27c4 <strtod+0xa6>
    27be:	d6 01       	movw	r26, r12
    27c0:	ed 92       	st	X+, r14
    27c2:	fc 92       	st	X, r15
    27c4:	20 e0       	ldi	r18, 0x00	; 0
    27c6:	30 e0       	ldi	r19, 0x00	; 0
    27c8:	40 e8       	ldi	r20, 0x80	; 128
    27ca:	5f e7       	ldi	r21, 0x7F	; 127
    27cc:	11 23       	and	r17, r17
    27ce:	39 f1       	breq	.+78     	; 0x281e <strtod+0x100>
    27d0:	20 e0       	ldi	r18, 0x00	; 0
    27d2:	30 e0       	ldi	r19, 0x00	; 0
    27d4:	40 e8       	ldi	r20, 0x80	; 128
    27d6:	5f ef       	ldi	r21, 0xFF	; 255
    27d8:	22 c0       	rjmp	.+68     	; 0x281e <strtod+0x100>
    27da:	0b 32       	cpi	r16, 0x2B	; 43
    27dc:	39 f4       	brne	.+14     	; 0x27ec <strtod+0xce>
    27de:	ad 81       	ldd	r26, Y+5	; 0x05
    27e0:	be 81       	ldd	r27, Y+6	; 0x06
    27e2:	0c 91       	ld	r16, X
    27e4:	f7 01       	movw	r30, r14
    27e6:	32 96       	adiw	r30, 0x02	; 2
    27e8:	fe 83       	std	Y+6, r31	; 0x06
    27ea:	ed 83       	std	Y+5, r30	; 0x05
    27ec:	10 e0       	ldi	r17, 0x00	; 0
    27ee:	c3 cf       	rjmp	.-122    	; 0x2776 <strtod+0x58>
    27f0:	43 e0       	ldi	r20, 0x03	; 3
    27f2:	50 e0       	ldi	r21, 0x00	; 0
    27f4:	64 e9       	ldi	r22, 0x94	; 148
    27f6:	71 e0       	ldi	r23, 0x01	; 1
    27f8:	c7 01       	movw	r24, r14
    27fa:	0e 94 20 16 	call	0x2c40	; 0x2c40 <strncasecmp_P>
    27fe:	89 2b       	or	r24, r25
    2800:	d1 f4       	brne	.+52     	; 0x2836 <strtod+0x118>
    2802:	c1 14       	cp	r12, r1
    2804:	d1 04       	cpc	r13, r1
    2806:	09 f4       	brne	.+2      	; 0x280a <strtod+0xec>
    2808:	2e c1       	rjmp	.+604    	; 0x2a66 <strtod+0x348>
    280a:	ed 81       	ldd	r30, Y+5	; 0x05
    280c:	fe 81       	ldd	r31, Y+6	; 0x06
    280e:	32 96       	adiw	r30, 0x02	; 2
    2810:	d6 01       	movw	r26, r12
    2812:	ed 93       	st	X+, r30
    2814:	fc 93       	st	X, r31
    2816:	20 e0       	ldi	r18, 0x00	; 0
    2818:	30 e0       	ldi	r19, 0x00	; 0
    281a:	40 ec       	ldi	r20, 0xC0	; 192
    281c:	5f e7       	ldi	r21, 0x7F	; 127
    281e:	29 83       	std	Y+1, r18	; 0x01
    2820:	3a 83       	std	Y+2, r19	; 0x02
    2822:	4b 83       	std	Y+3, r20	; 0x03
    2824:	5c 83       	std	Y+4, r21	; 0x04
    2826:	69 81       	ldd	r22, Y+1	; 0x01
    2828:	7a 81       	ldd	r23, Y+2	; 0x02
    282a:	8b 81       	ldd	r24, Y+3	; 0x03
    282c:	9c 81       	ldd	r25, Y+4	; 0x04
    282e:	28 96       	adiw	r28, 0x08	; 8
    2830:	ea e0       	ldi	r30, 0x0A	; 10
    2832:	0c 94 6e 16 	jmp	0x2cdc	; 0x2cdc <__epilogue_restores__+0x10>
    2836:	f1 2c       	mov	r15, r1
    2838:	e1 2c       	mov	r14, r1
    283a:	19 82       	std	Y+1, r1	; 0x01
    283c:	1a 82       	std	Y+2, r1	; 0x02
    283e:	1b 82       	std	Y+3, r1	; 0x03
    2840:	1c 82       	std	Y+4, r1	; 0x04
    2842:	f0 ed       	ldi	r31, 0xD0	; 208
    2844:	f0 0f       	add	r31, r16
    2846:	fa 30       	cpi	r31, 0x0A	; 10
    2848:	b8 f5       	brcc	.+110    	; 0x28b8 <strtod+0x19a>
    284a:	e1 2f       	mov	r30, r17
    284c:	e2 60       	ori	r30, 0x02	; 2
    284e:	81 2f       	mov	r24, r17
    2850:	88 70       	andi	r24, 0x08	; 8
    2852:	12 ff       	sbrs	r17, 2
    2854:	0c c0       	rjmp	.+24     	; 0x286e <strtod+0x150>
    2856:	81 11       	cpse	r24, r1
    2858:	03 c0       	rjmp	.+6      	; 0x2860 <strtod+0x142>
    285a:	3f ef       	ldi	r19, 0xFF	; 255
    285c:	e3 1a       	sub	r14, r19
    285e:	f3 0a       	sbc	r15, r19
    2860:	ad 81       	ldd	r26, Y+5	; 0x05
    2862:	be 81       	ldd	r27, Y+6	; 0x06
    2864:	0d 91       	ld	r16, X+
    2866:	be 83       	std	Y+6, r27	; 0x06
    2868:	ad 83       	std	Y+5, r26	; 0x05
    286a:	1e 2f       	mov	r17, r30
    286c:	ea cf       	rjmp	.-44     	; 0x2842 <strtod+0x124>
    286e:	88 23       	and	r24, r24
    2870:	19 f0       	breq	.+6      	; 0x2878 <strtod+0x15a>
    2872:	41 e0       	ldi	r20, 0x01	; 1
    2874:	e4 1a       	sub	r14, r20
    2876:	f1 08       	sbc	r15, r1
    2878:	a5 e0       	ldi	r26, 0x05	; 5
    287a:	b0 e0       	ldi	r27, 0x00	; 0
    287c:	29 81       	ldd	r18, Y+1	; 0x01
    287e:	3a 81       	ldd	r19, Y+2	; 0x02
    2880:	4b 81       	ldd	r20, Y+3	; 0x03
    2882:	5c 81       	ldd	r21, Y+4	; 0x04
    2884:	0e 94 3f 16 	call	0x2c7e	; 0x2c7e <__muluhisi3>
    2888:	dc 01       	movw	r26, r24
    288a:	cb 01       	movw	r24, r22
    288c:	88 0f       	add	r24, r24
    288e:	99 1f       	adc	r25, r25
    2890:	aa 1f       	adc	r26, r26
    2892:	bb 1f       	adc	r27, r27
    2894:	9c 01       	movw	r18, r24
    2896:	ad 01       	movw	r20, r26
    2898:	2f 0f       	add	r18, r31
    289a:	31 1d       	adc	r19, r1
    289c:	41 1d       	adc	r20, r1
    289e:	51 1d       	adc	r21, r1
    28a0:	29 83       	std	Y+1, r18	; 0x01
    28a2:	3a 83       	std	Y+2, r19	; 0x02
    28a4:	4b 83       	std	Y+3, r20	; 0x03
    28a6:	5c 83       	std	Y+4, r21	; 0x04
    28a8:	28 39       	cpi	r18, 0x98	; 152
    28aa:	39 49       	sbci	r19, 0x99	; 153
    28ac:	49 49       	sbci	r20, 0x99	; 153
    28ae:	59 41       	sbci	r21, 0x19	; 25
    28b0:	b8 f2       	brcs	.-82     	; 0x2860 <strtod+0x142>
    28b2:	e1 2f       	mov	r30, r17
    28b4:	e6 60       	ori	r30, 0x06	; 6
    28b6:	d4 cf       	rjmp	.-88     	; 0x2860 <strtod+0x142>
    28b8:	fe 3f       	cpi	r31, 0xFE	; 254
    28ba:	29 f4       	brne	.+10     	; 0x28c6 <strtod+0x1a8>
    28bc:	13 fd       	sbrc	r17, 3
    28be:	25 c0       	rjmp	.+74     	; 0x290a <strtod+0x1ec>
    28c0:	e1 2f       	mov	r30, r17
    28c2:	e8 60       	ori	r30, 0x08	; 8
    28c4:	cd cf       	rjmp	.-102    	; 0x2860 <strtod+0x142>
    28c6:	0f 7d       	andi	r16, 0xDF	; 223
    28c8:	05 34       	cpi	r16, 0x45	; 69
    28ca:	f9 f4       	brne	.+62     	; 0x290a <strtod+0x1ec>
    28cc:	ed 81       	ldd	r30, Y+5	; 0x05
    28ce:	fe 81       	ldd	r31, Y+6	; 0x06
    28d0:	80 81       	ld	r24, Z
    28d2:	8d 32       	cpi	r24, 0x2D	; 45
    28d4:	41 f4       	brne	.+16     	; 0x28e6 <strtod+0x1c8>
    28d6:	10 61       	ori	r17, 0x10	; 16
    28d8:	9f 01       	movw	r18, r30
    28da:	2e 5f       	subi	r18, 0xFE	; 254
    28dc:	3f 4f       	sbci	r19, 0xFF	; 255
    28de:	81 81       	ldd	r24, Z+1	; 0x01
    28e0:	42 e0       	ldi	r20, 0x02	; 2
    28e2:	50 e0       	ldi	r21, 0x00	; 0
    28e4:	09 c0       	rjmp	.+18     	; 0x28f8 <strtod+0x1da>
    28e6:	2d 81       	ldd	r18, Y+5	; 0x05
    28e8:	3e 81       	ldd	r19, Y+6	; 0x06
    28ea:	8b 32       	cpi	r24, 0x2B	; 43
    28ec:	09 f4       	brne	.+2      	; 0x28f0 <strtod+0x1d2>
    28ee:	55 c0       	rjmp	.+170    	; 0x299a <strtod+0x27c>
    28f0:	2f 5f       	subi	r18, 0xFF	; 255
    28f2:	3f 4f       	sbci	r19, 0xFF	; 255
    28f4:	41 e0       	ldi	r20, 0x01	; 1
    28f6:	50 e0       	ldi	r21, 0x00	; 0
    28f8:	80 53       	subi	r24, 0x30	; 48
    28fa:	8a 30       	cpi	r24, 0x0A	; 10
    28fc:	08 f4       	brcc	.+2      	; 0x2900 <strtod+0x1e2>
    28fe:	56 c0       	rjmp	.+172    	; 0x29ac <strtod+0x28e>
    2900:	f9 01       	movw	r30, r18
    2902:	e4 1b       	sub	r30, r20
    2904:	f5 0b       	sbc	r31, r21
    2906:	fe 83       	std	Y+6, r31	; 0x06
    2908:	ed 83       	std	Y+5, r30	; 0x05
    290a:	11 ff       	sbrs	r17, 1
    290c:	0a c0       	rjmp	.+20     	; 0x2922 <strtod+0x204>
    290e:	c1 14       	cp	r12, r1
    2910:	d1 04       	cpc	r13, r1
    2912:	39 f0       	breq	.+14     	; 0x2922 <strtod+0x204>
    2914:	2d 81       	ldd	r18, Y+5	; 0x05
    2916:	3e 81       	ldd	r19, Y+6	; 0x06
    2918:	21 50       	subi	r18, 0x01	; 1
    291a:	31 09       	sbc	r19, r1
    291c:	f6 01       	movw	r30, r12
    291e:	31 83       	std	Z+1, r19	; 0x01
    2920:	20 83       	st	Z, r18
    2922:	69 81       	ldd	r22, Y+1	; 0x01
    2924:	7a 81       	ldd	r23, Y+2	; 0x02
    2926:	8b 81       	ldd	r24, Y+3	; 0x03
    2928:	9c 81       	ldd	r25, Y+4	; 0x04
    292a:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__floatunsisf>
    292e:	46 2f       	mov	r20, r22
    2930:	57 2f       	mov	r21, r23
    2932:	bc 01       	movw	r22, r24
    2934:	4d 83       	std	Y+5, r20	; 0x05
    2936:	5e 83       	std	Y+6, r21	; 0x06
    2938:	6f 83       	std	Y+7, r22	; 0x07
    293a:	78 87       	std	Y+8, r23	; 0x08
    293c:	13 70       	andi	r17, 0x03	; 3
    293e:	13 30       	cpi	r17, 0x03	; 3
    2940:	39 f4       	brne	.+14     	; 0x2950 <strtod+0x232>
    2942:	dc 01       	movw	r26, r24
    2944:	ca 01       	movw	r24, r20
    2946:	b0 58       	subi	r27, 0x80	; 128
    2948:	8d 83       	std	Y+5, r24	; 0x05
    294a:	9e 83       	std	Y+6, r25	; 0x06
    294c:	af 83       	std	Y+7, r26	; 0x07
    294e:	b8 87       	std	Y+8, r27	; 0x08
    2950:	2d 81       	ldd	r18, Y+5	; 0x05
    2952:	3e 81       	ldd	r19, Y+6	; 0x06
    2954:	4f 81       	ldd	r20, Y+7	; 0x07
    2956:	58 85       	ldd	r21, Y+8	; 0x08
    2958:	29 83       	std	Y+1, r18	; 0x01
    295a:	3a 83       	std	Y+2, r19	; 0x02
    295c:	4b 83       	std	Y+3, r20	; 0x03
    295e:	5c 83       	std	Y+4, r21	; 0x04
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	a9 01       	movw	r20, r18
    2966:	6d 81       	ldd	r22, Y+5	; 0x05
    2968:	7e 81       	ldd	r23, Y+6	; 0x06
    296a:	8f 81       	ldd	r24, Y+7	; 0x07
    296c:	98 85       	ldd	r25, Y+8	; 0x08
    296e:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
    2972:	88 23       	and	r24, r24
    2974:	09 f4       	brne	.+2      	; 0x2978 <strtod+0x25a>
    2976:	57 cf       	rjmp	.-338    	; 0x2826 <strtod+0x108>
    2978:	f7 fe       	sbrs	r15, 7
    297a:	70 c0       	rjmp	.+224    	; 0x2a5c <strtod+0x33e>
    297c:	f1 94       	neg	r15
    297e:	e1 94       	neg	r14
    2980:	f1 08       	sbc	r15, r1
    2982:	43 eb       	ldi	r20, 0xB3	; 179
    2984:	51 e0       	ldi	r21, 0x01	; 1
    2986:	5e 83       	std	Y+6, r21	; 0x06
    2988:	4d 83       	std	Y+5, r20	; 0x05
    298a:	cd 80       	ldd	r12, Y+5	; 0x05
    298c:	de 80       	ldd	r13, Y+6	; 0x06
    298e:	38 e1       	ldi	r19, 0x18	; 24
    2990:	c3 1a       	sub	r12, r19
    2992:	d1 08       	sbc	r13, r1
    2994:	00 e2       	ldi	r16, 0x20	; 32
    2996:	10 e0       	ldi	r17, 0x00	; 0
    2998:	38 c0       	rjmp	.+112    	; 0x2a0a <strtod+0x2ec>
    299a:	2e 5f       	subi	r18, 0xFE	; 254
    299c:	3f 4f       	sbci	r19, 0xFF	; 255
    299e:	ad 81       	ldd	r26, Y+5	; 0x05
    29a0:	be 81       	ldd	r27, Y+6	; 0x06
    29a2:	11 96       	adiw	r26, 0x01	; 1
    29a4:	8c 91       	ld	r24, X
    29a6:	9c cf       	rjmp	.-200    	; 0x28e0 <strtod+0x1c2>
    29a8:	2d 81       	ldd	r18, Y+5	; 0x05
    29aa:	3e 81       	ldd	r19, Y+6	; 0x06
    29ac:	f0 e8       	ldi	r31, 0x80	; 128
    29ae:	af 16       	cp	r10, r31
    29b0:	fc e0       	ldi	r31, 0x0C	; 12
    29b2:	bf 06       	cpc	r11, r31
    29b4:	5c f4       	brge	.+22     	; 0x29cc <strtod+0x2ae>
    29b6:	a5 01       	movw	r20, r10
    29b8:	44 0f       	add	r20, r20
    29ba:	55 1f       	adc	r21, r21
    29bc:	44 0f       	add	r20, r20
    29be:	55 1f       	adc	r21, r21
    29c0:	a4 0e       	add	r10, r20
    29c2:	b5 1e       	adc	r11, r21
    29c4:	aa 0c       	add	r10, r10
    29c6:	bb 1c       	adc	r11, r11
    29c8:	a8 0e       	add	r10, r24
    29ca:	b1 1c       	adc	r11, r1
    29cc:	d9 01       	movw	r26, r18
    29ce:	8d 91       	ld	r24, X+
    29d0:	be 83       	std	Y+6, r27	; 0x06
    29d2:	ad 83       	std	Y+5, r26	; 0x05
    29d4:	80 53       	subi	r24, 0x30	; 48
    29d6:	8a 30       	cpi	r24, 0x0A	; 10
    29d8:	38 f3       	brcs	.-50     	; 0x29a8 <strtod+0x28a>
    29da:	14 ff       	sbrs	r17, 4
    29dc:	03 c0       	rjmp	.+6      	; 0x29e4 <strtod+0x2c6>
    29de:	b1 94       	neg	r11
    29e0:	a1 94       	neg	r10
    29e2:	b1 08       	sbc	r11, r1
    29e4:	ea 0c       	add	r14, r10
    29e6:	fb 1c       	adc	r15, r11
    29e8:	90 cf       	rjmp	.-224    	; 0x290a <strtod+0x1ec>
    29ea:	25 91       	lpm	r18, Z+
    29ec:	35 91       	lpm	r19, Z+
    29ee:	45 91       	lpm	r20, Z+
    29f0:	54 91       	lpm	r21, Z
    29f2:	69 81       	ldd	r22, Y+1	; 0x01
    29f4:	7a 81       	ldd	r23, Y+2	; 0x02
    29f6:	8b 81       	ldd	r24, Y+3	; 0x03
    29f8:	9c 81       	ldd	r25, Y+4	; 0x04
    29fa:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__mulsf3>
    29fe:	69 83       	std	Y+1, r22	; 0x01
    2a00:	7a 83       	std	Y+2, r23	; 0x02
    2a02:	8b 83       	std	Y+3, r24	; 0x03
    2a04:	9c 83       	std	Y+4, r25	; 0x04
    2a06:	e0 1a       	sub	r14, r16
    2a08:	f1 0a       	sbc	r15, r17
    2a0a:	89 81       	ldd	r24, Y+1	; 0x01
    2a0c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a0e:	ab 81       	ldd	r26, Y+3	; 0x03
    2a10:	bc 81       	ldd	r27, Y+4	; 0x04
    2a12:	ed 81       	ldd	r30, Y+5	; 0x05
    2a14:	fe 81       	ldd	r31, Y+6	; 0x06
    2a16:	e0 16       	cp	r14, r16
    2a18:	f1 06       	cpc	r15, r17
    2a1a:	3c f7       	brge	.-50     	; 0x29ea <strtod+0x2cc>
    2a1c:	34 97       	sbiw	r30, 0x04	; 4
    2a1e:	fe 83       	std	Y+6, r31	; 0x06
    2a20:	ed 83       	std	Y+5, r30	; 0x05
    2a22:	15 95       	asr	r17
    2a24:	07 95       	ror	r16
    2a26:	ec 15       	cp	r30, r12
    2a28:	fd 05       	cpc	r31, r13
    2a2a:	79 f7       	brne	.-34     	; 0x2a0a <strtod+0x2ec>
    2a2c:	8a 2f       	mov	r24, r26
    2a2e:	88 0f       	add	r24, r24
    2a30:	8b 2f       	mov	r24, r27
    2a32:	88 1f       	adc	r24, r24
    2a34:	8f 3f       	cpi	r24, 0xFF	; 255
    2a36:	59 f0       	breq	.+22     	; 0x2a4e <strtod+0x330>
    2a38:	20 e0       	ldi	r18, 0x00	; 0
    2a3a:	30 e0       	ldi	r19, 0x00	; 0
    2a3c:	a9 01       	movw	r20, r18
    2a3e:	69 81       	ldd	r22, Y+1	; 0x01
    2a40:	7a 81       	ldd	r23, Y+2	; 0x02
    2a42:	8b 81       	ldd	r24, Y+3	; 0x03
    2a44:	9c 81       	ldd	r25, Y+4	; 0x04
    2a46:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
    2a4a:	81 11       	cpse	r24, r1
    2a4c:	ec ce       	rjmp	.-552    	; 0x2826 <strtod+0x108>
    2a4e:	82 e2       	ldi	r24, 0x22	; 34
    2a50:	90 e0       	ldi	r25, 0x00	; 0
    2a52:	90 93 b2 03 	sts	0x03B2, r25	; 0x8003b2 <errno+0x1>
    2a56:	80 93 b1 03 	sts	0x03B1, r24	; 0x8003b1 <errno>
    2a5a:	e5 ce       	rjmp	.-566    	; 0x2826 <strtod+0x108>
    2a5c:	2b ec       	ldi	r18, 0xCB	; 203
    2a5e:	31 e0       	ldi	r19, 0x01	; 1
    2a60:	3e 83       	std	Y+6, r19	; 0x06
    2a62:	2d 83       	std	Y+5, r18	; 0x05
    2a64:	92 cf       	rjmp	.-220    	; 0x298a <strtod+0x26c>
    2a66:	80 e0       	ldi	r24, 0x00	; 0
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	a0 ec       	ldi	r26, 0xC0	; 192
    2a6c:	bf e7       	ldi	r27, 0x7F	; 127
    2a6e:	89 83       	std	Y+1, r24	; 0x01
    2a70:	9a 83       	std	Y+2, r25	; 0x02
    2a72:	ab 83       	std	Y+3, r26	; 0x03
    2a74:	bc 83       	std	Y+4, r27	; 0x04
    2a76:	d7 ce       	rjmp	.-594    	; 0x2826 <strtod+0x108>

00002a78 <__ftoa_engine>:
    2a78:	28 30       	cpi	r18, 0x08	; 8
    2a7a:	08 f0       	brcs	.+2      	; 0x2a7e <__ftoa_engine+0x6>
    2a7c:	27 e0       	ldi	r18, 0x07	; 7
    2a7e:	33 27       	eor	r19, r19
    2a80:	da 01       	movw	r26, r20
    2a82:	99 0f       	add	r25, r25
    2a84:	31 1d       	adc	r19, r1
    2a86:	87 fd       	sbrc	r24, 7
    2a88:	91 60       	ori	r25, 0x01	; 1
    2a8a:	00 96       	adiw	r24, 0x00	; 0
    2a8c:	61 05       	cpc	r22, r1
    2a8e:	71 05       	cpc	r23, r1
    2a90:	39 f4       	brne	.+14     	; 0x2aa0 <__ftoa_engine+0x28>
    2a92:	32 60       	ori	r19, 0x02	; 2
    2a94:	2e 5f       	subi	r18, 0xFE	; 254
    2a96:	3d 93       	st	X+, r19
    2a98:	30 e3       	ldi	r19, 0x30	; 48
    2a9a:	2a 95       	dec	r18
    2a9c:	e1 f7       	brne	.-8      	; 0x2a96 <__ftoa_engine+0x1e>
    2a9e:	08 95       	ret
    2aa0:	9f 3f       	cpi	r25, 0xFF	; 255
    2aa2:	30 f0       	brcs	.+12     	; 0x2ab0 <__ftoa_engine+0x38>
    2aa4:	80 38       	cpi	r24, 0x80	; 128
    2aa6:	71 05       	cpc	r23, r1
    2aa8:	61 05       	cpc	r22, r1
    2aaa:	09 f0       	breq	.+2      	; 0x2aae <__ftoa_engine+0x36>
    2aac:	3c 5f       	subi	r19, 0xFC	; 252
    2aae:	3c 5f       	subi	r19, 0xFC	; 252
    2ab0:	3d 93       	st	X+, r19
    2ab2:	91 30       	cpi	r25, 0x01	; 1
    2ab4:	08 f0       	brcs	.+2      	; 0x2ab8 <__ftoa_engine+0x40>
    2ab6:	80 68       	ori	r24, 0x80	; 128
    2ab8:	91 1d       	adc	r25, r1
    2aba:	df 93       	push	r29
    2abc:	cf 93       	push	r28
    2abe:	1f 93       	push	r17
    2ac0:	0f 93       	push	r16
    2ac2:	ff 92       	push	r15
    2ac4:	ef 92       	push	r14
    2ac6:	19 2f       	mov	r17, r25
    2ac8:	98 7f       	andi	r25, 0xF8	; 248
    2aca:	96 95       	lsr	r25
    2acc:	e9 2f       	mov	r30, r25
    2ace:	96 95       	lsr	r25
    2ad0:	96 95       	lsr	r25
    2ad2:	e9 0f       	add	r30, r25
    2ad4:	ff 27       	eor	r31, r31
    2ad6:	e7 5d       	subi	r30, 0xD7	; 215
    2ad8:	fd 4f       	sbci	r31, 0xFD	; 253
    2ada:	99 27       	eor	r25, r25
    2adc:	33 27       	eor	r19, r19
    2ade:	ee 24       	eor	r14, r14
    2ae0:	ff 24       	eor	r15, r15
    2ae2:	a7 01       	movw	r20, r14
    2ae4:	e7 01       	movw	r28, r14
    2ae6:	05 90       	lpm	r0, Z+
    2ae8:	08 94       	sec
    2aea:	07 94       	ror	r0
    2aec:	28 f4       	brcc	.+10     	; 0x2af8 <__ftoa_engine+0x80>
    2aee:	36 0f       	add	r19, r22
    2af0:	e7 1e       	adc	r14, r23
    2af2:	f8 1e       	adc	r15, r24
    2af4:	49 1f       	adc	r20, r25
    2af6:	51 1d       	adc	r21, r1
    2af8:	66 0f       	add	r22, r22
    2afa:	77 1f       	adc	r23, r23
    2afc:	88 1f       	adc	r24, r24
    2afe:	99 1f       	adc	r25, r25
    2b00:	06 94       	lsr	r0
    2b02:	a1 f7       	brne	.-24     	; 0x2aec <__ftoa_engine+0x74>
    2b04:	05 90       	lpm	r0, Z+
    2b06:	07 94       	ror	r0
    2b08:	28 f4       	brcc	.+10     	; 0x2b14 <__ftoa_engine+0x9c>
    2b0a:	e7 0e       	add	r14, r23
    2b0c:	f8 1e       	adc	r15, r24
    2b0e:	49 1f       	adc	r20, r25
    2b10:	56 1f       	adc	r21, r22
    2b12:	c1 1d       	adc	r28, r1
    2b14:	77 0f       	add	r23, r23
    2b16:	88 1f       	adc	r24, r24
    2b18:	99 1f       	adc	r25, r25
    2b1a:	66 1f       	adc	r22, r22
    2b1c:	06 94       	lsr	r0
    2b1e:	a1 f7       	brne	.-24     	; 0x2b08 <__ftoa_engine+0x90>
    2b20:	05 90       	lpm	r0, Z+
    2b22:	07 94       	ror	r0
    2b24:	28 f4       	brcc	.+10     	; 0x2b30 <__ftoa_engine+0xb8>
    2b26:	f8 0e       	add	r15, r24
    2b28:	49 1f       	adc	r20, r25
    2b2a:	56 1f       	adc	r21, r22
    2b2c:	c7 1f       	adc	r28, r23
    2b2e:	d1 1d       	adc	r29, r1
    2b30:	88 0f       	add	r24, r24
    2b32:	99 1f       	adc	r25, r25
    2b34:	66 1f       	adc	r22, r22
    2b36:	77 1f       	adc	r23, r23
    2b38:	06 94       	lsr	r0
    2b3a:	a1 f7       	brne	.-24     	; 0x2b24 <__ftoa_engine+0xac>
    2b3c:	05 90       	lpm	r0, Z+
    2b3e:	07 94       	ror	r0
    2b40:	20 f4       	brcc	.+8      	; 0x2b4a <__ftoa_engine+0xd2>
    2b42:	49 0f       	add	r20, r25
    2b44:	56 1f       	adc	r21, r22
    2b46:	c7 1f       	adc	r28, r23
    2b48:	d8 1f       	adc	r29, r24
    2b4a:	99 0f       	add	r25, r25
    2b4c:	66 1f       	adc	r22, r22
    2b4e:	77 1f       	adc	r23, r23
    2b50:	88 1f       	adc	r24, r24
    2b52:	06 94       	lsr	r0
    2b54:	a9 f7       	brne	.-22     	; 0x2b40 <__ftoa_engine+0xc8>
    2b56:	84 91       	lpm	r24, Z
    2b58:	10 95       	com	r17
    2b5a:	17 70       	andi	r17, 0x07	; 7
    2b5c:	41 f0       	breq	.+16     	; 0x2b6e <__ftoa_engine+0xf6>
    2b5e:	d6 95       	lsr	r29
    2b60:	c7 95       	ror	r28
    2b62:	57 95       	ror	r21
    2b64:	47 95       	ror	r20
    2b66:	f7 94       	ror	r15
    2b68:	e7 94       	ror	r14
    2b6a:	1a 95       	dec	r17
    2b6c:	c1 f7       	brne	.-16     	; 0x2b5e <__ftoa_engine+0xe6>
    2b6e:	ef ec       	ldi	r30, 0xCF	; 207
    2b70:	f1 e0       	ldi	r31, 0x01	; 1
    2b72:	68 94       	set
    2b74:	15 90       	lpm	r1, Z+
    2b76:	15 91       	lpm	r17, Z+
    2b78:	35 91       	lpm	r19, Z+
    2b7a:	65 91       	lpm	r22, Z+
    2b7c:	95 91       	lpm	r25, Z+
    2b7e:	05 90       	lpm	r0, Z+
    2b80:	7f e2       	ldi	r23, 0x2F	; 47
    2b82:	73 95       	inc	r23
    2b84:	e1 18       	sub	r14, r1
    2b86:	f1 0a       	sbc	r15, r17
    2b88:	43 0b       	sbc	r20, r19
    2b8a:	56 0b       	sbc	r21, r22
    2b8c:	c9 0b       	sbc	r28, r25
    2b8e:	d0 09       	sbc	r29, r0
    2b90:	c0 f7       	brcc	.-16     	; 0x2b82 <__ftoa_engine+0x10a>
    2b92:	e1 0c       	add	r14, r1
    2b94:	f1 1e       	adc	r15, r17
    2b96:	43 1f       	adc	r20, r19
    2b98:	56 1f       	adc	r21, r22
    2b9a:	c9 1f       	adc	r28, r25
    2b9c:	d0 1d       	adc	r29, r0
    2b9e:	7e f4       	brtc	.+30     	; 0x2bbe <__ftoa_engine+0x146>
    2ba0:	70 33       	cpi	r23, 0x30	; 48
    2ba2:	11 f4       	brne	.+4      	; 0x2ba8 <__ftoa_engine+0x130>
    2ba4:	8a 95       	dec	r24
    2ba6:	e6 cf       	rjmp	.-52     	; 0x2b74 <__ftoa_engine+0xfc>
    2ba8:	e8 94       	clt
    2baa:	01 50       	subi	r16, 0x01	; 1
    2bac:	30 f0       	brcs	.+12     	; 0x2bba <__ftoa_engine+0x142>
    2bae:	08 0f       	add	r16, r24
    2bb0:	0a f4       	brpl	.+2      	; 0x2bb4 <__ftoa_engine+0x13c>
    2bb2:	00 27       	eor	r16, r16
    2bb4:	02 17       	cp	r16, r18
    2bb6:	08 f4       	brcc	.+2      	; 0x2bba <__ftoa_engine+0x142>
    2bb8:	20 2f       	mov	r18, r16
    2bba:	23 95       	inc	r18
    2bbc:	02 2f       	mov	r16, r18
    2bbe:	7a 33       	cpi	r23, 0x3A	; 58
    2bc0:	28 f0       	brcs	.+10     	; 0x2bcc <__ftoa_engine+0x154>
    2bc2:	79 e3       	ldi	r23, 0x39	; 57
    2bc4:	7d 93       	st	X+, r23
    2bc6:	2a 95       	dec	r18
    2bc8:	e9 f7       	brne	.-6      	; 0x2bc4 <__ftoa_engine+0x14c>
    2bca:	10 c0       	rjmp	.+32     	; 0x2bec <__ftoa_engine+0x174>
    2bcc:	7d 93       	st	X+, r23
    2bce:	2a 95       	dec	r18
    2bd0:	89 f6       	brne	.-94     	; 0x2b74 <__ftoa_engine+0xfc>
    2bd2:	06 94       	lsr	r0
    2bd4:	97 95       	ror	r25
    2bd6:	67 95       	ror	r22
    2bd8:	37 95       	ror	r19
    2bda:	17 95       	ror	r17
    2bdc:	17 94       	ror	r1
    2bde:	e1 18       	sub	r14, r1
    2be0:	f1 0a       	sbc	r15, r17
    2be2:	43 0b       	sbc	r20, r19
    2be4:	56 0b       	sbc	r21, r22
    2be6:	c9 0b       	sbc	r28, r25
    2be8:	d0 09       	sbc	r29, r0
    2bea:	98 f0       	brcs	.+38     	; 0x2c12 <__ftoa_engine+0x19a>
    2bec:	23 95       	inc	r18
    2bee:	7e 91       	ld	r23, -X
    2bf0:	73 95       	inc	r23
    2bf2:	7a 33       	cpi	r23, 0x3A	; 58
    2bf4:	08 f0       	brcs	.+2      	; 0x2bf8 <__ftoa_engine+0x180>
    2bf6:	70 e3       	ldi	r23, 0x30	; 48
    2bf8:	7c 93       	st	X, r23
    2bfa:	20 13       	cpse	r18, r16
    2bfc:	b8 f7       	brcc	.-18     	; 0x2bec <__ftoa_engine+0x174>
    2bfe:	7e 91       	ld	r23, -X
    2c00:	70 61       	ori	r23, 0x10	; 16
    2c02:	7d 93       	st	X+, r23
    2c04:	30 f0       	brcs	.+12     	; 0x2c12 <__ftoa_engine+0x19a>
    2c06:	83 95       	inc	r24
    2c08:	71 e3       	ldi	r23, 0x31	; 49
    2c0a:	7d 93       	st	X+, r23
    2c0c:	70 e3       	ldi	r23, 0x30	; 48
    2c0e:	2a 95       	dec	r18
    2c10:	e1 f7       	brne	.-8      	; 0x2c0a <__ftoa_engine+0x192>
    2c12:	11 24       	eor	r1, r1
    2c14:	ef 90       	pop	r14
    2c16:	ff 90       	pop	r15
    2c18:	0f 91       	pop	r16
    2c1a:	1f 91       	pop	r17
    2c1c:	cf 91       	pop	r28
    2c1e:	df 91       	pop	r29
    2c20:	99 27       	eor	r25, r25
    2c22:	87 fd       	sbrc	r24, 7
    2c24:	90 95       	com	r25
    2c26:	08 95       	ret

00002c28 <__ctype_isfalse>:
    2c28:	99 27       	eor	r25, r25
    2c2a:	88 27       	eor	r24, r24

00002c2c <__ctype_istrue>:
    2c2c:	08 95       	ret

00002c2e <isspace>:
    2c2e:	91 11       	cpse	r25, r1
    2c30:	0c 94 14 16 	jmp	0x2c28	; 0x2c28 <__ctype_isfalse>
    2c34:	80 32       	cpi	r24, 0x20	; 32
    2c36:	19 f0       	breq	.+6      	; 0x2c3e <isspace+0x10>
    2c38:	89 50       	subi	r24, 0x09	; 9
    2c3a:	85 50       	subi	r24, 0x05	; 5
    2c3c:	c8 f7       	brcc	.-14     	; 0x2c30 <isspace+0x2>
    2c3e:	08 95       	ret

00002c40 <strncasecmp_P>:
    2c40:	fb 01       	movw	r30, r22
    2c42:	dc 01       	movw	r26, r24
    2c44:	41 50       	subi	r20, 0x01	; 1
    2c46:	50 40       	sbci	r21, 0x00	; 0
    2c48:	88 f0       	brcs	.+34     	; 0x2c6c <strncasecmp_P+0x2c>
    2c4a:	8d 91       	ld	r24, X+
    2c4c:	81 34       	cpi	r24, 0x41	; 65
    2c4e:	1c f0       	brlt	.+6      	; 0x2c56 <strncasecmp_P+0x16>
    2c50:	8b 35       	cpi	r24, 0x5B	; 91
    2c52:	0c f4       	brge	.+2      	; 0x2c56 <strncasecmp_P+0x16>
    2c54:	80 5e       	subi	r24, 0xE0	; 224
    2c56:	65 91       	lpm	r22, Z+
    2c58:	61 34       	cpi	r22, 0x41	; 65
    2c5a:	1c f0       	brlt	.+6      	; 0x2c62 <strncasecmp_P+0x22>
    2c5c:	6b 35       	cpi	r22, 0x5B	; 91
    2c5e:	0c f4       	brge	.+2      	; 0x2c62 <strncasecmp_P+0x22>
    2c60:	60 5e       	subi	r22, 0xE0	; 224
    2c62:	86 1b       	sub	r24, r22
    2c64:	61 11       	cpse	r22, r1
    2c66:	71 f3       	breq	.-36     	; 0x2c44 <strncasecmp_P+0x4>
    2c68:	99 0b       	sbc	r25, r25
    2c6a:	08 95       	ret
    2c6c:	88 1b       	sub	r24, r24
    2c6e:	fc cf       	rjmp	.-8      	; 0x2c68 <strncasecmp_P+0x28>

00002c70 <memset>:
    2c70:	dc 01       	movw	r26, r24
    2c72:	01 c0       	rjmp	.+2      	; 0x2c76 <memset+0x6>
    2c74:	6d 93       	st	X+, r22
    2c76:	41 50       	subi	r20, 0x01	; 1
    2c78:	50 40       	sbci	r21, 0x00	; 0
    2c7a:	e0 f7       	brcc	.-8      	; 0x2c74 <memset+0x4>
    2c7c:	08 95       	ret

00002c7e <__muluhisi3>:
    2c7e:	0e 94 81 16 	call	0x2d02	; 0x2d02 <__umulhisi3>
    2c82:	a5 9f       	mul	r26, r21
    2c84:	90 0d       	add	r25, r0
    2c86:	b4 9f       	mul	r27, r20
    2c88:	90 0d       	add	r25, r0
    2c8a:	a4 9f       	mul	r26, r20
    2c8c:	80 0d       	add	r24, r0
    2c8e:	91 1d       	adc	r25, r1
    2c90:	11 24       	eor	r1, r1
    2c92:	08 95       	ret

00002c94 <__prologue_saves__>:
    2c94:	2f 92       	push	r2
    2c96:	3f 92       	push	r3
    2c98:	4f 92       	push	r4
    2c9a:	5f 92       	push	r5
    2c9c:	6f 92       	push	r6
    2c9e:	7f 92       	push	r7
    2ca0:	8f 92       	push	r8
    2ca2:	9f 92       	push	r9
    2ca4:	af 92       	push	r10
    2ca6:	bf 92       	push	r11
    2ca8:	cf 92       	push	r12
    2caa:	df 92       	push	r13
    2cac:	ef 92       	push	r14
    2cae:	ff 92       	push	r15
    2cb0:	0f 93       	push	r16
    2cb2:	1f 93       	push	r17
    2cb4:	cf 93       	push	r28
    2cb6:	df 93       	push	r29
    2cb8:	cd b7       	in	r28, 0x3d	; 61
    2cba:	de b7       	in	r29, 0x3e	; 62
    2cbc:	ca 1b       	sub	r28, r26
    2cbe:	db 0b       	sbc	r29, r27
    2cc0:	0f b6       	in	r0, 0x3f	; 63
    2cc2:	f8 94       	cli
    2cc4:	de bf       	out	0x3e, r29	; 62
    2cc6:	0f be       	out	0x3f, r0	; 63
    2cc8:	cd bf       	out	0x3d, r28	; 61
    2cca:	09 94       	ijmp

00002ccc <__epilogue_restores__>:
    2ccc:	2a 88       	ldd	r2, Y+18	; 0x12
    2cce:	39 88       	ldd	r3, Y+17	; 0x11
    2cd0:	48 88       	ldd	r4, Y+16	; 0x10
    2cd2:	5f 84       	ldd	r5, Y+15	; 0x0f
    2cd4:	6e 84       	ldd	r6, Y+14	; 0x0e
    2cd6:	7d 84       	ldd	r7, Y+13	; 0x0d
    2cd8:	8c 84       	ldd	r8, Y+12	; 0x0c
    2cda:	9b 84       	ldd	r9, Y+11	; 0x0b
    2cdc:	aa 84       	ldd	r10, Y+10	; 0x0a
    2cde:	b9 84       	ldd	r11, Y+9	; 0x09
    2ce0:	c8 84       	ldd	r12, Y+8	; 0x08
    2ce2:	df 80       	ldd	r13, Y+7	; 0x07
    2ce4:	ee 80       	ldd	r14, Y+6	; 0x06
    2ce6:	fd 80       	ldd	r15, Y+5	; 0x05
    2ce8:	0c 81       	ldd	r16, Y+4	; 0x04
    2cea:	1b 81       	ldd	r17, Y+3	; 0x03
    2cec:	aa 81       	ldd	r26, Y+2	; 0x02
    2cee:	b9 81       	ldd	r27, Y+1	; 0x01
    2cf0:	ce 0f       	add	r28, r30
    2cf2:	d1 1d       	adc	r29, r1
    2cf4:	0f b6       	in	r0, 0x3f	; 63
    2cf6:	f8 94       	cli
    2cf8:	de bf       	out	0x3e, r29	; 62
    2cfa:	0f be       	out	0x3f, r0	; 63
    2cfc:	cd bf       	out	0x3d, r28	; 61
    2cfe:	ed 01       	movw	r28, r26
    2d00:	08 95       	ret

00002d02 <__umulhisi3>:
    2d02:	a2 9f       	mul	r26, r18
    2d04:	b0 01       	movw	r22, r0
    2d06:	b3 9f       	mul	r27, r19
    2d08:	c0 01       	movw	r24, r0
    2d0a:	a3 9f       	mul	r26, r19
    2d0c:	70 0d       	add	r23, r0
    2d0e:	81 1d       	adc	r24, r1
    2d10:	11 24       	eor	r1, r1
    2d12:	91 1d       	adc	r25, r1
    2d14:	b2 9f       	mul	r27, r18
    2d16:	70 0d       	add	r23, r0
    2d18:	81 1d       	adc	r24, r1
    2d1a:	11 24       	eor	r1, r1
    2d1c:	91 1d       	adc	r25, r1
    2d1e:	08 95       	ret

00002d20 <_exit>:
    2d20:	f8 94       	cli

00002d22 <__stop_program>:
    2d22:	ff cf       	rjmp	.-2      	; 0x2d22 <__stop_program>
    2d24:	0f 04       	cpc	r0, r15
    2d26:	5f 04       	cpc	r5, r15
    2d28:	66 04       	cpc	r6, r6
    2d2a:	89 04       	cpc	r8, r9
    2d2c:	ac 04       	cpc	r10, r12
    2d2e:	cf 04       	cpc	r12, r15
    2d30:	ea 04       	cpc	r14, r10
    2d32:	09 05       	cpc	r16, r9
    2d34:	22 04       	cpc	r2, r2
    2d36:	32 04       	cpc	r3, r2
    2d38:	3d 04       	cpc	r3, r13
    2d3a:	48 04       	cpc	r4, r8
    2d3c:	1c 05       	cpc	r17, r12
    2d3e:	68 07       	cpc	r22, r24
    2d40:	cd 06       	cpc	r12, r29
    2d42:	c5 06       	cpc	r12, r21
    2d44:	bd 06       	cpc	r11, r29
    2d46:	66 07       	cpc	r22, r22
    2d48:	cb 06       	cpc	r12, r27
    2d4a:	c3 06       	cpc	r12, r19
    2d4c:	bb 06       	cpc	r11, r27
    2d4e:	fb 06       	cpc	r15, r27
    2d50:	c9 06       	cpc	r12, r25
    2d52:	c1 06       	cpc	r12, r17
    2d54:	b9 06       	cpc	r11, r25
    2d56:	cf 06       	cpc	r12, r31
    2d58:	c7 06       	cpc	r12, r23
    2d5a:	bf 06       	cpc	r11, r31
    2d5c:	9c 06       	cpc	r9, r28
    2d5e:	91 0a       	sbc	r9, r17
    2d60:	87 0a       	sbc	r8, r23
    2d62:	47 0a       	sbc	r4, r23
    2d64:	3b 0a       	sbc	r3, r27
    2d66:	8f 0a       	sbc	r8, r31
    2d68:	83 0a       	sbc	r8, r19
    2d6a:	45 0a       	sbc	r4, r21
    2d6c:	30 0a       	sbc	r3, r16
    2d6e:	8d 0a       	sbc	r8, r29
    2d70:	4f 0a       	sbc	r4, r31
    2d72:	43 0a       	sbc	r4, r19
    2d74:	ee 09       	sbc	r30, r14
    2d76:	8b 0a       	sbc	r8, r27
    2d78:	4b 0a       	sbc	r4, r27
    2d7a:	3f 0a       	sbc	r3, r31
    2d7c:	d1 09       	sbc	r29, r1
    2d7e:	c9 0a       	sbc	r12, r25
    2d80:	3f 0b       	sbc	r19, r31
    2d82:	11 0b       	sbc	r17, r17
    2d84:	cf 0a       	sbc	r12, r31
    2d86:	c7 0a       	sbc	r12, r23
    2d88:	c1 0a       	sbc	r12, r17
    2d8a:	e9 0a       	sbc	r14, r25
    2d8c:	cd 0a       	sbc	r12, r29
    2d8e:	c5 0a       	sbc	r12, r21
    2d90:	bf 0a       	sbc	r11, r31
    2d92:	d1 0a       	sbc	r13, r17
    2d94:	cb 0a       	sbc	r12, r27
    2d96:	c3 0a       	sbc	r12, r19
    2d98:	b4 0a       	sbc	r11, r20
    2d9a:	3f 0b       	sbc	r19, r31
    2d9c:	3f 0b       	sbc	r19, r31
    2d9e:	3f 0b       	sbc	r19, r31
    2da0:	3f 0b       	sbc	r19, r31
    2da2:	3f 0b       	sbc	r19, r31
    2da4:	3f 0b       	sbc	r19, r31
    2da6:	3f 0b       	sbc	r19, r31
    2da8:	3f 0b       	sbc	r19, r31
    2daa:	3f 0b       	sbc	r19, r31
    2dac:	2b 0b       	sbc	r18, r27
    2dae:	3f 0b       	sbc	r19, r31
    2db0:	13 0b       	sbc	r17, r19
